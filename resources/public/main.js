if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExecModule_(url);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in (obj)) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.170";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.into_array;
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__20864__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__20864 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__20865__i = 0, G__20865__a = new Array(arguments.length - 0);
        while (G__20865__i < G__20865__a.length) {
          G__20865__a[G__20865__i] = arguments[G__20865__i + 0];
          ++G__20865__i;
        }
        args = new cljs.core.IndexedSeq(G__20865__a, 0);
      }
      return G__20864__delegate.call(this, args);
    };
    G__20864.cljs$lang$maxFixedArity = 0;
    G__20864.cljs$lang$applyTo = function(arglist__20866) {
      var args = cljs.core.seq(arglist__20866);
      return G__20864__delegate(args);
    };
    G__20864.cljs$core$IFn$_invoke$arity$variadic = G__20864__delegate;
    return G__20864;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__20867__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__20867 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__20868__i = 0, G__20868__a = new Array(arguments.length - 0);
        while (G__20868__i < G__20868__a.length) {
          G__20868__a[G__20868__i] = arguments[G__20868__i + 0];
          ++G__20868__i;
        }
        args = new cljs.core.IndexedSeq(G__20868__a, 0);
      }
      return G__20867__delegate.call(this, args);
    };
    G__20867.cljs$lang$maxFixedArity = 0;
    G__20867.cljs$lang$applyTo = function(arglist__20869) {
      var args = cljs.core.seq(arglist__20869);
      return G__20867__delegate(args);
    };
    G__20867.cljs$core$IFn$_invoke$arity$variadic = G__20867__delegate;
    return G__20867;
  }();
  return null;
};
cljs.core._STAR_1;
cljs.core._STAR_2;
cljs.core._STAR_3;
cljs.core._STAR_e;
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.instance_QMARK_;
cljs.core.Keyword;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4673__auto__ = ty;
    if (cljs.core.truth_(and__4673__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4673__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args20870 = [];
  var len__5743__auto___20873 = arguments.length;
  var i__5744__auto___20874 = 0;
  while (true) {
    if (i__5744__auto___20874 < len__5743__auto___20873) {
      args20870.push(arguments[i__5744__auto___20874]);
      var G__20875 = i__5744__auto___20874 + 1;
      i__5744__auto___20874 = G__20875;
      continue;
    } else {
    }
    break;
  }
  var G__20872 = args20870.length;
  switch(G__20872) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20870.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5588__auto___20877 = len;
  var i_20878 = 0;
  while (true) {
    if (i_20878 < n__5588__auto___20877) {
      new_arr[i_20878] = arr[i_20878];
      var G__20879 = i_20878 + 1;
      i_20878 = G__20879;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__20880 = i + 1;
      i = G__20880;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.apply;
cljs.core.aget = function cljs$core$aget(var_args) {
  var args20881 = [];
  var len__5743__auto___20890 = arguments.length;
  var i__5744__auto___20891 = 0;
  while (true) {
    if (i__5744__auto___20891 < len__5743__auto___20890) {
      args20881.push(arguments[i__5744__auto___20891]);
      var G__20892 = i__5744__auto___20891 + 1;
      i__5744__auto___20891 = G__20892;
      continue;
    } else {
    }
    break;
  }
  var G__20886 = args20881.length;
  switch(G__20886) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args20881.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__20887 = cljs.core.aget;
  var G__20888 = array[i];
  var G__20889 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__20887, G__20888, G__20889) : cljs.core.apply.call(null, G__20887, G__20888, G__20889);
};
cljs.core.aget.cljs$lang$applyTo = function(seq20882) {
  var G__20883 = cljs.core.first(seq20882);
  var seq20882__$1 = cljs.core.next(seq20882);
  var G__20884 = cljs.core.first(seq20882__$1);
  var seq20882__$2 = cljs.core.next(seq20882__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__20883, G__20884, seq20882__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args20894 = [];
  var len__5743__auto___20905 = arguments.length;
  var i__5744__auto___20906 = 0;
  while (true) {
    if (i__5744__auto___20906 < len__5743__auto___20905) {
      args20894.push(arguments[i__5744__auto___20906]);
      var G__20907 = i__5744__auto___20906 + 1;
      i__5744__auto___20906 = G__20907;
      continue;
    } else {
    }
    break;
  }
  var G__20900 = args20894.length;
  switch(G__20900) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args20894.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__20901 = cljs.core.aset;
  var G__20902 = array[idx];
  var G__20903 = idx2;
  var G__20904 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__20901, G__20902, G__20903, G__20904) : cljs.core.apply.call(null, G__20901, G__20902, G__20903, G__20904);
};
cljs.core.aset.cljs$lang$applyTo = function(seq20895) {
  var G__20896 = cljs.core.first(seq20895);
  var seq20895__$1 = cljs.core.next(seq20895);
  var G__20897 = cljs.core.first(seq20895__$1);
  var seq20895__$2 = cljs.core.next(seq20895__$1);
  var G__20898 = cljs.core.first(seq20895__$2);
  var seq20895__$3 = cljs.core.next(seq20895__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__20896, G__20897, G__20898, seq20895__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.reduce;
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args20909 = [];
  var len__5743__auto___20915 = arguments.length;
  var i__5744__auto___20916 = 0;
  while (true) {
    if (i__5744__auto___20916 < len__5743__auto___20915) {
      args20909.push(arguments[i__5744__auto___20916]);
      var G__20917 = i__5744__auto___20916 + 1;
      i__5744__auto___20916 = G__20917;
      continue;
    } else {
    }
    break;
  }
  var G__20911 = args20909.length;
  switch(G__20911) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20909.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__20912 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__20913 = [];
  var G__20914 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20912, G__20913, G__20914) : cljs.core.reduce.call(null, G__20912, G__20913, G__20914);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___20922 = arguments.length;
  var i__5744__auto___20923 = 0;
  while (true) {
    if (i__5744__auto___20923 < len__5743__auto___20922) {
      args__5750__auto__.push(arguments[i__5744__auto___20923]);
      var G__20924 = i__5744__auto___20923 + 1;
      i__5744__auto___20923 = G__20924;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq20919) {
  var G__20920 = cljs.core.first(seq20919);
  var seq20919__$1 = cljs.core.next(seq20919);
  var G__20921 = cljs.core.first(seq20919__$1);
  var seq20919__$2 = cljs.core.next(seq20919__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__20920, G__20921, seq20919__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args20925 = [];
  var len__5743__auto___20928 = arguments.length;
  var i__5744__auto___20929 = 0;
  while (true) {
    if (i__5744__auto___20929 < len__5743__auto___20928) {
      args20925.push(arguments[i__5744__auto___20929]);
      var G__20930 = i__5744__auto___20929 + 1;
      i__5744__auto___20929 = G__20930;
      continue;
    } else {
    }
    break;
  }
  var G__20927 = args20925.length;
  switch(G__20927) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20925.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5341__auto__.call(null, this$);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__5341__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5341__auto__.call(null, this$, a);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5341__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5341__auto__.call(null, this$, a, b);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5341__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5341__auto__.call(null, this$, a, b, c);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5341__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5341__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5341__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$6 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5341__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5341__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$7 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5341__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$8 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$9 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$10 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$11 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$12 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$13 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$14 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$15 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$16 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$17 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$18 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$19 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$20 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$21 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._invoke[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$22 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5341__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__5341__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5341__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__5340__auto__ = value == null ? null : value;
    var m__5341__auto__ = cljs.core._clone[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5341__auto__.call(null, value);
    } else {
      var m__5341__auto____$1 = cljs.core._clone["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__5341__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._count[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._count["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._empty[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._empty["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._conj[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5341__auto__.call(null, coll, o);
    } else {
      var m__5341__auto____$1 = cljs.core._conj["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5341__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args20932 = [];
  var len__5743__auto___20935 = arguments.length;
  var i__5744__auto___20936 = 0;
  while (true) {
    if (i__5744__auto___20936 < len__5743__auto___20935) {
      args20932.push(arguments[i__5744__auto___20936]);
      var G__20937 = i__5744__auto___20936 + 1;
      i__5744__auto___20936 = G__20937;
      continue;
    } else {
    }
    break;
  }
  var G__20934 = args20932.length;
  switch(G__20934) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20932.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._nth[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5341__auto__.call(null, coll, n);
    } else {
      var m__5341__auto____$1 = cljs.core._nth["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5341__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._nth[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5341__auto__.call(null, coll, n, not_found);
    } else {
      var m__5341__auto____$1 = cljs.core._nth["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5341__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._first[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._first["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._rest[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._rest["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._next[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._next["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args20939 = [];
  var len__5743__auto___20942 = arguments.length;
  var i__5744__auto___20943 = 0;
  while (true) {
    if (i__5744__auto___20943 < len__5743__auto___20942) {
      args20939.push(arguments[i__5744__auto___20943]);
      var G__20944 = i__5744__auto___20943 + 1;
      i__5744__auto___20943 = G__20944;
      continue;
    } else {
    }
    break;
  }
  var G__20941 = args20939.length;
  switch(G__20941) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20939.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._lookup[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__5341__auto__.call(null, o, k);
    } else {
      var m__5341__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__5341__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._lookup[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5341__auto__.call(null, o, k, not_found);
    } else {
      var m__5341__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5341__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5341__auto__.call(null, coll, k);
    } else {
      var m__5341__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5341__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._assoc[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5341__auto__.call(null, coll, k, v);
    } else {
      var m__5341__auto____$1 = cljs.core._assoc["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5341__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._dissoc[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5341__auto__.call(null, coll, k);
    } else {
      var m__5341__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5341__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._key[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._key["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._val[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._val["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._disjoin[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5341__auto__.call(null, coll, v);
    } else {
      var m__5341__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5341__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._peek[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._peek["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._pop[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._pop["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._assoc_n[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5341__auto__.call(null, coll, n, val);
    } else {
      var m__5341__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5341__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._deref[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5341__auto__.call(null, o);
    } else {
      var m__5341__auto____$1 = cljs.core._deref["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5341__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5341__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__5341__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5341__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._meta[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5341__auto__.call(null, o);
    } else {
      var m__5341__auto____$1 = cljs.core._meta["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5341__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._with_meta[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5341__auto__.call(null, o, meta);
    } else {
      var m__5341__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5341__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args20946 = [];
  var len__5743__auto___20949 = arguments.length;
  var i__5744__auto___20950 = 0;
  while (true) {
    if (i__5744__auto___20950 < len__5743__auto___20949) {
      args20946.push(arguments[i__5744__auto___20950]);
      var G__20951 = i__5744__auto___20950 + 1;
      i__5744__auto___20950 = G__20951;
      continue;
    } else {
    }
    break;
  }
  var G__20948 = args20946.length;
  switch(G__20948) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20946.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._reduce[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5341__auto__.call(null, coll, f);
    } else {
      var m__5341__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5341__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._reduce[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5341__auto__.call(null, coll, f, start);
    } else {
      var m__5341__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5341__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._kv_reduce[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5341__auto__.call(null, coll, f, init);
    } else {
      var m__5341__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5341__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._equiv[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__5341__auto__.call(null, o, other);
    } else {
      var m__5341__auto____$1 = cljs.core._equiv["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__5341__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._hash[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5341__auto__.call(null, o);
    } else {
      var m__5341__auto____$1 = cljs.core._hash["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5341__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._seq[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5341__auto__.call(null, o);
    } else {
      var m__5341__auto____$1 = cljs.core._seq["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5341__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._rseq[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._rseq["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._sorted_seq[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5341__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__5341__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5341__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5341__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__5341__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5341__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._entry_key[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5341__auto__.call(null, coll, entry);
    } else {
      var m__5341__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5341__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._comparator[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._comparator["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__5340__auto__ = writer == null ? null : writer;
    var m__5341__auto__ = cljs.core._write[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5341__auto__.call(null, writer, s);
    } else {
      var m__5341__auto____$1 = cljs.core._write["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5341__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__5340__auto__ = writer == null ? null : writer;
    var m__5341__auto__ = cljs.core._flush[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__5341__auto__.call(null, writer);
    } else {
      var m__5341__auto____$1 = cljs.core._flush["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__5341__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._pr_writer[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5341__auto__.call(null, o, writer, opts);
    } else {
      var m__5341__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5341__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__5340__auto__ = d == null ? null : d;
    var m__5341__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__5341__auto__.call(null, d);
    } else {
      var m__5341__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__5341__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._notify_watches[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5341__auto__.call(null, this$, oldval, newval);
    } else {
      var m__5341__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5341__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._add_watch[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5341__auto__.call(null, this$, key, f);
    } else {
      var m__5341__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5341__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core._remove_watch[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5341__auto__.call(null, this$, key);
    } else {
      var m__5341__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5341__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._as_transient[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__5340__auto__ = tcoll == null ? null : tcoll;
    var m__5341__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5341__auto__.call(null, tcoll, val);
    } else {
      var m__5341__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5341__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__5340__auto__ = tcoll == null ? null : tcoll;
    var m__5341__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5341__auto__.call(null, tcoll);
    } else {
      var m__5341__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5341__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__5340__auto__ = tcoll == null ? null : tcoll;
    var m__5341__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5341__auto__.call(null, tcoll, key, val);
    } else {
      var m__5341__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5341__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__5340__auto__ = tcoll == null ? null : tcoll;
    var m__5341__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5341__auto__.call(null, tcoll, key);
    } else {
      var m__5341__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5341__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__5340__auto__ = tcoll == null ? null : tcoll;
    var m__5341__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5341__auto__.call(null, tcoll, n, val);
    } else {
      var m__5341__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5341__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__5340__auto__ = tcoll == null ? null : tcoll;
    var m__5341__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5341__auto__.call(null, tcoll);
    } else {
      var m__5341__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5341__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__5340__auto__ = tcoll == null ? null : tcoll;
    var m__5341__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5341__auto__.call(null, tcoll, v);
    } else {
      var m__5341__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5341__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__5340__auto__ = x == null ? null : x;
    var m__5341__auto__ = cljs.core._compare[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__5341__auto__.call(null, x, y);
    } else {
      var m__5341__auto____$1 = cljs.core._compare["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__5341__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._drop_first[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._chunked_first[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._chunked_rest[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._chunked_next[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__5340__auto__ = x == null ? null : x;
    var m__5341__auto__ = cljs.core._name[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5341__auto__.call(null, x);
    } else {
      var m__5341__auto____$1 = cljs.core._name["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5341__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__5340__auto__ = x == null ? null : x;
    var m__5341__auto__ = cljs.core._namespace[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5341__auto__.call(null, x);
    } else {
      var m__5341__auto____$1 = cljs.core._namespace["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5341__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5341__auto__.call(null, o, new_value);
    } else {
      var m__5341__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5341__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args20953 = [];
  var len__5743__auto___20956 = arguments.length;
  var i__5744__auto___20957 = 0;
  while (true) {
    if (i__5744__auto___20957 < len__5743__auto___20956) {
      args20953.push(arguments[i__5744__auto___20957]);
      var G__20958 = i__5744__auto___20957 + 1;
      i__5744__auto___20957 = G__20958;
      continue;
    } else {
    }
    break;
  }
  var G__20955 = args20953.length;
  switch(G__20955) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20953.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__5341__auto__.call(null, o, f);
    } else {
      var m__5341__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__5341__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5341__auto__.call(null, o, f, a);
    } else {
      var m__5341__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5341__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5341__auto__.call(null, o, f, a, b);
    } else {
      var m__5341__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5341__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5341__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__5341__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5341__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__5340__auto__ = o == null ? null : o;
    var m__5341__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5341__auto__.call(null, o, new_value);
    } else {
      var m__5341__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5341__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__5340__auto__ = coll == null ? null : coll;
    var m__5341__auto__ = cljs.core._iterator[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto__.call(null, coll);
    } else {
      var m__5341__auto____$1 = cljs.core._iterator["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5341__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__20960 = i + 2;
        var G__20961 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__20960;
        h1 = G__20961;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.list;
cljs.core.Symbol;
cljs.core._EQ_;
cljs.core.compare;
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__20964 = i + 1;
          var G__20965 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__20964;
          hash = G__20965;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = cljs.core.not(a.ns);
      if (and__4673__auto__) {
        return b.ns;
      } else {
        return and__4673__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__20978 = a.ns;
            var G__20979 = b.ns;
            return goog.array.defaultCompare(G__20978, G__20979);
          }();
          if (0 === nsc) {
            var G__20980 = a.name;
            var G__20981 = b.name;
            return goog.array.defaultCompare(G__20980, G__20981);
          } else {
            return nsc;
          }
        }
      } else {
        var G__20982 = a.name;
        var G__20983 = b.name;
        return goog.array.defaultCompare(G__20982, G__20983);
      }
    }
  }
};
cljs.core.get;
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__20985 = null;
  var G__20985__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__20985__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__20985 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20985__2.call(this, self__, coll);
      case 3:
        return G__20985__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20985.cljs$core$IFn$_invoke$arity$2 = G__20985__2;
  G__20985.cljs$core$IFn$_invoke$arity$3 = G__20985__3;
  return G__20985;
}();
cljs.core.Symbol.prototype.apply = function(self__, args20984) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20984)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__5120__auto__ = self__._hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args20986 = [];
  var len__5743__auto___20989 = arguments.length;
  var i__5744__auto___20990 = 0;
  while (true) {
    if (i__5744__auto___20990 < len__5743__auto___20989) {
      args20986.push(arguments[i__5744__auto___20990]);
      var G__20991 = i__5744__auto___20990 + 1;
      i__5744__auto___20990 = G__20991;
      continue;
    } else {
    }
    break;
  }
  var G__20988 = args20986.length;
  switch(G__20988) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20986.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__20994 = this$__$1.sym;
    var G__20995 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__20994, G__20995) : cljs.core._EQ_.call(null, G__20994, G__20995);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__21040 = null;
  var G__21040__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__21040__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__21040__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__21040__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__21040__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__21040__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__21040__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__21040__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__21040__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__21040__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__21040__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__21040__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__21040__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__21040__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__21040__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__21040__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__21040__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__21040__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__21040__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__21040__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__21040__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__21040__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__20996 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__20997 = a;
    var G__20998 = b;
    var G__20999 = c;
    var G__21000 = d;
    var G__21001 = e;
    var G__21002 = f;
    var G__21003 = g;
    var G__21004 = h;
    var G__21005 = i;
    var G__21006 = j;
    var G__21007 = k;
    var G__21008 = l;
    var G__21009 = m;
    var G__21010 = n;
    var G__21011 = o;
    var G__21012 = p;
    var G__21013 = q;
    var G__21014 = r;
    var G__21015 = s;
    var G__21016 = t;
    var G__21017 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20996, G__20997, G__20998, G__20999, G__21000, G__21001, G__21002, G__21003, G__21004, G__21005, G__21006, G__21007, G__21008, G__21009, G__21010, G__21011, G__21012, G__21013, G__21014, G__21015, G__21016, G__21017) : cljs.core.apply.call(null, G__20996, G__20997, G__20998, G__20999, G__21000, G__21001, G__21002, G__21003, G__21004, G__21005, G__21006, G__21007, G__21008, G__21009, G__21010, 
    G__21011, G__21012, G__21013, G__21014, G__21015, G__21016, G__21017);
  };
  G__21040 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__21040__1.call(this, self__);
      case 2:
        return G__21040__2.call(this, self__, a);
      case 3:
        return G__21040__3.call(this, self__, a, b);
      case 4:
        return G__21040__4.call(this, self__, a, b, c);
      case 5:
        return G__21040__5.call(this, self__, a, b, c, d);
      case 6:
        return G__21040__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__21040__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__21040__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__21040__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__21040__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__21040__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__21040__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__21040__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__21040__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__21040__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__21040__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__21040__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__21040__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__21040__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__21040__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__21040__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__21040__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21040.cljs$core$IFn$_invoke$arity$1 = G__21040__1;
  G__21040.cljs$core$IFn$_invoke$arity$2 = G__21040__2;
  G__21040.cljs$core$IFn$_invoke$arity$3 = G__21040__3;
  G__21040.cljs$core$IFn$_invoke$arity$4 = G__21040__4;
  G__21040.cljs$core$IFn$_invoke$arity$5 = G__21040__5;
  G__21040.cljs$core$IFn$_invoke$arity$6 = G__21040__6;
  G__21040.cljs$core$IFn$_invoke$arity$7 = G__21040__7;
  G__21040.cljs$core$IFn$_invoke$arity$8 = G__21040__8;
  G__21040.cljs$core$IFn$_invoke$arity$9 = G__21040__9;
  G__21040.cljs$core$IFn$_invoke$arity$10 = G__21040__10;
  G__21040.cljs$core$IFn$_invoke$arity$11 = G__21040__11;
  G__21040.cljs$core$IFn$_invoke$arity$12 = G__21040__12;
  G__21040.cljs$core$IFn$_invoke$arity$13 = G__21040__13;
  G__21040.cljs$core$IFn$_invoke$arity$14 = G__21040__14;
  G__21040.cljs$core$IFn$_invoke$arity$15 = G__21040__15;
  G__21040.cljs$core$IFn$_invoke$arity$16 = G__21040__16;
  G__21040.cljs$core$IFn$_invoke$arity$17 = G__21040__17;
  G__21040.cljs$core$IFn$_invoke$arity$18 = G__21040__18;
  G__21040.cljs$core$IFn$_invoke$arity$19 = G__21040__19;
  G__21040.cljs$core$IFn$_invoke$arity$20 = G__21040__20;
  G__21040.cljs$core$IFn$_invoke$arity$21 = G__21040__21;
  G__21040.cljs$core$IFn$_invoke$arity$22 = G__21040__22;
  return G__21040;
}();
cljs.core.Var.prototype.apply = function(self__, args20993) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20993)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__21018 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__21019 = a;
  var G__21020 = b;
  var G__21021 = c;
  var G__21022 = d;
  var G__21023 = e;
  var G__21024 = f;
  var G__21025 = g;
  var G__21026 = h;
  var G__21027 = i;
  var G__21028 = j;
  var G__21029 = k;
  var G__21030 = l;
  var G__21031 = m;
  var G__21032 = n;
  var G__21033 = o;
  var G__21034 = p;
  var G__21035 = q;
  var G__21036 = r;
  var G__21037 = s;
  var G__21038 = t;
  var G__21039 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21018, G__21019, G__21020, G__21021, G__21022, G__21023, G__21024, G__21025, G__21026, G__21027, G__21028, G__21029, G__21030, G__21031, G__21032, G__21033, G__21034, G__21035, G__21036, G__21037, G__21038, G__21039) : cljs.core.apply.call(null, G__21018, G__21019, G__21020, G__21021, G__21022, G__21023, G__21024, G__21025, G__21026, G__21027, G__21028, G__21029, G__21030, G__21031, G__21032, 
  G__21033, G__21034, G__21035, G__21036, G__21037, G__21038, G__21039);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.array_seq;
cljs.core.prim_seq;
cljs.core.IndexedSeq;
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args21053 = [];
  var len__5743__auto___21059 = arguments.length;
  var i__5744__auto___21060 = 0;
  while (true) {
    if (i__5744__auto___21060 < len__5743__auto___21059) {
      args21053.push(arguments[i__5744__auto___21060]);
      var G__21061 = i__5744__auto___21060 + 1;
      i__5744__auto___21060 = G__21061;
      continue;
    } else {
    }
    break;
  }
  var G__21058 = args21053.length;
  switch(G__21058) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21053.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__21063 = y;
        var G__21064 = cljs.core.first(more);
        var G__21065 = cljs.core.next(more);
        x = G__21063;
        y = G__21064;
        more = G__21065;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq21054) {
  var G__21055 = cljs.core.first(seq21054);
  var seq21054__$1 = cljs.core.next(seq21054);
  var G__21056 = cljs.core.first(seq21054__$1);
  var seq21054__$2 = cljs.core.next(seq21054__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21055, G__21056, seq21054__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.es6_iterator_seq;
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__21066 = n + 1;
      var G__21067 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__21068 = cljs.core.next(coll__$1);
      n = G__21066;
      hash_code = G__21067;
      coll__$1 = G__21068;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__21069 = n + 1;
      var G__21070 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__21071 = cljs.core.next(coll__$1);
      n = G__21069;
      hash_code = G__21070;
      coll__$1 = G__21071;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.hash_map;
cljs.core.list;
cljs.core.equiv_sequential;
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__21072 = this$__$1.valueOf();
    var G__21073 = other.valueOf();
    return goog.array.defaultCompare(G__21072, G__21073);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.with_meta;
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.deref;
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args21074 = [];
  var len__5743__auto___21083 = arguments.length;
  var i__5744__auto___21084 = 0;
  while (true) {
    if (i__5744__auto___21084 < len__5743__auto___21083) {
      args21074.push(arguments[i__5744__auto___21084]);
      var G__21085 = i__5744__auto___21084 + 1;
      i__5744__auto___21084 = G__21085;
      continue;
    } else {
    }
    break;
  }
  var G__21076 = args21074.length;
  switch(G__21076) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21074.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__21077 = val;
          var G__21078 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21077, G__21078) : f.call(null, G__21077, G__21078);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__21087 = nval;
          var G__21088 = n + 1;
          val = G__21087;
          n = G__21088;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__21079 = val__$1;
        var G__21080 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21079, G__21080) : f.call(null, G__21079, G__21080);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21089 = nval;
        var G__21090 = n + 1;
        val__$1 = G__21089;
        n = G__21090;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__21081 = val__$1;
        var G__21082 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21081, G__21082) : f.call(null, G__21081, G__21082);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21091 = nval;
        var G__21092 = n + 1;
        val__$1 = G__21091;
        n = G__21092;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args21093 = [];
  var len__5743__auto___21102 = arguments.length;
  var i__5744__auto___21103 = 0;
  while (true) {
    if (i__5744__auto___21103 < len__5743__auto___21102) {
      args21093.push(arguments[i__5744__auto___21103]);
      var G__21104 = i__5744__auto___21103 + 1;
      i__5744__auto___21103 = G__21104;
      continue;
    } else {
    }
    break;
  }
  var G__21095 = args21093.length;
  switch(G__21095) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21093.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__21096 = val;
          var G__21097 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21096, G__21097) : f.call(null, G__21096, G__21097);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__21106 = nval;
          var G__21107 = n + 1;
          val = G__21106;
          n = G__21107;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__21098 = val__$1;
        var G__21099 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21098, G__21099) : f.call(null, G__21098, G__21099);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21108 = nval;
        var G__21109 = n + 1;
        val__$1 = G__21108;
        n = G__21109;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__21100 = val__$1;
        var G__21101 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21100, G__21101) : f.call(null, G__21100, G__21101);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21110 = nval;
        var G__21111 = n + 1;
        val__$1 = G__21110;
        n = G__21111;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.hash_coll;
cljs.core.cons;
cljs.core.RSeq;
cljs.core.List;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__5016__auto__ = 0;
  var y__5017__auto__ = self__.arr.length - self__.i;
  return x__5016__auto__ > y__5017__auto__ ? x__5016__auto__ : y__5017__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args21116 = [];
  var len__5743__auto___21119 = arguments.length;
  var i__5744__auto___21120 = 0;
  while (true) {
    if (i__5744__auto___21120 < len__5743__auto___21119) {
      args21116.push(arguments[i__5744__auto___21120]);
      var G__21121 = i__5744__auto___21120 + 1;
      i__5744__auto___21120 = G__21121;
      continue;
    } else {
    }
    break;
  }
  var G__21118 = args21116.length;
  switch(G__21118) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21116.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args21123 = [];
  var len__5743__auto___21126 = arguments.length;
  var i__5744__auto___21127 = 0;
  while (true) {
    if (i__5744__auto___21127 < len__5743__auto___21126) {
      args21123.push(arguments[i__5744__auto___21127]);
      var G__21128 = i__5744__auto___21127 + 1;
      i__5744__auto___21127 = G__21128;
      continue;
    } else {
    }
    break;
  }
  var G__21125 = args21123.length;
  switch(G__21125) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21123.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.with_meta;
cljs.core.seq_reduce;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__21130 = cljs.core.List.EMPTY;
  var G__21131 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__21130, G__21131) : cljs.core.with_meta.call(null, G__21130, G__21131);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__21132 = sn;
      s = G__21132;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args21133 = [];
  var len__5743__auto___21139 = arguments.length;
  var i__5744__auto___21140 = 0;
  while (true) {
    if (i__5744__auto___21140 < len__5743__auto___21139) {
      args21133.push(arguments[i__5744__auto___21140]);
      var G__21141 = i__5744__auto___21140 + 1;
      i__5744__auto___21140 = G__21141;
      continue;
    } else {
    }
    break;
  }
  var G__21138 = args21133.length;
  switch(G__21138) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21133.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__21143 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__21144 = cljs.core.first(xs);
      var G__21145 = cljs.core.next(xs);
      coll = G__21143;
      x = G__21144;
      xs = G__21145;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq21134) {
  var G__21135 = cljs.core.first(seq21134);
  var seq21134__$1 = cljs.core.next(seq21134);
  var G__21136 = cljs.core.first(seq21134__$1);
  var seq21134__$2 = cljs.core.next(seq21134__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__21135, G__21136, seq21134__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__21146 = cljs.core.next(s);
      var G__21147 = acc + 1;
      s = G__21146;
      acc = G__21147;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args21152 = [];
  var len__5743__auto___21155 = arguments.length;
  var i__5744__auto___21156 = 0;
  while (true) {
    if (i__5744__auto___21156 < len__5743__auto___21155) {
      args21152.push(arguments[i__5744__auto___21156]);
      var G__21157 = i__5744__auto___21156 + 1;
      i__5744__auto___21156 = G__21157;
      continue;
    } else {
    }
    break;
  }
  var G__21154 = args21152.length;
  switch(G__21154) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21152.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__21159 = cljs.core.next(coll);
            var G__21160 = n - 1;
            coll = G__21159;
            n = G__21160;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__21161 = cljs.core.next(coll);
            var G__21162 = n - 1;
            var G__21163 = not_found;
            coll = G__21161;
            n = G__21162;
            not_found = G__21163;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args21164 = [];
  var len__5743__auto___21171 = arguments.length;
  var i__5744__auto___21172 = 0;
  while (true) {
    if (i__5744__auto___21172 < len__5743__auto___21171) {
      args21164.push(arguments[i__5744__auto___21172]);
      var G__21173 = i__5744__auto___21172 + 1;
      i__5744__auto___21172 = G__21173;
      continue;
    } else {
    }
    break;
  }
  var G__21166 = args21164.length;
  switch(G__21166) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21164.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__21175 = n__$1 - 1;
      var G__21176 = cljs.core.rest(xs);
      n__$1 = G__21175;
      xs = G__21176;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args21177 = [];
  var len__5743__auto___21182 = arguments.length;
  var i__5744__auto___21183 = 0;
  while (true) {
    if (i__5744__auto___21183 < len__5743__auto___21182) {
      args21177.push(arguments[i__5744__auto___21183]);
      var G__21184 = i__5744__auto___21183 + 1;
      i__5744__auto___21183 = G__21184;
      continue;
    } else {
    }
    break;
  }
  var G__21179 = args21177.length;
  switch(G__21179) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21177.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.PersistentHashMap;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args21186 = [];
  var len__5743__auto___21193 = arguments.length;
  var i__5744__auto___21194 = 0;
  while (true) {
    if (i__5744__auto___21194 < len__5743__auto___21193) {
      args21186.push(arguments[i__5744__auto___21194]);
      var G__21195 = i__5744__auto___21194 + 1;
      i__5744__auto___21194 = G__21195;
      continue;
    } else {
    }
    break;
  }
  var G__21192 = args21186.length;
  switch(G__21192) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21186.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__21197 = ret;
      var G__21198 = cljs.core.first(kvs);
      var G__21199 = cljs.core.second(kvs);
      var G__21200 = cljs.core.nnext(kvs);
      coll = G__21197;
      k = G__21198;
      v = G__21199;
      kvs = G__21200;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq21187) {
  var G__21188 = cljs.core.first(seq21187);
  var seq21187__$1 = cljs.core.next(seq21187);
  var G__21189 = cljs.core.first(seq21187__$1);
  var seq21187__$2 = cljs.core.next(seq21187__$1);
  var G__21190 = cljs.core.first(seq21187__$2);
  var seq21187__$3 = cljs.core.next(seq21187__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__21188, G__21189, G__21190, seq21187__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args21201 = [];
  var len__5743__auto___21207 = arguments.length;
  var i__5744__auto___21208 = 0;
  while (true) {
    if (i__5744__auto___21208 < len__5743__auto___21207) {
      args21201.push(arguments[i__5744__auto___21208]);
      var G__21209 = i__5744__auto___21208 + 1;
      i__5744__auto___21208 = G__21209;
      continue;
    } else {
    }
    break;
  }
  var G__21206 = args21201.length;
  switch(G__21206) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21201.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__21211 = ret;
        var G__21212 = cljs.core.first(ks);
        var G__21213 = cljs.core.next(ks);
        coll = G__21211;
        k = G__21212;
        ks = G__21213;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq21202) {
  var G__21203 = cljs.core.first(seq21202);
  var seq21202__$1 = cljs.core.next(seq21202);
  var G__21204 = cljs.core.first(seq21202__$1);
  var seq21202__$2 = cljs.core.next(seq21202__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__21203, G__21204, seq21202__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4685__auto__ = goog.isFunction(f);
  if (or__4685__auto__) {
    return or__4685__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__21219 = null;
  var G__21219__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__21219__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__21219__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__21219__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__21219__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__21219__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__21219__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__21219__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__21219__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__21219__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__21219__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__21219__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__21219__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__21219__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__21219__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__21219__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__21219__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__21219__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__21219__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__21219__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__21219__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__21219__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__21219 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__21219__1.call(this, self__);
      case 2:
        return G__21219__2.call(this, self__, a);
      case 3:
        return G__21219__3.call(this, self__, a, b);
      case 4:
        return G__21219__4.call(this, self__, a, b, c);
      case 5:
        return G__21219__5.call(this, self__, a, b, c, d);
      case 6:
        return G__21219__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__21219__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__21219__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__21219__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__21219__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__21219__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__21219__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__21219__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__21219__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__21219__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__21219__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__21219__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__21219__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__21219__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__21219__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__21219__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__21219__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21219.cljs$core$IFn$_invoke$arity$1 = G__21219__1;
  G__21219.cljs$core$IFn$_invoke$arity$2 = G__21219__2;
  G__21219.cljs$core$IFn$_invoke$arity$3 = G__21219__3;
  G__21219.cljs$core$IFn$_invoke$arity$4 = G__21219__4;
  G__21219.cljs$core$IFn$_invoke$arity$5 = G__21219__5;
  G__21219.cljs$core$IFn$_invoke$arity$6 = G__21219__6;
  G__21219.cljs$core$IFn$_invoke$arity$7 = G__21219__7;
  G__21219.cljs$core$IFn$_invoke$arity$8 = G__21219__8;
  G__21219.cljs$core$IFn$_invoke$arity$9 = G__21219__9;
  G__21219.cljs$core$IFn$_invoke$arity$10 = G__21219__10;
  G__21219.cljs$core$IFn$_invoke$arity$11 = G__21219__11;
  G__21219.cljs$core$IFn$_invoke$arity$12 = G__21219__12;
  G__21219.cljs$core$IFn$_invoke$arity$13 = G__21219__13;
  G__21219.cljs$core$IFn$_invoke$arity$14 = G__21219__14;
  G__21219.cljs$core$IFn$_invoke$arity$15 = G__21219__15;
  G__21219.cljs$core$IFn$_invoke$arity$16 = G__21219__16;
  G__21219.cljs$core$IFn$_invoke$arity$17 = G__21219__17;
  G__21219.cljs$core$IFn$_invoke$arity$18 = G__21219__18;
  G__21219.cljs$core$IFn$_invoke$arity$19 = G__21219__19;
  G__21219.cljs$core$IFn$_invoke$arity$20 = G__21219__20;
  G__21219.cljs$core$IFn$_invoke$arity$21 = G__21219__21;
  G__21219.cljs$core$IFn$_invoke$arity$22 = G__21219__22;
  return G__21219;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args21218) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21218)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4673__auto__ = !(o == null);
    if (and__4673__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4673__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args21224 = [];
  var len__5743__auto___21230 = arguments.length;
  var i__5744__auto___21231 = 0;
  while (true) {
    if (i__5744__auto___21231 < len__5743__auto___21230) {
      args21224.push(arguments[i__5744__auto___21231]);
      var G__21232 = i__5744__auto___21231 + 1;
      i__5744__auto___21231 = G__21232;
      continue;
    } else {
    }
    break;
  }
  var G__21229 = args21224.length;
  switch(G__21229) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21224.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__21234 = ret;
        var G__21235 = cljs.core.first(ks);
        var G__21236 = cljs.core.next(ks);
        coll = G__21234;
        k = G__21235;
        ks = G__21236;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq21225) {
  var G__21226 = cljs.core.first(seq21225);
  var seq21225__$1 = cljs.core.next(seq21225);
  var G__21227 = cljs.core.first(seq21225__$1);
  var seq21225__$2 = cljs.core.next(seq21225__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__21226, G__21227, seq21225__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.ChunkedCons;
cljs.core.ChunkedSeq;
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args21257 = [];
  var len__5743__auto___21263 = arguments.length;
  var i__5744__auto___21264 = 0;
  while (true) {
    if (i__5744__auto___21264 < len__5743__auto___21263) {
      args21257.push(arguments[i__5744__auto___21264]);
      var G__21265 = i__5744__auto___21264 + 1;
      i__5744__auto___21264 = G__21265;
      continue;
    } else {
    }
    break;
  }
  var G__21260 = args21257.length;
  switch(G__21260) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21257.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5762__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq21258) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21258));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__21269_21271 = obj;
  var G__21270_21272 = function(G__21269_21271, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__21269_21271, keys);
  goog.object.forEach(G__21269_21271, G__21270_21272);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__21273 = i__$1 + 1;
      var G__21274 = j__$1 + 1;
      var G__21275 = len__$1 - 1;
      i__$1 = G__21273;
      j__$1 = G__21274;
      len__$1 = G__21275;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__21276 = i__$1 - 1;
      var G__21277 = j__$1 - 1;
      var G__21278 = len__$1 - 1;
      i__$1 = G__21276;
      j__$1 = G__21277;
      len__$1 = G__21278;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4685__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4685__auto__) {
    return or__4685__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args21289 = [];
  var len__5743__auto___21295 = arguments.length;
  var i__5744__auto___21296 = 0;
  while (true) {
    if (i__5744__auto___21296 < len__5743__auto___21295) {
      args21289.push(arguments[i__5744__auto___21296]);
      var G__21297 = i__5744__auto___21296 + 1;
      i__5744__auto___21296 = G__21297;
      continue;
    } else {
    }
    break;
  }
  var G__21294 = args21289.length;
  switch(G__21294) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21289.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__21299 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__21300 = etc;
          s = G__21299;
          xs = G__21300;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq21290) {
  var G__21291 = cljs.core.first(seq21290);
  var seq21290__$1 = cljs.core.next(seq21290);
  var G__21292 = cljs.core.first(seq21290__$1);
  var seq21290__$2 = cljs.core.next(seq21290__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__21291, G__21292, seq21290__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args21303 = [];
  var len__5743__auto___21306 = arguments.length;
  var i__5744__auto___21307 = 0;
  while (true) {
    if (i__5744__auto___21307 < len__5743__auto___21306) {
      args21303.push(arguments[i__5744__auto___21307]);
      var G__21308 = i__5744__auto___21307 + 1;
      i__5744__auto___21307 = G__21308;
      continue;
    } else {
    }
    break;
  }
  var G__21305 = args21303.length;
  switch(G__21305) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21303.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__21310 = xs;
      var G__21311 = ys;
      var G__21312 = len;
      var G__21313 = n + 1;
      xs = G__21310;
      ys = G__21311;
      len = G__21312;
      n = G__21313;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.to_array;
cljs.core.sort = function cljs$core$sort(var_args) {
  var args21314 = [];
  var len__5743__auto___21319 = arguments.length;
  var i__5744__auto___21320 = 0;
  while (true) {
    if (i__5744__auto___21320 < len__5743__auto___21319) {
      args21314.push(arguments[i__5744__auto___21320]);
      var G__21321 = i__5744__auto___21320 + 1;
      i__5744__auto___21320 = G__21321;
      continue;
    } else {
    }
    break;
  }
  var G__21316 = args21314.length;
  switch(G__21316) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21314.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__21317_21323 = a;
    var G__21318_21324 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__21317_21323, G__21318_21324);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args21325 = [];
  var len__5743__auto___21328 = arguments.length;
  var i__5744__auto___21329 = 0;
  while (true) {
    if (i__5744__auto___21329 < len__5743__auto___21328) {
      args21325.push(arguments[i__5744__auto___21329]);
      var G__21330 = i__5744__auto___21329 + 1;
      i__5744__auto___21329 = G__21330;
      continue;
    } else {
    }
    break;
  }
  var G__21327 = args21325.length;
  switch(G__21327) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21325.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args21332 = [];
  var len__5743__auto___21340 = arguments.length;
  var i__5744__auto___21341 = 0;
  while (true) {
    if (i__5744__auto___21341 < len__5743__auto___21340) {
      args21332.push(arguments[i__5744__auto___21341]);
      var G__21342 = i__5744__auto___21341 + 1;
      i__5744__auto___21341 = G__21342;
      continue;
    } else {
    }
    break;
  }
  var G__21334 = args21332.length;
  switch(G__21334) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21332.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    var G__21335 = f;
    var G__21336 = cljs.core.first(s);
    var G__21337 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__21335, G__21336, G__21337) : cljs.core.reduce.call(null, G__21335, G__21336, G__21337);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__21338 = val__$1;
        var G__21339 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21338, G__21339) : f.call(null, G__21338, G__21339);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21344 = nval;
        var G__21345 = cljs.core.next(coll__$1);
        val__$1 = G__21344;
        coll__$1 = G__21345;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.vec;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args21346 = [];
  var len__5743__auto___21351 = arguments.length;
  var i__5744__auto___21352 = 0;
  while (true) {
    if (i__5744__auto___21352 < len__5743__auto___21351) {
      args21346.push(arguments[i__5744__auto___21352]);
      var G__21353 = i__5744__auto___21352 + 1;
      i__5744__auto___21352 = G__21353;
      continue;
    } else {
    }
    break;
  }
  var G__21348 = args21346.length;
  switch(G__21348) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21346.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args21355 = [];
  var len__5743__auto___21358 = arguments.length;
  var i__5744__auto___21359 = 0;
  while (true) {
    if (i__5744__auto___21359 < len__5743__auto___21358) {
      args21355.push(arguments[i__5744__auto___21359]);
      var G__21360 = i__5744__auto___21359 + 1;
      i__5744__auto___21359 = G__21360;
      continue;
    } else {
    }
    break;
  }
  var G__21357 = args21355.length;
  switch(G__21357) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21355.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__21362 = null;
    var G__21362__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__21362__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__21362__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__21362 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__21362__0.call(this);
        case 1:
          return G__21362__1.call(this, x);
        case 2:
          return G__21362__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21362.cljs$core$IFn$_invoke$arity$0 = G__21362__0;
    G__21362.cljs$core$IFn$_invoke$arity$1 = G__21362__1;
    G__21362.cljs$core$IFn$_invoke$arity$2 = G__21362__2;
    return G__21362;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args21363 = [];
  var len__5743__auto___21366 = arguments.length;
  var i__5744__auto___21367 = 0;
  while (true) {
    if (i__5744__auto___21367 < len__5743__auto___21366) {
      args21363.push(arguments[i__5744__auto___21367]);
      var G__21368 = i__5744__auto___21367 + 1;
      i__5744__auto___21367 = G__21368;
      continue;
    } else {
    }
    break;
  }
  var G__21365 = args21363.length;
  switch(G__21365) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21363.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args21370 = [];
  var len__5743__auto___21376 = arguments.length;
  var i__5744__auto___21377 = 0;
  while (true) {
    if (i__5744__auto___21377 < len__5743__auto___21376) {
      args21370.push(arguments[i__5744__auto___21377]);
      var G__21378 = i__5744__auto___21377 + 1;
      i__5744__auto___21377 = G__21378;
      continue;
    } else {
    }
    break;
  }
  var G__21375 = args21370.length;
  switch(G__21375) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21370.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq21371) {
  var G__21372 = cljs.core.first(seq21371);
  var seq21371__$1 = cljs.core.next(seq21371);
  var G__21373 = cljs.core.first(seq21371__$1);
  var seq21371__$2 = cljs.core.next(seq21371__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__21372, G__21373, seq21371__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args21380 = [];
  var len__5743__auto___21386 = arguments.length;
  var i__5744__auto___21387 = 0;
  while (true) {
    if (i__5744__auto___21387 < len__5743__auto___21386) {
      args21380.push(arguments[i__5744__auto___21387]);
      var G__21388 = i__5744__auto___21387 + 1;
      i__5744__auto___21387 = G__21388;
      continue;
    } else {
    }
    break;
  }
  var G__21385 = args21380.length;
  switch(G__21385) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21380.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq21381) {
  var G__21382 = cljs.core.first(seq21381);
  var seq21381__$1 = cljs.core.next(seq21381);
  var G__21383 = cljs.core.first(seq21381__$1);
  var seq21381__$2 = cljs.core.next(seq21381__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__21382, G__21383, seq21381__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args21390 = [];
  var len__5743__auto___21396 = arguments.length;
  var i__5744__auto___21397 = 0;
  while (true) {
    if (i__5744__auto___21397 < len__5743__auto___21396) {
      args21390.push(arguments[i__5744__auto___21397]);
      var G__21398 = i__5744__auto___21397 + 1;
      i__5744__auto___21397 = G__21398;
      continue;
    } else {
    }
    break;
  }
  var G__21395 = args21390.length;
  switch(G__21395) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21390.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq21391) {
  var G__21392 = cljs.core.first(seq21391);
  var seq21391__$1 = cljs.core.next(seq21391);
  var G__21393 = cljs.core.first(seq21391__$1);
  var seq21391__$2 = cljs.core.next(seq21391__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__21392, G__21393, seq21391__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.divide;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args21400 = [];
  var len__5743__auto___21406 = arguments.length;
  var i__5744__auto___21407 = 0;
  while (true) {
    if (i__5744__auto___21407 < len__5743__auto___21406) {
      args21400.push(arguments[i__5744__auto___21407]);
      var G__21408 = i__5744__auto___21407 + 1;
      i__5744__auto___21407 = G__21408;
      continue;
    } else {
    }
    break;
  }
  var G__21405 = args21400.length;
  switch(G__21405) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21400.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq21401) {
  var G__21402 = cljs.core.first(seq21401);
  var seq21401__$1 = cljs.core.next(seq21401);
  var G__21403 = cljs.core.first(seq21401__$1);
  var seq21401__$2 = cljs.core.next(seq21401__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__21402, G__21403, seq21401__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args21410 = [];
  var len__5743__auto___21416 = arguments.length;
  var i__5744__auto___21417 = 0;
  while (true) {
    if (i__5744__auto___21417 < len__5743__auto___21416) {
      args21410.push(arguments[i__5744__auto___21417]);
      var G__21418 = i__5744__auto___21417 + 1;
      i__5744__auto___21417 = G__21418;
      continue;
    } else {
    }
    break;
  }
  var G__21415 = args21410.length;
  switch(G__21415) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21410.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__21420 = y;
        var G__21421 = cljs.core.first(more);
        var G__21422 = cljs.core.next(more);
        x = G__21420;
        y = G__21421;
        more = G__21422;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq21411) {
  var G__21412 = cljs.core.first(seq21411);
  var seq21411__$1 = cljs.core.next(seq21411);
  var G__21413 = cljs.core.first(seq21411__$1);
  var seq21411__$2 = cljs.core.next(seq21411__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__21412, G__21413, seq21411__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args21423 = [];
  var len__5743__auto___21429 = arguments.length;
  var i__5744__auto___21430 = 0;
  while (true) {
    if (i__5744__auto___21430 < len__5743__auto___21429) {
      args21423.push(arguments[i__5744__auto___21430]);
      var G__21431 = i__5744__auto___21430 + 1;
      i__5744__auto___21430 = G__21431;
      continue;
    } else {
    }
    break;
  }
  var G__21428 = args21423.length;
  switch(G__21428) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21423.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__21433 = y;
        var G__21434 = cljs.core.first(more);
        var G__21435 = cljs.core.next(more);
        x = G__21433;
        y = G__21434;
        more = G__21435;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq21424) {
  var G__21425 = cljs.core.first(seq21424);
  var seq21424__$1 = cljs.core.next(seq21424);
  var G__21426 = cljs.core.first(seq21424__$1);
  var seq21424__$2 = cljs.core.next(seq21424__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21425, G__21426, seq21424__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args21436 = [];
  var len__5743__auto___21442 = arguments.length;
  var i__5744__auto___21443 = 0;
  while (true) {
    if (i__5744__auto___21443 < len__5743__auto___21442) {
      args21436.push(arguments[i__5744__auto___21443]);
      var G__21444 = i__5744__auto___21443 + 1;
      i__5744__auto___21443 = G__21444;
      continue;
    } else {
    }
    break;
  }
  var G__21441 = args21436.length;
  switch(G__21441) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21436.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__21446 = y;
        var G__21447 = cljs.core.first(more);
        var G__21448 = cljs.core.next(more);
        x = G__21446;
        y = G__21447;
        more = G__21448;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq21437) {
  var G__21438 = cljs.core.first(seq21437);
  var seq21437__$1 = cljs.core.next(seq21437);
  var G__21439 = cljs.core.first(seq21437__$1);
  var seq21437__$2 = cljs.core.next(seq21437__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__21438, G__21439, seq21437__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args21449 = [];
  var len__5743__auto___21455 = arguments.length;
  var i__5744__auto___21456 = 0;
  while (true) {
    if (i__5744__auto___21456 < len__5743__auto___21455) {
      args21449.push(arguments[i__5744__auto___21456]);
      var G__21457 = i__5744__auto___21456 + 1;
      i__5744__auto___21456 = G__21457;
      continue;
    } else {
    }
    break;
  }
  var G__21454 = args21449.length;
  switch(G__21454) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21449.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__21459 = y;
        var G__21460 = cljs.core.first(more);
        var G__21461 = cljs.core.next(more);
        x = G__21459;
        y = G__21460;
        more = G__21461;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq21450) {
  var G__21451 = cljs.core.first(seq21450);
  var seq21450__$1 = cljs.core.next(seq21450);
  var G__21452 = cljs.core.first(seq21450__$1);
  var seq21450__$2 = cljs.core.next(seq21450__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21451, G__21452, seq21450__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args21462 = [];
  var len__5743__auto___21468 = arguments.length;
  var i__5744__auto___21469 = 0;
  while (true) {
    if (i__5744__auto___21469 < len__5743__auto___21468) {
      args21462.push(arguments[i__5744__auto___21469]);
      var G__21470 = i__5744__auto___21469 + 1;
      i__5744__auto___21469 = G__21470;
      continue;
    } else {
    }
    break;
  }
  var G__21467 = args21462.length;
  switch(G__21467) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21462.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__5016__auto__ = x;
  var y__5017__auto__ = y;
  return x__5016__auto__ > y__5017__auto__ ? x__5016__auto__ : y__5017__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__5016__auto__ = x;
    var y__5017__auto__ = y;
    return x__5016__auto__ > y__5017__auto__ ? x__5016__auto__ : y__5017__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq21463) {
  var G__21464 = cljs.core.first(seq21463);
  var seq21463__$1 = cljs.core.next(seq21463);
  var G__21465 = cljs.core.first(seq21463__$1);
  var seq21463__$2 = cljs.core.next(seq21463__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__21464, G__21465, seq21463__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args21472 = [];
  var len__5743__auto___21478 = arguments.length;
  var i__5744__auto___21479 = 0;
  while (true) {
    if (i__5744__auto___21479 < len__5743__auto___21478) {
      args21472.push(arguments[i__5744__auto___21479]);
      var G__21480 = i__5744__auto___21479 + 1;
      i__5744__auto___21479 = G__21480;
      continue;
    } else {
    }
    break;
  }
  var G__21477 = args21472.length;
  switch(G__21477) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21472.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__5023__auto__ = x;
  var y__5024__auto__ = y;
  return x__5023__auto__ < y__5024__auto__ ? x__5023__auto__ : y__5024__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__5023__auto__ = x;
    var y__5024__auto__ = y;
    return x__5023__auto__ < y__5024__auto__ ? x__5023__auto__ : y__5024__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq21473) {
  var G__21474 = cljs.core.first(seq21473);
  var seq21473__$1 = cljs.core.next(seq21473);
  var G__21475 = cljs.core.first(seq21473__$1);
  var seq21473__$2 = cljs.core.next(seq21473__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__21474, G__21475, seq21473__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args21482 = [];
  var len__5743__auto___21488 = arguments.length;
  var i__5744__auto___21489 = 0;
  while (true) {
    if (i__5744__auto___21489 < len__5743__auto___21488) {
      args21482.push(arguments[i__5744__auto___21489]);
      var G__21490 = i__5744__auto___21489 + 1;
      i__5744__auto___21489 = G__21490;
      continue;
    } else {
    }
    break;
  }
  var G__21487 = args21482.length;
  switch(G__21487) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21482.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq21483) {
  var G__21484 = cljs.core.first(seq21483);
  var seq21483__$1 = cljs.core.next(seq21483);
  var G__21485 = cljs.core.first(seq21483__$1);
  var seq21483__$2 = cljs.core.next(seq21483__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__21484, G__21485, seq21483__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args21492 = [];
  var len__5743__auto___21498 = arguments.length;
  var i__5744__auto___21499 = 0;
  while (true) {
    if (i__5744__auto___21499 < len__5743__auto___21498) {
      args21492.push(arguments[i__5744__auto___21499]);
      var G__21500 = i__5744__auto___21499 + 1;
      i__5744__auto___21499 = G__21500;
      continue;
    } else {
    }
    break;
  }
  var G__21497 = args21492.length;
  switch(G__21497) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21492.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq21493) {
  var G__21494 = cljs.core.first(seq21493);
  var seq21493__$1 = cljs.core.next(seq21493);
  var G__21495 = cljs.core.first(seq21493__$1);
  var seq21493__$2 = cljs.core.next(seq21493__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__21494, G__21495, seq21493__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args21502 = [];
  var len__5743__auto___21508 = arguments.length;
  var i__5744__auto___21509 = 0;
  while (true) {
    if (i__5744__auto___21509 < len__5743__auto___21508) {
      args21502.push(arguments[i__5744__auto___21509]);
      var G__21510 = i__5744__auto___21509 + 1;
      i__5744__auto___21509 = G__21510;
      continue;
    } else {
    }
    break;
  }
  var G__21507 = args21502.length;
  switch(G__21507) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21502.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq21503) {
  var G__21504 = cljs.core.first(seq21503);
  var seq21503__$1 = cljs.core.next(seq21503);
  var G__21505 = cljs.core.first(seq21503__$1);
  var seq21503__$2 = cljs.core.next(seq21503__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__21504, G__21505, seq21503__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args21512 = [];
  var len__5743__auto___21518 = arguments.length;
  var i__5744__auto___21519 = 0;
  while (true) {
    if (i__5744__auto___21519 < len__5743__auto___21518) {
      args21512.push(arguments[i__5744__auto___21519]);
      var G__21520 = i__5744__auto___21519 + 1;
      i__5744__auto___21519 = G__21520;
      continue;
    } else {
    }
    break;
  }
  var G__21517 = args21512.length;
  switch(G__21517) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21512.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq21513) {
  var G__21514 = cljs.core.first(seq21513);
  var seq21513__$1 = cljs.core.next(seq21513);
  var G__21515 = cljs.core.first(seq21513__$1);
  var seq21513__$2 = cljs.core.next(seq21513__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__21514, G__21515, seq21513__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args21522 = [];
  var len__5743__auto___21528 = arguments.length;
  var i__5744__auto___21529 = 0;
  while (true) {
    if (i__5744__auto___21529 < len__5743__auto___21528) {
      args21522.push(arguments[i__5744__auto___21529]);
      var G__21530 = i__5744__auto___21529 + 1;
      i__5744__auto___21529 = G__21530;
      continue;
    } else {
    }
    break;
  }
  var G__21527 = args21522.length;
  switch(G__21527) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21522.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq21523) {
  var G__21524 = cljs.core.first(seq21523);
  var seq21523__$1 = cljs.core.next(seq21523);
  var G__21525 = cljs.core.first(seq21523__$1);
  var seq21523__$2 = cljs.core.next(seq21523__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__21524, G__21525, seq21523__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.mod;
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args21532 = [];
  var len__5743__auto___21538 = arguments.length;
  var i__5744__auto___21539 = 0;
  while (true) {
    if (i__5744__auto___21539 < len__5743__auto___21538) {
      args21532.push(arguments[i__5744__auto___21539]);
      var G__21540 = i__5744__auto___21539 + 1;
      i__5744__auto___21539 = G__21540;
      continue;
    } else {
    }
    break;
  }
  var G__21537 = args21532.length;
  switch(G__21537) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21532.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq21533) {
  var G__21534 = cljs.core.first(seq21533);
  var seq21533__$1 = cljs.core.next(seq21533);
  var G__21535 = cljs.core.first(seq21533__$1);
  var seq21533__$2 = cljs.core.next(seq21533__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__21534, G__21535, seq21533__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args21542 = [];
  var len__5743__auto___21548 = arguments.length;
  var i__5744__auto___21549 = 0;
  while (true) {
    if (i__5744__auto___21549 < len__5743__auto___21548) {
      args21542.push(arguments[i__5744__auto___21549]);
      var G__21550 = i__5744__auto___21549 + 1;
      i__5744__auto___21549 = G__21550;
      continue;
    } else {
    }
    break;
  }
  var G__21547 = args21542.length;
  switch(G__21547) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21542.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq21543) {
  var G__21544 = cljs.core.first(seq21543);
  var seq21543__$1 = cljs.core.next(seq21543);
  var G__21545 = cljs.core.first(seq21543__$1);
  var seq21543__$2 = cljs.core.next(seq21543__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__21544, G__21545, seq21543__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args21552 = [];
  var len__5743__auto___21558 = arguments.length;
  var i__5744__auto___21559 = 0;
  while (true) {
    if (i__5744__auto___21559 < len__5743__auto___21558) {
      args21552.push(arguments[i__5744__auto___21559]);
      var G__21560 = i__5744__auto___21559 + 1;
      i__5744__auto___21559 = G__21560;
      continue;
    } else {
    }
    break;
  }
  var G__21557 = args21552.length;
  switch(G__21557) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21552.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq21553) {
  var G__21554 = cljs.core.first(seq21553);
  var seq21553__$1 = cljs.core.next(seq21553);
  var G__21555 = cljs.core.first(seq21553__$1);
  var seq21553__$2 = cljs.core.next(seq21553__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__21554, G__21555, seq21553__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args21562 = [];
  var len__5743__auto___21568 = arguments.length;
  var i__5744__auto___21569 = 0;
  while (true) {
    if (i__5744__auto___21569 < len__5743__auto___21568) {
      args21562.push(arguments[i__5744__auto___21569]);
      var G__21570 = i__5744__auto___21569 + 1;
      i__5744__auto___21569 = G__21570;
      continue;
    } else {
    }
    break;
  }
  var G__21567 = args21562.length;
  switch(G__21567) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21562.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq21563) {
  var G__21564 = cljs.core.first(seq21563);
  var seq21563__$1 = cljs.core.next(seq21563);
  var G__21565 = cljs.core.first(seq21563__$1);
  var seq21563__$2 = cljs.core.next(seq21563__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__21564, G__21565, seq21563__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args21572 = [];
  var len__5743__auto___21578 = arguments.length;
  var i__5744__auto___21579 = 0;
  while (true) {
    if (i__5744__auto___21579 < len__5743__auto___21578) {
      args21572.push(arguments[i__5744__auto___21579]);
      var G__21580 = i__5744__auto___21579 + 1;
      i__5744__auto___21579 = G__21580;
      continue;
    } else {
    }
    break;
  }
  var G__21577 = args21572.length;
  switch(G__21577) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21572.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq21573) {
  var G__21574 = cljs.core.first(seq21573);
  var seq21573__$1 = cljs.core.next(seq21573);
  var G__21575 = cljs.core.first(seq21573__$1);
  var seq21573__$2 = cljs.core.next(seq21573__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__21574, G__21575, seq21573__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args21582 = [];
  var len__5743__auto___21588 = arguments.length;
  var i__5744__auto___21589 = 0;
  while (true) {
    if (i__5744__auto___21589 < len__5743__auto___21588) {
      args21582.push(arguments[i__5744__auto___21589]);
      var G__21590 = i__5744__auto___21589 + 1;
      i__5744__auto___21589 = G__21590;
      continue;
    } else {
    }
    break;
  }
  var G__21587 = args21582.length;
  switch(G__21587) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21582.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq21583) {
  var G__21584 = cljs.core.first(seq21583);
  var seq21583__$1 = cljs.core.next(seq21583);
  var G__21585 = cljs.core.first(seq21583__$1);
  var seq21583__$2 = cljs.core.next(seq21583__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__21584, G__21585, seq21583__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args21592 = [];
  var len__5743__auto___21598 = arguments.length;
  var i__5744__auto___21599 = 0;
  while (true) {
    if (i__5744__auto___21599 < len__5743__auto___21598) {
      args21592.push(arguments[i__5744__auto___21599]);
      var G__21600 = i__5744__auto___21599 + 1;
      i__5744__auto___21599 = G__21600;
      continue;
    } else {
    }
    break;
  }
  var G__21597 = args21592.length;
  switch(G__21597) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21592.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__21602 = y;
        var G__21603 = cljs.core.first(more);
        var G__21604 = cljs.core.next(more);
        x = G__21602;
        y = G__21603;
        more = G__21604;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq21593) {
  var G__21594 = cljs.core.first(seq21593);
  var seq21593__$1 = cljs.core.next(seq21593);
  var G__21595 = cljs.core.first(seq21593__$1);
  var seq21593__$2 = cljs.core.next(seq21593__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21594, G__21595, seq21593__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__21605 = n__$1 - 1;
      var G__21606 = cljs.core.next(xs);
      n__$1 = G__21605;
      xs = G__21606;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args21607 = [];
  var len__5743__auto___21612 = arguments.length;
  var i__5744__auto___21613 = 0;
  while (true) {
    if (i__5744__auto___21613 < len__5743__auto___21612) {
      args21607.push(arguments[i__5744__auto___21613]);
      var G__21614 = i__5744__auto___21613 + 1;
      i__5744__auto___21613 = G__21614;
      continue;
    } else {
    }
    break;
  }
  var G__21611 = args21607.length;
  switch(G__21611) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21607.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5762__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__21616 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__21617 = cljs.core.next(more);
      sb = G__21616;
      more = G__21617;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq21608) {
  var G__21609 = cljs.core.first(seq21608);
  var seq21608__$1 = cljs.core.next(seq21608);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__21609, seq21608__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args21618 = [];
  var len__5743__auto___21621 = arguments.length;
  var i__5744__auto___21622 = 0;
  while (true) {
    if (i__5744__auto___21622 < len__5743__auto___21621) {
      args21618.push(arguments[i__5744__auto___21622]);
      var G__21623 = i__5744__auto___21622 + 1;
      i__5744__auto___21622 = G__21623;
      continue;
    } else {
    }
    break;
  }
  var G__21620 = args21618.length;
  switch(G__21620) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21618.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.map;
cljs.core.name;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__21625 = cljs.core.next(xs);
            var G__21626 = cljs.core.next(ys);
            xs = G__21625;
            ys = G__21626;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__21627 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__21628 = cljs.core.next(s);
        res = G__21627;
        s = G__21628;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.key;
cljs.core.val;
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__21629 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__21630 = cljs.core.next(s);
      h = G__21629;
      s = G__21630;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__21631 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__21632 = cljs.core.next(s__$1);
      h = G__21631;
      s__$1 = G__21632;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.name;
cljs.core.chunk_first;
cljs.core.chunk_rest;
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__21639_21645 = cljs.core.seq(fn_map);
  var chunk__21640_21646 = null;
  var count__21641_21647 = 0;
  var i__21642_21648 = 0;
  while (true) {
    if (i__21642_21648 < count__21641_21647) {
      var vec__21643_21649 = chunk__21640_21646.cljs$core$IIndexed$_nth$arity$2(null, i__21642_21648);
      var key_name_21650 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21643_21649, 0, null);
      var f_21651 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21643_21649, 1, null);
      var str_name_21652 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_21650) : cljs.core.name.call(null, key_name_21650);
      obj[str_name_21652] = f_21651;
      var G__21653 = seq__21639_21645;
      var G__21654 = chunk__21640_21646;
      var G__21655 = count__21641_21647;
      var G__21656 = i__21642_21648 + 1;
      seq__21639_21645 = G__21653;
      chunk__21640_21646 = G__21654;
      count__21641_21647 = G__21655;
      i__21642_21648 = G__21656;
      continue;
    } else {
      var temp__4657__auto___21657 = cljs.core.seq(seq__21639_21645);
      if (temp__4657__auto___21657) {
        var seq__21639_21658__$1 = temp__4657__auto___21657;
        if (cljs.core.chunked_seq_QMARK_(seq__21639_21658__$1)) {
          var c__5488__auto___21659 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__21639_21658__$1) : cljs.core.chunk_first.call(null, seq__21639_21658__$1);
          var G__21660 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__21639_21658__$1) : cljs.core.chunk_rest.call(null, seq__21639_21658__$1);
          var G__21661 = c__5488__auto___21659;
          var G__21662 = cljs.core.count(c__5488__auto___21659);
          var G__21663 = 0;
          seq__21639_21645 = G__21660;
          chunk__21640_21646 = G__21661;
          count__21641_21647 = G__21662;
          i__21642_21648 = G__21663;
          continue;
        } else {
          var vec__21644_21664 = cljs.core.first(seq__21639_21658__$1);
          var key_name_21665 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21644_21664, 0, null);
          var f_21666 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21644_21664, 1, null);
          var str_name_21667 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_21665) : cljs.core.name.call(null, key_name_21665);
          obj[str_name_21667] = f_21666;
          var G__21668 = cljs.core.next(seq__21639_21658__$1);
          var G__21669 = null;
          var G__21670 = 0;
          var G__21671 = 0;
          seq__21639_21645 = G__21668;
          chunk__21640_21646 = G__21669;
          count__21641_21647 = G__21670;
          i__21642_21648 = G__21671;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___21677 = arguments.length;
  var i__5744__auto___21678 = 0;
  while (true) {
    if (i__5744__auto___21678 < len__5743__auto___21677) {
      args__5750__auto__.push(arguments[i__5744__auto___21678]);
      var G__21679 = i__5744__auto___21678 + 1;
      i__5744__auto___21678 = G__21679;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__21680 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__21680;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__21681 = i - 1;
      var G__21682 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__21681;
      r = G__21682;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq21676) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21676));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4685__auto__ = coll == null;
    if (or__4685__auto__) {
      return or__4685__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = cljs.core.not(a.ns);
      if (and__4673__auto__) {
        return b.ns;
      } else {
        return and__4673__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__21693 = a.ns;
            var G__21694 = b.ns;
            return goog.array.defaultCompare(G__21693, G__21694);
          }();
          if (0 === nsc) {
            var G__21695 = a.name;
            var G__21696 = b.name;
            return goog.array.defaultCompare(G__21695, G__21696);
          } else {
            return nsc;
          }
        }
      } else {
        var G__21697 = a.name;
        var G__21698 = b.name;
        return goog.array.defaultCompare(G__21697, G__21698);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__21700 = null;
  var G__21700__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__21700__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__21700 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21700__2.call(this, self__, coll);
      case 3:
        return G__21700__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21700.cljs$core$IFn$_invoke$arity$2 = G__21700__2;
  G__21700.cljs$core$IFn$_invoke$arity$3 = G__21700__3;
  return G__21700;
}();
cljs.core.Keyword.prototype.apply = function(self__, args21699) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21699)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__5120__auto__ = self__._hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args21703 = [];
  var len__5743__auto___21706 = arguments.length;
  var i__5744__auto___21707 = 0;
  while (true) {
    if (i__5744__auto___21707 < len__5743__auto___21706) {
      args21703.push(arguments[i__5744__auto___21707]);
      var G__21708 = i__5744__auto___21707 + 1;
      i__5744__auto___21707 = G__21708;
      continue;
    } else {
    }
    break;
  }
  var G__21705 = args21703.length;
  switch(G__21705) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21703.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__21710 = ls.sval();
        ls = G__21710;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.ArrayChunk;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args21711 = [];
  var len__5743__auto___21714 = arguments.length;
  var i__5744__auto___21715 = 0;
  while (true) {
    if (i__5744__auto___21715 < len__5743__auto___21714) {
      args21711.push(arguments[i__5744__auto___21715]);
      var G__21716 = i__5744__auto___21715 + 1;
      i__5744__auto___21715 = G__21716;
      continue;
    } else {
    }
    break;
  }
  var G__21713 = args21711.length;
  switch(G__21713) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21711.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__21720 = cljs.core.next(s__$1);
      s__$1 = G__21720;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_21721 = 0;
  var xs_21722 = cljs.core.seq(coll);
  while (true) {
    if (xs_21722) {
      ret[i_21721] = cljs.core.to_array(cljs.core.first(xs_21722));
      var G__21723 = i_21721 + 1;
      var G__21724 = cljs.core.next(xs_21722);
      i_21721 = G__21723;
      xs_21722 = G__21724;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args21725 = [];
  var len__5743__auto___21728 = arguments.length;
  var i__5744__auto___21729 = 0;
  while (true) {
    if (i__5744__auto___21729 < len__5743__auto___21728) {
      args21725.push(arguments[i__5744__auto___21729]);
      var G__21730 = i__5744__auto___21729 + 1;
      i__5744__auto___21729 = G__21730;
      continue;
    } else {
    }
    break;
  }
  var G__21727 = args21725.length;
  switch(G__21727) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21725.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21732 = i + 1;
        var G__21733 = cljs.core.next(s__$1);
        i = G__21732;
        s__$1 = G__21733;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5588__auto___21734 = size;
    var i_21735 = 0;
    while (true) {
      if (i_21735 < n__5588__auto___21734) {
        a[i_21735] = init_val_or_seq;
        var G__21736 = i_21735 + 1;
        i_21735 = G__21736;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args21737 = [];
  var len__5743__auto___21740 = arguments.length;
  var i__5744__auto___21741 = 0;
  while (true) {
    if (i__5744__auto___21741 < len__5743__auto___21740) {
      args21737.push(arguments[i__5744__auto___21741]);
      var G__21742 = i__5744__auto___21741 + 1;
      i__5744__auto___21741 = G__21742;
      continue;
    } else {
    }
    break;
  }
  var G__21739 = args21737.length;
  switch(G__21739) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21737.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21744 = i + 1;
        var G__21745 = cljs.core.next(s__$1);
        i = G__21744;
        s__$1 = G__21745;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5588__auto___21746 = size;
    var i_21747 = 0;
    while (true) {
      if (i_21747 < n__5588__auto___21746) {
        a[i_21747] = init_val_or_seq;
        var G__21748 = i_21747 + 1;
        i_21747 = G__21748;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args21749 = [];
  var len__5743__auto___21752 = arguments.length;
  var i__5744__auto___21753 = 0;
  while (true) {
    if (i__5744__auto___21753 < len__5743__auto___21752) {
      args21749.push(arguments[i__5744__auto___21753]);
      var G__21754 = i__5744__auto___21753 + 1;
      i__5744__auto___21753 = G__21754;
      continue;
    } else {
    }
    break;
  }
  var G__21751 = args21749.length;
  switch(G__21751) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21749.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21756 = i + 1;
        var G__21757 = cljs.core.next(s__$1);
        i = G__21756;
        s__$1 = G__21757;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5588__auto___21758 = size;
    var i_21759 = 0;
    while (true) {
      if (i_21759 < n__5588__auto___21758) {
        a[i_21759] = init_val_or_seq;
        var G__21760 = i_21759 + 1;
        i_21759 = G__21760;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args21761 = [];
  var len__5743__auto___21764 = arguments.length;
  var i__5744__auto___21765 = 0;
  while (true) {
    if (i__5744__auto___21765 < len__5743__auto___21764) {
      args21761.push(arguments[i__5744__auto___21765]);
      var G__21766 = i__5744__auto___21765 + 1;
      i__5744__auto___21765 = G__21766;
      continue;
    } else {
    }
    break;
  }
  var G__21763 = args21761.length;
  switch(G__21763) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21761.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21768 = i + 1;
        var G__21769 = cljs.core.next(s__$1);
        i = G__21768;
        s__$1 = G__21769;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5588__auto___21770 = size;
    var i_21771 = 0;
    while (true) {
      if (i_21771 < n__5588__auto___21770) {
        a[i_21771] = init_val_or_seq;
        var G__21772 = i_21771 + 1;
        i_21771 = G__21772;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__21773 = cljs.core.next(s__$1);
        var G__21774 = i - 1;
        var G__21775 = sum + 1;
        s__$1 = G__21773;
        i = G__21774;
        sum = G__21775;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args21777 = [];
  var len__5743__auto___21789 = arguments.length;
  var i__5744__auto___21790 = 0;
  while (true) {
    if (i__5744__auto___21790 < len__5743__auto___21789) {
      args21777.push(arguments[i__5744__auto___21790]);
      var G__21791 = i__5744__auto___21790 + 1;
      i__5744__auto___21790 = G__21791;
      continue;
    } else {
    }
    break;
  }
  var G__21782 = args21777.length;
  switch(G__21782) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21777.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq21778) {
  var G__21779 = cljs.core.first(seq21778);
  var seq21778__$1 = cljs.core.next(seq21778);
  var G__21780 = cljs.core.first(seq21778__$1);
  var seq21778__$2 = cljs.core.next(seq21778__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__21779, G__21780, seq21778__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args21793 = [];
  var len__5743__auto___21801 = arguments.length;
  var i__5744__auto___21802 = 0;
  while (true) {
    if (i__5744__auto___21802 < len__5743__auto___21801) {
      args21793.push(arguments[i__5744__auto___21802]);
      var G__21803 = i__5744__auto___21802 + 1;
      i__5744__auto___21802 = G__21803;
      continue;
    } else {
    }
    break;
  }
  var G__21800 = args21793.length;
  switch(G__21800) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21793.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5762__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq21794) {
  var G__21795 = cljs.core.first(seq21794);
  var seq21794__$1 = cljs.core.next(seq21794);
  var G__21796 = cljs.core.first(seq21794__$1);
  var seq21794__$2 = cljs.core.next(seq21794__$1);
  var G__21797 = cljs.core.first(seq21794__$2);
  var seq21794__$3 = cljs.core.next(seq21794__$2);
  var G__21798 = cljs.core.first(seq21794__$3);
  var seq21794__$4 = cljs.core.next(seq21794__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__21795, G__21796, G__21797, G__21798, seq21794__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args21805 = [];
  var len__5743__auto___21811 = arguments.length;
  var i__5744__auto___21812 = 0;
  while (true) {
    if (i__5744__auto___21812 < len__5743__auto___21811) {
      args21805.push(arguments[i__5744__auto___21812]);
      var G__21813 = i__5744__auto___21812 + 1;
      i__5744__auto___21812 = G__21813;
      continue;
    } else {
    }
    break;
  }
  var G__21810 = args21805.length;
  switch(G__21810) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21805.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__21815 = ntcoll;
      var G__21816 = cljs.core.first(vals);
      var G__21817 = cljs.core.next(vals);
      tcoll = G__21815;
      val = G__21816;
      vals = G__21817;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq21806) {
  var G__21807 = cljs.core.first(seq21806);
  var seq21806__$1 = cljs.core.next(seq21806);
  var G__21808 = cljs.core.first(seq21806__$1);
  var seq21806__$2 = cljs.core.next(seq21806__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21807, G__21808, seq21806__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args21818 = [];
  var len__5743__auto___21825 = arguments.length;
  var i__5744__auto___21826 = 0;
  while (true) {
    if (i__5744__auto___21826 < len__5743__auto___21825) {
      args21818.push(arguments[i__5744__auto___21826]);
      var G__21827 = i__5744__auto___21826 + 1;
      i__5744__auto___21826 = G__21827;
      continue;
    } else {
    }
    break;
  }
  var G__21824 = args21818.length;
  switch(G__21824) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21818.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__21829 = ntcoll;
      var G__21830 = cljs.core.first(kvs);
      var G__21831 = cljs.core.second(kvs);
      var G__21832 = cljs.core.nnext(kvs);
      tcoll = G__21829;
      key = G__21830;
      val = G__21831;
      kvs = G__21832;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq21819) {
  var G__21820 = cljs.core.first(seq21819);
  var seq21819__$1 = cljs.core.next(seq21819);
  var G__21821 = cljs.core.first(seq21819__$1);
  var seq21819__$2 = cljs.core.next(seq21819__$1);
  var G__21822 = cljs.core.first(seq21819__$2);
  var seq21819__$3 = cljs.core.next(seq21819__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21820, G__21821, G__21822, seq21819__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args21833 = [];
  var len__5743__auto___21839 = arguments.length;
  var i__5744__auto___21840 = 0;
  while (true) {
    if (i__5744__auto___21840 < len__5743__auto___21839) {
      args21833.push(arguments[i__5744__auto___21840]);
      var G__21841 = i__5744__auto___21840 + 1;
      i__5744__auto___21840 = G__21841;
      continue;
    } else {
    }
    break;
  }
  var G__21838 = args21833.length;
  switch(G__21838) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21833.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__21843 = ntcoll;
      var G__21844 = cljs.core.first(ks);
      var G__21845 = cljs.core.next(ks);
      tcoll = G__21843;
      key = G__21844;
      ks = G__21845;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq21834) {
  var G__21835 = cljs.core.first(seq21834);
  var seq21834__$1 = cljs.core.next(seq21834);
  var G__21836 = cljs.core.first(seq21834__$1);
  var seq21834__$2 = cljs.core.next(seq21834__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21835, G__21836, seq21834__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args21846 = [];
  var len__5743__auto___21852 = arguments.length;
  var i__5744__auto___21853 = 0;
  while (true) {
    if (i__5744__auto___21853 < len__5743__auto___21852) {
      args21846.push(arguments[i__5744__auto___21853]);
      var G__21854 = i__5744__auto___21853 + 1;
      i__5744__auto___21853 = G__21854;
      continue;
    } else {
    }
    break;
  }
  var G__21851 = args21846.length;
  switch(G__21851) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21846.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__21856 = ntcoll;
      var G__21857 = cljs.core.first(vals);
      var G__21858 = cljs.core.next(vals);
      tcoll = G__21856;
      val = G__21857;
      vals = G__21858;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq21847) {
  var G__21848 = cljs.core.first(seq21847);
  var seq21847__$1 = cljs.core.next(seq21847);
  var G__21849 = cljs.core.first(seq21847__$1);
  var seq21847__$2 = cljs.core.next(seq21847__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21848, G__21849, seq21847__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5632 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5632);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5632) : f.call(null, a5632);
      }
    } else {
      var b5633 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5632, b5633);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5632, b5633) : f.call(null, a5632, b5633);
        }
      } else {
        var c5634 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5632, b5633, c5634);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5632, b5633, c5634) : f.call(null, a5632, b5633, c5634);
          }
        } else {
          var d5635 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5632, b5633, c5634, d5635);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5632, b5633, c5634, d5635) : f.call(null, a5632, b5633, c5634, d5635);
            }
          } else {
            var e5636 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5632, b5633, c5634, d5635, e5636);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5632, b5633, c5634, d5635, e5636) : f.call(null, a5632, b5633, c5634, d5635, e5636);
              }
            } else {
              var f5637 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5632, b5633, c5634, d5635, e5636, f5637);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5632, b5633, c5634, d5635, e5636, f5637) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637);
                }
              } else {
                var g5638 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5632, b5633, c5634, d5635, e5636, f5637, g5638);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5632, b5633, c5634, d5635, e5636, f5637, g5638) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638);
                  }
                } else {
                  var h5639 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639);
                    }
                  } else {
                    var i5640 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640);
                      }
                    } else {
                      var j5641 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641);
                        }
                      } else {
                        var k5642 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642);
                          }
                        } else {
                          var l5643 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643);
                            }
                          } else {
                            var m5644 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644);
                              }
                            } else {
                              var n5645 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645);
                                }
                              } else {
                                var o5646 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646);
                                  }
                                } else {
                                  var p5647 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647);
                                    }
                                  } else {
                                    var q5648 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648);
                                      }
                                    } else {
                                      var r5649 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649);
                                        }
                                      } else {
                                        var s5650 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649, s5650);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649, s5650) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649, s5650);
                                          }
                                        } else {
                                          var t5651 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649, s5650, t5651);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649, s5650, t5651) : f.call(null, a5632, b5633, c5634, d5635, e5636, f5637, g5638, h5639, i5640, j5641, k5642, l5643, m5644, n5645, o5646, p5647, q5648, r5649, s5650, t5651);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args21859 = [];
  var len__5743__auto___21868 = arguments.length;
  var i__5744__auto___21869 = 0;
  while (true) {
    if (i__5744__auto___21869 < len__5743__auto___21868) {
      args21859.push(arguments[i__5744__auto___21869]);
      var G__21870 = i__5744__auto___21869 + 1;
      i__5744__auto___21869 = G__21870;
      continue;
    } else {
    }
    break;
  }
  var G__21867 = args21859.length;
  switch(G__21867) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21859.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5762__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq21860) {
  var G__21861 = cljs.core.first(seq21860);
  var seq21860__$1 = cljs.core.next(seq21860);
  var G__21862 = cljs.core.first(seq21860__$1);
  var seq21860__$2 = cljs.core.next(seq21860__$1);
  var G__21863 = cljs.core.first(seq21860__$2);
  var seq21860__$3 = cljs.core.next(seq21860__$2);
  var G__21864 = cljs.core.first(seq21860__$3);
  var seq21860__$4 = cljs.core.next(seq21860__$3);
  var G__21865 = cljs.core.first(seq21860__$4);
  var seq21860__$5 = cljs.core.next(seq21860__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__21861, G__21862, G__21863, G__21864, G__21865, seq21860__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args21872 = [];
  var len__5743__auto___21897 = arguments.length;
  var i__5744__auto___21898 = 0;
  while (true) {
    if (i__5744__auto___21898 < len__5743__auto___21897) {
      args21872.push(arguments[i__5744__auto___21898]);
      var G__21899 = i__5744__auto___21898 + 1;
      i__5744__auto___21898 = G__21899;
      continue;
    } else {
    }
    break;
  }
  var G__21881 = args21872.length;
  switch(G__21881) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21872.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5762__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__21882 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21882) : f.call(null, G__21882);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__21883 = cljs.core.meta(obj);
    var G__21884 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21883, G__21884) : f.call(null, G__21883, G__21884);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__21885 = cljs.core.meta(obj);
    var G__21886 = a;
    var G__21887 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21885, G__21886, G__21887) : f.call(null, G__21885, G__21886, G__21887);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__21888 = cljs.core.meta(obj);
    var G__21889 = a;
    var G__21890 = b;
    var G__21891 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21888, G__21889, G__21890, G__21891) : f.call(null, G__21888, G__21889, G__21890, G__21891);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__21892 = cljs.core.meta(obj);
    var G__21893 = a;
    var G__21894 = b;
    var G__21895 = c;
    var G__21896 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21892, G__21893, G__21894, G__21895, G__21896) : f.call(null, G__21892, G__21893, G__21894, G__21895, G__21896);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq21873) {
  var G__21874 = cljs.core.first(seq21873);
  var seq21873__$1 = cljs.core.next(seq21873);
  var G__21875 = cljs.core.first(seq21873__$1);
  var seq21873__$2 = cljs.core.next(seq21873__$1);
  var G__21876 = cljs.core.first(seq21873__$2);
  var seq21873__$3 = cljs.core.next(seq21873__$2);
  var G__21877 = cljs.core.first(seq21873__$3);
  var seq21873__$4 = cljs.core.next(seq21873__$3);
  var G__21878 = cljs.core.first(seq21873__$4);
  var seq21873__$5 = cljs.core.next(seq21873__$4);
  var G__21879 = cljs.core.first(seq21873__$5);
  var seq21873__$6 = cljs.core.next(seq21873__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, seq21873__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args21901 = [];
  var len__5743__auto___21907 = arguments.length;
  var i__5744__auto___21908 = 0;
  while (true) {
    if (i__5744__auto___21908 < len__5743__auto___21907) {
      args21901.push(arguments[i__5744__auto___21908]);
      var G__21909 = i__5744__auto___21908 + 1;
      i__5744__auto___21908 = G__21909;
      continue;
    } else {
    }
    break;
  }
  var G__21906 = args21901.length;
  switch(G__21906) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21901.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq21902) {
  var G__21903 = cljs.core.first(seq21902);
  var seq21902__$1 = cljs.core.next(seq21902);
  var G__21904 = cljs.core.first(seq21902__$1);
  var seq21902__$2 = cljs.core.next(seq21902__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21903, G__21904, seq21902__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core21914 !== "undefined") {
  } else {
    cljs.core.t_cljs$core21914 = function(nil_iter, meta21915) {
      this.nil_iter = nil_iter;
      this.meta21915 = meta21915;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core21914.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21916, meta21915__$1) {
      var self__ = this;
      var _21916__$1 = this;
      return new cljs.core.t_cljs$core21914(self__.nil_iter, meta21915__$1);
    };
    cljs.core.t_cljs$core21914.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21916) {
      var self__ = this;
      var _21916__$1 = this;
      return self__.meta21915;
    };
    cljs.core.t_cljs$core21914.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core21914.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core21914.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core21914.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta21915", "meta21915", -14658147, null)], 
      null);
    };
    cljs.core.t_cljs$core21914.cljs$lang$type = true;
    cljs.core.t_cljs$core21914.cljs$lang$ctorStr = "cljs.core/t_cljs$core21914";
    cljs.core.t_cljs$core21914.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write(writer__5284__auto__, "cljs.core/t_cljs$core21914");
    };
    cljs.core.__GT_t_cljs$core21914 = function cljs$core$nil_iter_$___GT_t_cljs$core21914(nil_iter__$1, meta21915) {
      return new cljs.core.t_cljs$core21914(nil_iter__$1, meta21915);
    };
  }
  return new cljs.core.t_cljs$core21914(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.LazyTransformer;
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = !(lt.stepper == null);
      if (and__4673__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4673__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__21917 = lt;
        var G__21918 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__21917, G__21918) : self__.xform.call(null, G__21917, G__21918);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__21919 = cljs.core.next(iters__$1);
        iters__$1 = G__21919;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5588__auto___21920 = self__.iters.length;
  var i_21921 = 0;
  while (true) {
    if (i_21921 < n__5588__auto___21920) {
      self__.nexts[i_21921] = self__.iters[i_21921].next();
      var G__21922 = i_21921 + 1;
      i_21921 = G__21922;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = !(lt.stepper == null);
      if (and__4673__auto__) {
        return this$.hasNext();
      } else {
        return and__4673__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args21923 = [];
  var len__5743__auto___21926 = arguments.length;
  var i__5744__auto___21927 = 0;
  while (true) {
    if (i__5744__auto___21927 < len__5743__auto___21926) {
      args21923.push(arguments[i__5744__auto___21927]);
      var G__21928 = i__5744__auto___21927 + 1;
      i__5744__auto___21927 = G__21928;
      continue;
    } else {
    }
    break;
  }
  var G__21925 = args21923.length;
  switch(G__21925) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21923.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__21930_21934 = cljs.core.seq(colls);
  var chunk__21931_21935 = null;
  var count__21932_21936 = 0;
  var i__21933_21937 = 0;
  while (true) {
    if (i__21933_21937 < count__21932_21936) {
      var coll_21938 = chunk__21931_21935.cljs$core$IIndexed$_nth$arity$2(null, i__21933_21937);
      iters.push(cljs.core.iter(coll_21938));
      var G__21939 = seq__21930_21934;
      var G__21940 = chunk__21931_21935;
      var G__21941 = count__21932_21936;
      var G__21942 = i__21933_21937 + 1;
      seq__21930_21934 = G__21939;
      chunk__21931_21935 = G__21940;
      count__21932_21936 = G__21941;
      i__21933_21937 = G__21942;
      continue;
    } else {
      var temp__4657__auto___21943 = cljs.core.seq(seq__21930_21934);
      if (temp__4657__auto___21943) {
        var seq__21930_21944__$1 = temp__4657__auto___21943;
        if (cljs.core.chunked_seq_QMARK_(seq__21930_21944__$1)) {
          var c__5488__auto___21945 = cljs.core.chunk_first(seq__21930_21944__$1);
          var G__21946 = cljs.core.chunk_rest(seq__21930_21944__$1);
          var G__21947 = c__5488__auto___21945;
          var G__21948 = cljs.core.count(c__5488__auto___21945);
          var G__21949 = 0;
          seq__21930_21934 = G__21946;
          chunk__21931_21935 = G__21947;
          count__21932_21936 = G__21948;
          i__21933_21937 = G__21949;
          continue;
        } else {
          var coll_21950 = cljs.core.first(seq__21930_21944__$1);
          iters.push(cljs.core.iter(coll_21950));
          var G__21951 = cljs.core.next(seq__21930_21944__$1);
          var G__21952 = null;
          var G__21953 = 0;
          var G__21954 = 0;
          seq__21930_21934 = G__21951;
          chunk__21931_21935 = G__21952;
          count__21932_21936 = G__21953;
          i__21933_21937 = G__21954;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args21955 = [];
  var len__5743__auto___21961 = arguments.length;
  var i__5744__auto___21962 = 0;
  while (true) {
    if (i__5744__auto___21962 < len__5743__auto___21961) {
      args21955.push(arguments[i__5744__auto___21962]);
      var G__21963 = i__5744__auto___21962 + 1;
      i__5744__auto___21962 = G__21963;
      continue;
    } else {
    }
    break;
  }
  var G__21960 = args21955.length;
  switch(G__21960) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21955.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4685__auto__ = cljs.core.seq(coll);
    if (or__4685__auto__) {
      return or__4685__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq21956) {
  var G__21957 = cljs.core.first(seq21956);
  var seq21956__$1 = cljs.core.next(seq21956);
  var G__21958 = cljs.core.first(seq21956__$1);
  var seq21956__$2 = cljs.core.next(seq21956__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__21957, G__21958, seq21956__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__21966 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21966) : pred.call(null, G__21966);
      }())) {
        var G__21967 = pred;
        var G__21968 = cljs.core.next(coll);
        pred = G__21967;
        coll = G__21968;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4685__auto__ = function() {
        var G__21972 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21972) : pred.call(null, G__21972);
      }();
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var G__21973 = pred;
        var G__21974 = cljs.core.next(coll);
        pred = G__21973;
        coll = G__21974;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__21975 = null;
    var G__21975__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__21975__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__21975__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__21975__3 = function() {
      var G__21976__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__21976 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__21977__i = 0, G__21977__a = new Array(arguments.length - 2);
          while (G__21977__i < G__21977__a.length) {
            G__21977__a[G__21977__i] = arguments[G__21977__i + 2];
            ++G__21977__i;
          }
          zs = new cljs.core.IndexedSeq(G__21977__a, 0);
        }
        return G__21976__delegate.call(this, x, y, zs);
      };
      G__21976.cljs$lang$maxFixedArity = 2;
      G__21976.cljs$lang$applyTo = function(arglist__21978) {
        var x = cljs.core.first(arglist__21978);
        arglist__21978 = cljs.core.next(arglist__21978);
        var y = cljs.core.first(arglist__21978);
        var zs = cljs.core.rest(arglist__21978);
        return G__21976__delegate(x, y, zs);
      };
      G__21976.cljs$core$IFn$_invoke$arity$variadic = G__21976__delegate;
      return G__21976;
    }();
    G__21975 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__21975__0.call(this);
        case 1:
          return G__21975__1.call(this, x);
        case 2:
          return G__21975__2.call(this, x, y);
        default:
          var G__21979 = null;
          if (arguments.length > 2) {
            var G__21980__i = 0, G__21980__a = new Array(arguments.length - 2);
            while (G__21980__i < G__21980__a.length) {
              G__21980__a[G__21980__i] = arguments[G__21980__i + 2];
              ++G__21980__i;
            }
            G__21979 = new cljs.core.IndexedSeq(G__21980__a, 0);
          }
          return G__21975__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__21979);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21975.cljs$lang$maxFixedArity = 2;
    G__21975.cljs$lang$applyTo = G__21975__3.cljs$lang$applyTo;
    G__21975.cljs$core$IFn$_invoke$arity$0 = G__21975__0;
    G__21975.cljs$core$IFn$_invoke$arity$1 = G__21975__1;
    G__21975.cljs$core$IFn$_invoke$arity$2 = G__21975__2;
    G__21975.cljs$core$IFn$_invoke$arity$variadic = G__21975__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__21975;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__21981__delegate = function(args) {
      return x;
    };
    var G__21981 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__21982__i = 0, G__21982__a = new Array(arguments.length - 0);
        while (G__21982__i < G__21982__a.length) {
          G__21982__a[G__21982__i] = arguments[G__21982__i + 0];
          ++G__21982__i;
        }
        args = new cljs.core.IndexedSeq(G__21982__a, 0);
      }
      return G__21981__delegate.call(this, args);
    };
    G__21981.cljs$lang$maxFixedArity = 0;
    G__21981.cljs$lang$applyTo = function(arglist__21983) {
      var args = cljs.core.seq(arglist__21983);
      return G__21981__delegate(args);
    };
    G__21981.cljs$core$IFn$_invoke$arity$variadic = G__21981__delegate;
    return G__21981;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args21984 = [];
  var len__5743__auto___22011 = arguments.length;
  var i__5744__auto___22012 = 0;
  while (true) {
    if (i__5744__auto___22012 < len__5743__auto___22011) {
      args21984.push(arguments[i__5744__auto___22012]);
      var G__22013 = i__5744__auto___22012 + 1;
      i__5744__auto___22012 = G__22013;
      continue;
    } else {
    }
    break;
  }
  var G__21990 = args21984.length;
  switch(G__21990) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args21984.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__22015 = null;
    var G__22015__0 = function() {
      var G__21991 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21991) : f.call(null, G__21991);
    };
    var G__22015__1 = function(x) {
      var G__21992 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21992) : f.call(null, G__21992);
    };
    var G__22015__2 = function(x, y) {
      var G__21993 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21993) : f.call(null, G__21993);
    };
    var G__22015__3 = function(x, y, z) {
      var G__21994 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21994) : f.call(null, G__21994);
    };
    var G__22015__4 = function() {
      var G__22016__delegate = function(x, y, z, args) {
        var G__21995 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21995) : f.call(null, G__21995);
      };
      var G__22016 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22017__i = 0, G__22017__a = new Array(arguments.length - 3);
          while (G__22017__i < G__22017__a.length) {
            G__22017__a[G__22017__i] = arguments[G__22017__i + 3];
            ++G__22017__i;
          }
          args = new cljs.core.IndexedSeq(G__22017__a, 0);
        }
        return G__22016__delegate.call(this, x, y, z, args);
      };
      G__22016.cljs$lang$maxFixedArity = 3;
      G__22016.cljs$lang$applyTo = function(arglist__22018) {
        var x = cljs.core.first(arglist__22018);
        arglist__22018 = cljs.core.next(arglist__22018);
        var y = cljs.core.first(arglist__22018);
        arglist__22018 = cljs.core.next(arglist__22018);
        var z = cljs.core.first(arglist__22018);
        var args = cljs.core.rest(arglist__22018);
        return G__22016__delegate(x, y, z, args);
      };
      G__22016.cljs$core$IFn$_invoke$arity$variadic = G__22016__delegate;
      return G__22016;
    }();
    G__22015 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22015__0.call(this);
        case 1:
          return G__22015__1.call(this, x);
        case 2:
          return G__22015__2.call(this, x, y);
        case 3:
          return G__22015__3.call(this, x, y, z);
        default:
          var G__22019 = null;
          if (arguments.length > 3) {
            var G__22020__i = 0, G__22020__a = new Array(arguments.length - 3);
            while (G__22020__i < G__22020__a.length) {
              G__22020__a[G__22020__i] = arguments[G__22020__i + 3];
              ++G__22020__i;
            }
            G__22019 = new cljs.core.IndexedSeq(G__22020__a, 0);
          }
          return G__22015__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22019);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22015.cljs$lang$maxFixedArity = 3;
    G__22015.cljs$lang$applyTo = G__22015__4.cljs$lang$applyTo;
    G__22015.cljs$core$IFn$_invoke$arity$0 = G__22015__0;
    G__22015.cljs$core$IFn$_invoke$arity$1 = G__22015__1;
    G__22015.cljs$core$IFn$_invoke$arity$2 = G__22015__2;
    G__22015.cljs$core$IFn$_invoke$arity$3 = G__22015__3;
    G__22015.cljs$core$IFn$_invoke$arity$variadic = G__22015__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22015;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__22021 = null;
    var G__22021__0 = function() {
      var G__21997 = function() {
        var G__21998 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21998) : g.call(null, G__21998);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21997) : f.call(null, G__21997);
    };
    var G__22021__1 = function(x) {
      var G__22000 = function() {
        var G__22001 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22001) : g.call(null, G__22001);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22000) : f.call(null, G__22000);
    };
    var G__22021__2 = function(x, y) {
      var G__22003 = function() {
        var G__22004 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22004) : g.call(null, G__22004);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22003) : f.call(null, G__22003);
    };
    var G__22021__3 = function(x, y, z) {
      var G__22006 = function() {
        var G__22007 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22007) : g.call(null, G__22007);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22006) : f.call(null, G__22006);
    };
    var G__22021__4 = function() {
      var G__22022__delegate = function(x, y, z, args) {
        var G__22009 = function() {
          var G__22010 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22010) : g.call(null, G__22010);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22009) : f.call(null, G__22009);
      };
      var G__22022 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22023__i = 0, G__22023__a = new Array(arguments.length - 3);
          while (G__22023__i < G__22023__a.length) {
            G__22023__a[G__22023__i] = arguments[G__22023__i + 3];
            ++G__22023__i;
          }
          args = new cljs.core.IndexedSeq(G__22023__a, 0);
        }
        return G__22022__delegate.call(this, x, y, z, args);
      };
      G__22022.cljs$lang$maxFixedArity = 3;
      G__22022.cljs$lang$applyTo = function(arglist__22024) {
        var x = cljs.core.first(arglist__22024);
        arglist__22024 = cljs.core.next(arglist__22024);
        var y = cljs.core.first(arglist__22024);
        arglist__22024 = cljs.core.next(arglist__22024);
        var z = cljs.core.first(arglist__22024);
        var args = cljs.core.rest(arglist__22024);
        return G__22022__delegate(x, y, z, args);
      };
      G__22022.cljs$core$IFn$_invoke$arity$variadic = G__22022__delegate;
      return G__22022;
    }();
    G__22021 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22021__0.call(this);
        case 1:
          return G__22021__1.call(this, x);
        case 2:
          return G__22021__2.call(this, x, y);
        case 3:
          return G__22021__3.call(this, x, y, z);
        default:
          var G__22025 = null;
          if (arguments.length > 3) {
            var G__22026__i = 0, G__22026__a = new Array(arguments.length - 3);
            while (G__22026__i < G__22026__a.length) {
              G__22026__a[G__22026__i] = arguments[G__22026__i + 3];
              ++G__22026__i;
            }
            G__22025 = new cljs.core.IndexedSeq(G__22026__a, 0);
          }
          return G__22021__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22025);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22021.cljs$lang$maxFixedArity = 3;
    G__22021.cljs$lang$applyTo = G__22021__4.cljs$lang$applyTo;
    G__22021.cljs$core$IFn$_invoke$arity$0 = G__22021__0;
    G__22021.cljs$core$IFn$_invoke$arity$1 = G__22021__1;
    G__22021.cljs$core$IFn$_invoke$arity$2 = G__22021__2;
    G__22021.cljs$core$IFn$_invoke$arity$3 = G__22021__3;
    G__22021.cljs$core$IFn$_invoke$arity$variadic = G__22021__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22021;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__22027__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__22028 = cljs.core.first(fs__$2).call(null, ret);
            var G__22029 = cljs.core.next(fs__$2);
            ret = G__22028;
            fs__$2 = G__22029;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__22027 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__22030__i = 0, G__22030__a = new Array(arguments.length - 0);
          while (G__22030__i < G__22030__a.length) {
            G__22030__a[G__22030__i] = arguments[G__22030__i + 0];
            ++G__22030__i;
          }
          args = new cljs.core.IndexedSeq(G__22030__a, 0);
        }
        return G__22027__delegate.call(this, args);
      };
      G__22027.cljs$lang$maxFixedArity = 0;
      G__22027.cljs$lang$applyTo = function(arglist__22031) {
        var args = cljs.core.seq(arglist__22031);
        return G__22027__delegate(args);
      };
      G__22027.cljs$core$IFn$_invoke$arity$variadic = G__22027__delegate;
      return G__22027;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq21985) {
  var G__21986 = cljs.core.first(seq21985);
  var seq21985__$1 = cljs.core.next(seq21985);
  var G__21987 = cljs.core.first(seq21985__$1);
  var seq21985__$2 = cljs.core.next(seq21985__$1);
  var G__21988 = cljs.core.first(seq21985__$2);
  var seq21985__$3 = cljs.core.next(seq21985__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__21986, G__21987, G__21988, seq21985__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args22032 = [];
  var len__5743__auto___22040 = arguments.length;
  var i__5744__auto___22041 = 0;
  while (true) {
    if (i__5744__auto___22041 < len__5743__auto___22040) {
      args22032.push(arguments[i__5744__auto___22041]);
      var G__22042 = i__5744__auto___22041 + 1;
      i__5744__auto___22041 = G__22042;
      continue;
    } else {
    }
    break;
  }
  var G__22039 = args22032.length;
  switch(G__22039) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22032.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5762__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__22044 = null;
    var G__22044__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__22044__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__22044__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__22044__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__22044__4 = function() {
      var G__22045__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__22045 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22046__i = 0, G__22046__a = new Array(arguments.length - 3);
          while (G__22046__i < G__22046__a.length) {
            G__22046__a[G__22046__i] = arguments[G__22046__i + 3];
            ++G__22046__i;
          }
          args = new cljs.core.IndexedSeq(G__22046__a, 0);
        }
        return G__22045__delegate.call(this, x, y, z, args);
      };
      G__22045.cljs$lang$maxFixedArity = 3;
      G__22045.cljs$lang$applyTo = function(arglist__22047) {
        var x = cljs.core.first(arglist__22047);
        arglist__22047 = cljs.core.next(arglist__22047);
        var y = cljs.core.first(arglist__22047);
        arglist__22047 = cljs.core.next(arglist__22047);
        var z = cljs.core.first(arglist__22047);
        var args = cljs.core.rest(arglist__22047);
        return G__22045__delegate(x, y, z, args);
      };
      G__22045.cljs$core$IFn$_invoke$arity$variadic = G__22045__delegate;
      return G__22045;
    }();
    G__22044 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22044__0.call(this);
        case 1:
          return G__22044__1.call(this, x);
        case 2:
          return G__22044__2.call(this, x, y);
        case 3:
          return G__22044__3.call(this, x, y, z);
        default:
          var G__22048 = null;
          if (arguments.length > 3) {
            var G__22049__i = 0, G__22049__a = new Array(arguments.length - 3);
            while (G__22049__i < G__22049__a.length) {
              G__22049__a[G__22049__i] = arguments[G__22049__i + 3];
              ++G__22049__i;
            }
            G__22048 = new cljs.core.IndexedSeq(G__22049__a, 0);
          }
          return G__22044__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22048);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22044.cljs$lang$maxFixedArity = 3;
    G__22044.cljs$lang$applyTo = G__22044__4.cljs$lang$applyTo;
    G__22044.cljs$core$IFn$_invoke$arity$0 = G__22044__0;
    G__22044.cljs$core$IFn$_invoke$arity$1 = G__22044__1;
    G__22044.cljs$core$IFn$_invoke$arity$2 = G__22044__2;
    G__22044.cljs$core$IFn$_invoke$arity$3 = G__22044__3;
    G__22044.cljs$core$IFn$_invoke$arity$variadic = G__22044__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22044;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__22050 = null;
    var G__22050__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__22050__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__22050__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__22050__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__22050__4 = function() {
      var G__22051__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__22051 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22052__i = 0, G__22052__a = new Array(arguments.length - 3);
          while (G__22052__i < G__22052__a.length) {
            G__22052__a[G__22052__i] = arguments[G__22052__i + 3];
            ++G__22052__i;
          }
          args = new cljs.core.IndexedSeq(G__22052__a, 0);
        }
        return G__22051__delegate.call(this, x, y, z, args);
      };
      G__22051.cljs$lang$maxFixedArity = 3;
      G__22051.cljs$lang$applyTo = function(arglist__22053) {
        var x = cljs.core.first(arglist__22053);
        arglist__22053 = cljs.core.next(arglist__22053);
        var y = cljs.core.first(arglist__22053);
        arglist__22053 = cljs.core.next(arglist__22053);
        var z = cljs.core.first(arglist__22053);
        var args = cljs.core.rest(arglist__22053);
        return G__22051__delegate(x, y, z, args);
      };
      G__22051.cljs$core$IFn$_invoke$arity$variadic = G__22051__delegate;
      return G__22051;
    }();
    G__22050 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22050__0.call(this);
        case 1:
          return G__22050__1.call(this, x);
        case 2:
          return G__22050__2.call(this, x, y);
        case 3:
          return G__22050__3.call(this, x, y, z);
        default:
          var G__22054 = null;
          if (arguments.length > 3) {
            var G__22055__i = 0, G__22055__a = new Array(arguments.length - 3);
            while (G__22055__i < G__22055__a.length) {
              G__22055__a[G__22055__i] = arguments[G__22055__i + 3];
              ++G__22055__i;
            }
            G__22054 = new cljs.core.IndexedSeq(G__22055__a, 0);
          }
          return G__22050__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22054);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22050.cljs$lang$maxFixedArity = 3;
    G__22050.cljs$lang$applyTo = G__22050__4.cljs$lang$applyTo;
    G__22050.cljs$core$IFn$_invoke$arity$0 = G__22050__0;
    G__22050.cljs$core$IFn$_invoke$arity$1 = G__22050__1;
    G__22050.cljs$core$IFn$_invoke$arity$2 = G__22050__2;
    G__22050.cljs$core$IFn$_invoke$arity$3 = G__22050__3;
    G__22050.cljs$core$IFn$_invoke$arity$variadic = G__22050__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22050;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__22056 = null;
    var G__22056__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__22056__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__22056__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__22056__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__22056__4 = function() {
      var G__22057__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__22057 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22058__i = 0, G__22058__a = new Array(arguments.length - 3);
          while (G__22058__i < G__22058__a.length) {
            G__22058__a[G__22058__i] = arguments[G__22058__i + 3];
            ++G__22058__i;
          }
          args = new cljs.core.IndexedSeq(G__22058__a, 0);
        }
        return G__22057__delegate.call(this, x, y, z, args);
      };
      G__22057.cljs$lang$maxFixedArity = 3;
      G__22057.cljs$lang$applyTo = function(arglist__22059) {
        var x = cljs.core.first(arglist__22059);
        arglist__22059 = cljs.core.next(arglist__22059);
        var y = cljs.core.first(arglist__22059);
        arglist__22059 = cljs.core.next(arglist__22059);
        var z = cljs.core.first(arglist__22059);
        var args = cljs.core.rest(arglist__22059);
        return G__22057__delegate(x, y, z, args);
      };
      G__22057.cljs$core$IFn$_invoke$arity$variadic = G__22057__delegate;
      return G__22057;
    }();
    G__22056 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22056__0.call(this);
        case 1:
          return G__22056__1.call(this, x);
        case 2:
          return G__22056__2.call(this, x, y);
        case 3:
          return G__22056__3.call(this, x, y, z);
        default:
          var G__22060 = null;
          if (arguments.length > 3) {
            var G__22061__i = 0, G__22061__a = new Array(arguments.length - 3);
            while (G__22061__i < G__22061__a.length) {
              G__22061__a[G__22061__i] = arguments[G__22061__i + 3];
              ++G__22061__i;
            }
            G__22060 = new cljs.core.IndexedSeq(G__22061__a, 0);
          }
          return G__22056__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22060);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22056.cljs$lang$maxFixedArity = 3;
    G__22056.cljs$lang$applyTo = G__22056__4.cljs$lang$applyTo;
    G__22056.cljs$core$IFn$_invoke$arity$0 = G__22056__0;
    G__22056.cljs$core$IFn$_invoke$arity$1 = G__22056__1;
    G__22056.cljs$core$IFn$_invoke$arity$2 = G__22056__2;
    G__22056.cljs$core$IFn$_invoke$arity$3 = G__22056__3;
    G__22056.cljs$core$IFn$_invoke$arity$variadic = G__22056__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22056;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__22062__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__22062 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__22063__i = 0, G__22063__a = new Array(arguments.length - 0);
        while (G__22063__i < G__22063__a.length) {
          G__22063__a[G__22063__i] = arguments[G__22063__i + 0];
          ++G__22063__i;
        }
        args = new cljs.core.IndexedSeq(G__22063__a, 0);
      }
      return G__22062__delegate.call(this, args);
    };
    G__22062.cljs$lang$maxFixedArity = 0;
    G__22062.cljs$lang$applyTo = function(arglist__22064) {
      var args = cljs.core.seq(arglist__22064);
      return G__22062__delegate(args);
    };
    G__22062.cljs$core$IFn$_invoke$arity$variadic = G__22062__delegate;
    return G__22062;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq22033) {
  var G__22034 = cljs.core.first(seq22033);
  var seq22033__$1 = cljs.core.next(seq22033);
  var G__22035 = cljs.core.first(seq22033__$1);
  var seq22033__$2 = cljs.core.next(seq22033__$1);
  var G__22036 = cljs.core.first(seq22033__$2);
  var seq22033__$3 = cljs.core.next(seq22033__$2);
  var G__22037 = cljs.core.first(seq22033__$3);
  var seq22033__$4 = cljs.core.next(seq22033__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__22034, G__22035, G__22036, G__22037, seq22033__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args22065 = [];
  var len__5743__auto___22084 = arguments.length;
  var i__5744__auto___22085 = 0;
  while (true) {
    if (i__5744__auto___22085 < len__5743__auto___22084) {
      args22065.push(arguments[i__5744__auto___22085]);
      var G__22086 = i__5744__auto___22085 + 1;
      i__5744__auto___22085 = G__22086;
      continue;
    } else {
    }
    break;
  }
  var G__22067 = args22065.length;
  switch(G__22067) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22065.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__22088 = null;
    var G__22088__1 = function(a) {
      var G__22068 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22068) : f.call(null, G__22068);
    };
    var G__22088__2 = function(a, b) {
      var G__22069 = a == null ? x : a;
      var G__22070 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22069, G__22070) : f.call(null, G__22069, G__22070);
    };
    var G__22088__3 = function(a, b, c) {
      var G__22071 = a == null ? x : a;
      var G__22072 = b;
      var G__22073 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22071, G__22072, G__22073) : f.call(null, G__22071, G__22072, G__22073);
    };
    var G__22088__4 = function() {
      var G__22089__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__22089 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__22090__i = 0, G__22090__a = new Array(arguments.length - 3);
          while (G__22090__i < G__22090__a.length) {
            G__22090__a[G__22090__i] = arguments[G__22090__i + 3];
            ++G__22090__i;
          }
          ds = new cljs.core.IndexedSeq(G__22090__a, 0);
        }
        return G__22089__delegate.call(this, a, b, c, ds);
      };
      G__22089.cljs$lang$maxFixedArity = 3;
      G__22089.cljs$lang$applyTo = function(arglist__22091) {
        var a = cljs.core.first(arglist__22091);
        arglist__22091 = cljs.core.next(arglist__22091);
        var b = cljs.core.first(arglist__22091);
        arglist__22091 = cljs.core.next(arglist__22091);
        var c = cljs.core.first(arglist__22091);
        var ds = cljs.core.rest(arglist__22091);
        return G__22089__delegate(a, b, c, ds);
      };
      G__22089.cljs$core$IFn$_invoke$arity$variadic = G__22089__delegate;
      return G__22089;
    }();
    G__22088 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__22088__1.call(this, a);
        case 2:
          return G__22088__2.call(this, a, b);
        case 3:
          return G__22088__3.call(this, a, b, c);
        default:
          var G__22092 = null;
          if (arguments.length > 3) {
            var G__22093__i = 0, G__22093__a = new Array(arguments.length - 3);
            while (G__22093__i < G__22093__a.length) {
              G__22093__a[G__22093__i] = arguments[G__22093__i + 3];
              ++G__22093__i;
            }
            G__22092 = new cljs.core.IndexedSeq(G__22093__a, 0);
          }
          return G__22088__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__22092);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22088.cljs$lang$maxFixedArity = 3;
    G__22088.cljs$lang$applyTo = G__22088__4.cljs$lang$applyTo;
    G__22088.cljs$core$IFn$_invoke$arity$1 = G__22088__1;
    G__22088.cljs$core$IFn$_invoke$arity$2 = G__22088__2;
    G__22088.cljs$core$IFn$_invoke$arity$3 = G__22088__3;
    G__22088.cljs$core$IFn$_invoke$arity$variadic = G__22088__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22088;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__22094 = null;
    var G__22094__2 = function(a, b) {
      var G__22074 = a == null ? x : a;
      var G__22075 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22074, G__22075) : f.call(null, G__22074, G__22075);
    };
    var G__22094__3 = function(a, b, c) {
      var G__22076 = a == null ? x : a;
      var G__22077 = b == null ? y : b;
      var G__22078 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22076, G__22077, G__22078) : f.call(null, G__22076, G__22077, G__22078);
    };
    var G__22094__4 = function() {
      var G__22095__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__22095 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__22096__i = 0, G__22096__a = new Array(arguments.length - 3);
          while (G__22096__i < G__22096__a.length) {
            G__22096__a[G__22096__i] = arguments[G__22096__i + 3];
            ++G__22096__i;
          }
          ds = new cljs.core.IndexedSeq(G__22096__a, 0);
        }
        return G__22095__delegate.call(this, a, b, c, ds);
      };
      G__22095.cljs$lang$maxFixedArity = 3;
      G__22095.cljs$lang$applyTo = function(arglist__22097) {
        var a = cljs.core.first(arglist__22097);
        arglist__22097 = cljs.core.next(arglist__22097);
        var b = cljs.core.first(arglist__22097);
        arglist__22097 = cljs.core.next(arglist__22097);
        var c = cljs.core.first(arglist__22097);
        var ds = cljs.core.rest(arglist__22097);
        return G__22095__delegate(a, b, c, ds);
      };
      G__22095.cljs$core$IFn$_invoke$arity$variadic = G__22095__delegate;
      return G__22095;
    }();
    G__22094 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__22094__2.call(this, a, b);
        case 3:
          return G__22094__3.call(this, a, b, c);
        default:
          var G__22098 = null;
          if (arguments.length > 3) {
            var G__22099__i = 0, G__22099__a = new Array(arguments.length - 3);
            while (G__22099__i < G__22099__a.length) {
              G__22099__a[G__22099__i] = arguments[G__22099__i + 3];
              ++G__22099__i;
            }
            G__22098 = new cljs.core.IndexedSeq(G__22099__a, 0);
          }
          return G__22094__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__22098);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22094.cljs$lang$maxFixedArity = 3;
    G__22094.cljs$lang$applyTo = G__22094__4.cljs$lang$applyTo;
    G__22094.cljs$core$IFn$_invoke$arity$2 = G__22094__2;
    G__22094.cljs$core$IFn$_invoke$arity$3 = G__22094__3;
    G__22094.cljs$core$IFn$_invoke$arity$variadic = G__22094__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22094;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__22100 = null;
    var G__22100__2 = function(a, b) {
      var G__22079 = a == null ? x : a;
      var G__22080 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22079, G__22080) : f.call(null, G__22079, G__22080);
    };
    var G__22100__3 = function(a, b, c) {
      var G__22081 = a == null ? x : a;
      var G__22082 = b == null ? y : b;
      var G__22083 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22081, G__22082, G__22083) : f.call(null, G__22081, G__22082, G__22083);
    };
    var G__22100__4 = function() {
      var G__22101__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__22101 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__22102__i = 0, G__22102__a = new Array(arguments.length - 3);
          while (G__22102__i < G__22102__a.length) {
            G__22102__a[G__22102__i] = arguments[G__22102__i + 3];
            ++G__22102__i;
          }
          ds = new cljs.core.IndexedSeq(G__22102__a, 0);
        }
        return G__22101__delegate.call(this, a, b, c, ds);
      };
      G__22101.cljs$lang$maxFixedArity = 3;
      G__22101.cljs$lang$applyTo = function(arglist__22103) {
        var a = cljs.core.first(arglist__22103);
        arglist__22103 = cljs.core.next(arglist__22103);
        var b = cljs.core.first(arglist__22103);
        arglist__22103 = cljs.core.next(arglist__22103);
        var c = cljs.core.first(arglist__22103);
        var ds = cljs.core.rest(arglist__22103);
        return G__22101__delegate(a, b, c, ds);
      };
      G__22101.cljs$core$IFn$_invoke$arity$variadic = G__22101__delegate;
      return G__22101;
    }();
    G__22100 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__22100__2.call(this, a, b);
        case 3:
          return G__22100__3.call(this, a, b, c);
        default:
          var G__22104 = null;
          if (arguments.length > 3) {
            var G__22105__i = 0, G__22105__a = new Array(arguments.length - 3);
            while (G__22105__i < G__22105__a.length) {
              G__22105__a[G__22105__i] = arguments[G__22105__i + 3];
              ++G__22105__i;
            }
            G__22104 = new cljs.core.IndexedSeq(G__22105__a, 0);
          }
          return G__22100__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__22104);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22100.cljs$lang$maxFixedArity = 3;
    G__22100.cljs$lang$applyTo = G__22100__4.cljs$lang$applyTo;
    G__22100.cljs$core$IFn$_invoke$arity$2 = G__22100__2;
    G__22100.cljs$core$IFn$_invoke$arity$3 = G__22100__3;
    G__22100.cljs$core$IFn$_invoke$arity$variadic = G__22100__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22100;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.volatile_BANG_;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args22106 = [];
  var len__5743__auto___22139 = arguments.length;
  var i__5744__auto___22140 = 0;
  while (true) {
    if (i__5744__auto___22140 < len__5743__auto___22139) {
      args22106.push(arguments[i__5744__auto___22140]);
      var G__22141 = i__5744__auto___22140 + 1;
      i__5744__auto___22140 = G__22141;
      continue;
    } else {
    }
    break;
  }
  var G__22108 = args22106.length;
  switch(G__22108) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22106.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__22143 = null;
        var G__22143__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22143__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22143__2 = function(result, input) {
          var G__22111 = result;
          var G__22112 = function() {
            var G__22113 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__22114 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22113, G__22114) : f.call(null, G__22113, G__22114);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22111, G__22112) : rf.call(null, G__22111, G__22112);
        };
        G__22143 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22143__0.call(this);
            case 1:
              return G__22143__1.call(this, result);
            case 2:
              return G__22143__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22143.cljs$core$IFn$_invoke$arity$0 = G__22143__0;
        G__22143.cljs$core$IFn$_invoke$arity$1 = G__22143__1;
        G__22143.cljs$core$IFn$_invoke$arity$2 = G__22143__2;
        return G__22143;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5588__auto___22144 = size;
          var i_22145 = 0;
          while (true) {
            if (i_22145 < n__5588__auto___22144) {
              cljs.core.chunk_append(b, function() {
                var G__22135 = idx + i_22145;
                var G__22136 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22145);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22135, G__22136) : f.call(null, G__22135, G__22136);
              }());
              var G__22146 = i_22145 + 1;
              i_22145 = G__22146;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__22137 = idx;
            var G__22138 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22137, G__22138) : f.call(null, G__22137, G__22138);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args22147 = [];
  var len__5743__auto___22152 = arguments.length;
  var i__5744__auto___22153 = 0;
  while (true) {
    if (i__5744__auto___22153 < len__5743__auto___22152) {
      args22147.push(arguments[i__5744__auto___22153]);
      var G__22154 = i__5744__auto___22153 + 1;
      i__5744__auto___22153 = G__22154;
      continue;
    } else {
    }
    break;
  }
  var G__22149 = args22147.length;
  switch(G__22149) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22147.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__22156 = null;
      var G__22156__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22156__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22156__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__22156 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22156__0.call(this);
          case 1:
            return G__22156__1.call(this, result);
          case 2:
            return G__22156__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22156.cljs$core$IFn$_invoke$arity$0 = G__22156__0;
      G__22156.cljs$core$IFn$_invoke$arity$1 = G__22156__1;
      G__22156.cljs$core$IFn$_invoke$arity$2 = G__22156__2;
      return G__22156;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5588__auto___22157 = size;
        var i_22158 = 0;
        while (true) {
          if (i_22158 < n__5588__auto___22157) {
            var x_22159 = function() {
              var G__22150 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22158);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22150) : f.call(null, G__22150);
            }();
            if (x_22159 == null) {
            } else {
              cljs.core.chunk_append(b, x_22159);
            }
            var G__22160 = i_22158 + 1;
            i_22158 = G__22160;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__22151 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22151) : f.call(null, G__22151);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__22161 = cljs.core.seq(self__.watches);
  var chunk__22162 = null;
  var count__22163 = 0;
  var i__22164 = 0;
  while (true) {
    if (i__22164 < count__22163) {
      var vec__22165 = chunk__22162.cljs$core$IIndexed$_nth$arity$2(null, i__22164);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22165, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22165, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__22167 = seq__22161;
      var G__22168 = chunk__22162;
      var G__22169 = count__22163;
      var G__22170 = i__22164 + 1;
      seq__22161 = G__22167;
      chunk__22162 = G__22168;
      count__22163 = G__22169;
      i__22164 = G__22170;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__22161);
      if (temp__4657__auto__) {
        var seq__22161__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__22161__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first(seq__22161__$1);
          var G__22171 = cljs.core.chunk_rest(seq__22161__$1);
          var G__22172 = c__5488__auto__;
          var G__22173 = cljs.core.count(c__5488__auto__);
          var G__22174 = 0;
          seq__22161 = G__22171;
          chunk__22162 = G__22172;
          count__22163 = G__22173;
          i__22164 = G__22174;
          continue;
        } else {
          var vec__22166 = cljs.core.first(seq__22161__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22166, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22166, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__22175 = cljs.core.next(seq__22161__$1);
          var G__22176 = null;
          var G__22177 = 0;
          var G__22178 = 0;
          seq__22161 = G__22175;
          chunk__22162 = G__22176;
          count__22163 = G__22177;
          i__22164 = G__22178;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args22179 = [];
  var len__5743__auto___22187 = arguments.length;
  var i__5744__auto___22188 = 0;
  while (true) {
    if (i__5744__auto___22188 < len__5743__auto___22187) {
      args22179.push(arguments[i__5744__auto___22188]);
      var G__22189 = i__5744__auto___22188 + 1;
      i__5744__auto___22188 = G__22189;
      continue;
    } else {
    }
    break;
  }
  var G__22183 = args22179.length;
  switch(G__22183) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22179.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5762__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__22184) {
  var map__22185 = p__22184;
  var map__22185__$1 = (!(map__22185 == null) ? map__22185.cljs$lang$protocol_mask$partition0$ & 64 || map__22185.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__22185) : map__22185;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22185__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22185__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq22180) {
  var G__22181 = cljs.core.first(seq22180);
  var seq22180__$1 = cljs.core.next(seq22180);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__22181, seq22180__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__22192 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22192) : cljs.core.pr_str.call(null, G__22192);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args22193 = [];
  var len__5743__auto___22207 = arguments.length;
  var i__5744__auto___22208 = 0;
  while (true) {
    if (i__5744__auto___22208 < len__5743__auto___22207) {
      args22193.push(arguments[i__5744__auto___22208]);
      var G__22209 = i__5744__auto___22208 + 1;
      i__5744__auto___22208 = G__22209;
      continue;
    } else {
    }
    break;
  }
  var G__22200 = args22193.length;
  switch(G__22200) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22193.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5762__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__22201 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22201) : f.call(null, G__22201);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__22202 = a.state;
      var G__22203 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22202, G__22203) : f.call(null, G__22202, G__22203);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__22204 = a.state;
      var G__22205 = x;
      var G__22206 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22204, G__22205, G__22206) : f.call(null, G__22204, G__22205, G__22206);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq22194) {
  var G__22195 = cljs.core.first(seq22194);
  var seq22194__$1 = cljs.core.next(seq22194);
  var G__22196 = cljs.core.first(seq22194__$1);
  var seq22194__$2 = cljs.core.next(seq22194__$1);
  var G__22197 = cljs.core.first(seq22194__$2);
  var seq22194__$3 = cljs.core.next(seq22194__$2);
  var G__22198 = cljs.core.first(seq22194__$3);
  var seq22194__$4 = cljs.core.next(seq22194__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__22195, G__22196, G__22197, G__22198, seq22194__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args22211 = [];
  var len__5743__auto___22242 = arguments.length;
  var i__5744__auto___22243 = 0;
  while (true) {
    if (i__5744__auto___22243 < len__5743__auto___22242) {
      args22211.push(arguments[i__5744__auto___22243]);
      var G__22244 = i__5744__auto___22243 + 1;
      i__5744__auto___22243 = G__22244;
      continue;
    } else {
    }
    break;
  }
  var G__22213 = args22211.length;
  switch(G__22213) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22211.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__22246 = null;
        var G__22246__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22246__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22246__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__22246 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22246__0.call(this);
            case 1:
              return G__22246__1.call(this, result);
            case 2:
              return G__22246__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22246.cljs$core$IFn$_invoke$arity$0 = G__22246__0;
        G__22246.cljs$core$IFn$_invoke$arity$1 = G__22246__1;
        G__22246.cljs$core$IFn$_invoke$arity$2 = G__22246__2;
        return G__22246;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5588__auto___22247 = size;
          var i_22248 = 0;
          while (true) {
            if (i_22248 < n__5588__auto___22247) {
              var x_22249 = function() {
                var G__22238 = idx + i_22248;
                var G__22239 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22248);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22238, G__22239) : f.call(null, G__22238, G__22239);
              }();
              if (x_22249 == null) {
              } else {
                cljs.core.chunk_append(b, x_22249);
              }
              var G__22250 = i_22248 + 1;
              i_22248 = G__22250;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__22240 = idx;
            var G__22241 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22240, G__22241) : f.call(null, G__22240, G__22241);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args22257 = [];
  var len__5743__auto___22264 = arguments.length;
  var i__5744__auto___22265 = 0;
  while (true) {
    if (i__5744__auto___22265 < len__5743__auto___22264) {
      args22257.push(arguments[i__5744__auto___22265]);
      var G__22266 = i__5744__auto___22265 + 1;
      i__5744__auto___22265 = G__22266;
      continue;
    } else {
    }
    break;
  }
  var G__22263 = args22257.length;
  switch(G__22263) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22257.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4673__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4673__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4673__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4673__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4673__auto__)) {
          var and__4673__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4673__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4673__auto____$1;
          }
        } else {
          return and__4673__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__22268__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4673__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4673__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4673__auto__;
          }
        }());
      };
      var G__22268 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22269__i = 0, G__22269__a = new Array(arguments.length - 3);
          while (G__22269__i < G__22269__a.length) {
            G__22269__a[G__22269__i] = arguments[G__22269__i + 3];
            ++G__22269__i;
          }
          args = new cljs.core.IndexedSeq(G__22269__a, 0);
        }
        return G__22268__delegate.call(this, x, y, z, args);
      };
      G__22268.cljs$lang$maxFixedArity = 3;
      G__22268.cljs$lang$applyTo = function(arglist__22270) {
        var x = cljs.core.first(arglist__22270);
        arglist__22270 = cljs.core.next(arglist__22270);
        var y = cljs.core.first(arglist__22270);
        arglist__22270 = cljs.core.next(arglist__22270);
        var z = cljs.core.first(arglist__22270);
        var args = cljs.core.rest(arglist__22270);
        return G__22268__delegate(x, y, z, args);
      };
      G__22268.cljs$core$IFn$_invoke$arity$variadic = G__22268__delegate;
      return G__22268;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__22271 = null;
          if (arguments.length > 3) {
            var G__22272__i = 0, G__22272__a = new Array(arguments.length - 3);
            while (G__22272__i < G__22272__a.length) {
              G__22272__a[G__22272__i] = arguments[G__22272__i + 3];
              ++G__22272__i;
            }
            G__22271 = new cljs.core.IndexedSeq(G__22272__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22271);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4673__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4673__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4673__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4673__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4673__auto__)) {
          var and__4673__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4673__auto____$1)) {
            var and__4673__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4673__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4673__auto____$2;
            }
          } else {
            return and__4673__auto____$1;
          }
        } else {
          return and__4673__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4673__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4673__auto__)) {
          var and__4673__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4673__auto____$1)) {
            var and__4673__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4673__auto____$2)) {
              var and__4673__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4673__auto____$3)) {
                var and__4673__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4673__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4673__auto____$4;
                }
              } else {
                return and__4673__auto____$3;
              }
            } else {
              return and__4673__auto____$2;
            }
          } else {
            return and__4673__auto____$1;
          }
        } else {
          return and__4673__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__22273__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4673__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4673__auto__)) {
            return cljs.core.every_QMARK_(function(and__4673__auto__) {
              return function(p1__22251_SHARP_) {
                var and__4673__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__22251_SHARP_) : p1.call(null, p1__22251_SHARP_);
                if (cljs.core.truth_(and__4673__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__22251_SHARP_) : p2.call(null, p1__22251_SHARP_);
                } else {
                  return and__4673__auto____$1;
                }
              };
            }(and__4673__auto__), args);
          } else {
            return and__4673__auto__;
          }
        }());
      };
      var G__22273 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22274__i = 0, G__22274__a = new Array(arguments.length - 3);
          while (G__22274__i < G__22274__a.length) {
            G__22274__a[G__22274__i] = arguments[G__22274__i + 3];
            ++G__22274__i;
          }
          args = new cljs.core.IndexedSeq(G__22274__a, 0);
        }
        return G__22273__delegate.call(this, x, y, z, args);
      };
      G__22273.cljs$lang$maxFixedArity = 3;
      G__22273.cljs$lang$applyTo = function(arglist__22275) {
        var x = cljs.core.first(arglist__22275);
        arglist__22275 = cljs.core.next(arglist__22275);
        var y = cljs.core.first(arglist__22275);
        arglist__22275 = cljs.core.next(arglist__22275);
        var z = cljs.core.first(arglist__22275);
        var args = cljs.core.rest(arglist__22275);
        return G__22273__delegate(x, y, z, args);
      };
      G__22273.cljs$core$IFn$_invoke$arity$variadic = G__22273__delegate;
      return G__22273;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__22276 = null;
          if (arguments.length > 3) {
            var G__22277__i = 0, G__22277__a = new Array(arguments.length - 3);
            while (G__22277__i < G__22277__a.length) {
              G__22277__a[G__22277__i] = arguments[G__22277__i + 3];
              ++G__22277__i;
            }
            G__22276 = new cljs.core.IndexedSeq(G__22277__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22276);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4673__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4673__auto__)) {
          var and__4673__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4673__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4673__auto____$1;
          }
        } else {
          return and__4673__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4673__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4673__auto__)) {
          var and__4673__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4673__auto____$1)) {
            var and__4673__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4673__auto____$2)) {
              var and__4673__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4673__auto____$3)) {
                var and__4673__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4673__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4673__auto____$4;
                }
              } else {
                return and__4673__auto____$3;
              }
            } else {
              return and__4673__auto____$2;
            }
          } else {
            return and__4673__auto____$1;
          }
        } else {
          return and__4673__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4673__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4673__auto__)) {
          var and__4673__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4673__auto____$1)) {
            var and__4673__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4673__auto____$2)) {
              var and__4673__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4673__auto____$3)) {
                var and__4673__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4673__auto____$4)) {
                  var and__4673__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4673__auto____$5)) {
                    var and__4673__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4673__auto____$6)) {
                      var and__4673__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4673__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4673__auto____$7;
                      }
                    } else {
                      return and__4673__auto____$6;
                    }
                  } else {
                    return and__4673__auto____$5;
                  }
                } else {
                  return and__4673__auto____$4;
                }
              } else {
                return and__4673__auto____$3;
              }
            } else {
              return and__4673__auto____$2;
            }
          } else {
            return and__4673__auto____$1;
          }
        } else {
          return and__4673__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__22278__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4673__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4673__auto__)) {
            return cljs.core.every_QMARK_(function(and__4673__auto__) {
              return function(p1__22252_SHARP_) {
                var and__4673__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__22252_SHARP_) : p1.call(null, p1__22252_SHARP_);
                if (cljs.core.truth_(and__4673__auto____$1)) {
                  var and__4673__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__22252_SHARP_) : p2.call(null, p1__22252_SHARP_);
                  if (cljs.core.truth_(and__4673__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__22252_SHARP_) : p3.call(null, p1__22252_SHARP_);
                  } else {
                    return and__4673__auto____$2;
                  }
                } else {
                  return and__4673__auto____$1;
                }
              };
            }(and__4673__auto__), args);
          } else {
            return and__4673__auto__;
          }
        }());
      };
      var G__22278 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22279__i = 0, G__22279__a = new Array(arguments.length - 3);
          while (G__22279__i < G__22279__a.length) {
            G__22279__a[G__22279__i] = arguments[G__22279__i + 3];
            ++G__22279__i;
          }
          args = new cljs.core.IndexedSeq(G__22279__a, 0);
        }
        return G__22278__delegate.call(this, x, y, z, args);
      };
      G__22278.cljs$lang$maxFixedArity = 3;
      G__22278.cljs$lang$applyTo = function(arglist__22280) {
        var x = cljs.core.first(arglist__22280);
        arglist__22280 = cljs.core.next(arglist__22280);
        var y = cljs.core.first(arglist__22280);
        arglist__22280 = cljs.core.next(arglist__22280);
        var z = cljs.core.first(arglist__22280);
        var args = cljs.core.rest(arglist__22280);
        return G__22278__delegate(x, y, z, args);
      };
      G__22278.cljs$core$IFn$_invoke$arity$variadic = G__22278__delegate;
      return G__22278;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__22281 = null;
          if (arguments.length > 3) {
            var G__22282__i = 0, G__22282__a = new Array(arguments.length - 3);
            while (G__22282__i < G__22282__a.length) {
              G__22282__a[G__22282__i] = arguments[G__22282__i + 3];
              ++G__22282__i;
            }
            G__22281 = new cljs.core.IndexedSeq(G__22282__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22281);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__22253_SHARP_) {
            return p1__22253_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22253_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22253_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__22254_SHARP_) {
            var and__4673__auto__ = p1__22254_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22254_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22254_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4673__auto__)) {
              return p1__22254_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22254_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__22254_SHARP_.call(null, y);
            } else {
              return and__4673__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__22255_SHARP_) {
            var and__4673__auto__ = p1__22255_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22255_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22255_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4673__auto__)) {
              var and__4673__auto____$1 = p1__22255_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22255_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__22255_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4673__auto____$1)) {
                return p1__22255_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22255_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__22255_SHARP_.call(null, z);
              } else {
                return and__4673__auto____$1;
              }
            } else {
              return and__4673__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__22283__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4673__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4673__auto__)) {
              return cljs.core.every_QMARK_(function(and__4673__auto__, ps__$1) {
                return function(p1__22256_SHARP_) {
                  return cljs.core.every_QMARK_(p1__22256_SHARP_, args);
                };
              }(and__4673__auto__, ps__$1), ps__$1);
            } else {
              return and__4673__auto__;
            }
          }());
        };
        var G__22283 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__22284__i = 0, G__22284__a = new Array(arguments.length - 3);
            while (G__22284__i < G__22284__a.length) {
              G__22284__a[G__22284__i] = arguments[G__22284__i + 3];
              ++G__22284__i;
            }
            args = new cljs.core.IndexedSeq(G__22284__a, 0);
          }
          return G__22283__delegate.call(this, x, y, z, args);
        };
        G__22283.cljs$lang$maxFixedArity = 3;
        G__22283.cljs$lang$applyTo = function(arglist__22285) {
          var x = cljs.core.first(arglist__22285);
          arglist__22285 = cljs.core.next(arglist__22285);
          var y = cljs.core.first(arglist__22285);
          arglist__22285 = cljs.core.next(arglist__22285);
          var z = cljs.core.first(arglist__22285);
          var args = cljs.core.rest(arglist__22285);
          return G__22283__delegate(x, y, z, args);
        };
        G__22283.cljs$core$IFn$_invoke$arity$variadic = G__22283__delegate;
        return G__22283;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__22286 = null;
            if (arguments.length > 3) {
              var G__22287__i = 0, G__22287__a = new Array(arguments.length - 3);
              while (G__22287__i < G__22287__a.length) {
                G__22287__a[G__22287__i] = arguments[G__22287__i + 3];
                ++G__22287__i;
              }
              G__22286 = new cljs.core.IndexedSeq(G__22287__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22286);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq22258) {
  var G__22259 = cljs.core.first(seq22258);
  var seq22258__$1 = cljs.core.next(seq22258);
  var G__22260 = cljs.core.first(seq22258__$1);
  var seq22258__$2 = cljs.core.next(seq22258__$1);
  var G__22261 = cljs.core.first(seq22258__$2);
  var seq22258__$3 = cljs.core.next(seq22258__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__22259, G__22260, G__22261, seq22258__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args22294 = [];
  var len__5743__auto___22301 = arguments.length;
  var i__5744__auto___22302 = 0;
  while (true) {
    if (i__5744__auto___22302 < len__5743__auto___22301) {
      args22294.push(arguments[i__5744__auto___22302]);
      var G__22303 = i__5744__auto___22302 + 1;
      i__5744__auto___22302 = G__22303;
      continue;
    } else {
    }
    break;
  }
  var G__22300 = args22294.length;
  switch(G__22300) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22294.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4685__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4685__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__22305__delegate = function(x, y, z, args) {
        var or__4685__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__22305 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22306__i = 0, G__22306__a = new Array(arguments.length - 3);
          while (G__22306__i < G__22306__a.length) {
            G__22306__a[G__22306__i] = arguments[G__22306__i + 3];
            ++G__22306__i;
          }
          args = new cljs.core.IndexedSeq(G__22306__a, 0);
        }
        return G__22305__delegate.call(this, x, y, z, args);
      };
      G__22305.cljs$lang$maxFixedArity = 3;
      G__22305.cljs$lang$applyTo = function(arglist__22307) {
        var x = cljs.core.first(arglist__22307);
        arglist__22307 = cljs.core.next(arglist__22307);
        var y = cljs.core.first(arglist__22307);
        arglist__22307 = cljs.core.next(arglist__22307);
        var z = cljs.core.first(arglist__22307);
        var args = cljs.core.rest(arglist__22307);
        return G__22305__delegate(x, y, z, args);
      };
      G__22305.cljs$core$IFn$_invoke$arity$variadic = G__22305__delegate;
      return G__22305;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__22308 = null;
          if (arguments.length > 3) {
            var G__22309__i = 0, G__22309__a = new Array(arguments.length - 3);
            while (G__22309__i < G__22309__a.length) {
              G__22309__a[G__22309__i] = arguments[G__22309__i + 3];
              ++G__22309__i;
            }
            G__22308 = new cljs.core.IndexedSeq(G__22309__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22308);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4685__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4685__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          var or__4685__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4685__auto____$2)) {
            return or__4685__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4685__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          var or__4685__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4685__auto____$2)) {
            return or__4685__auto____$2;
          } else {
            var or__4685__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4685__auto____$3)) {
              return or__4685__auto____$3;
            } else {
              var or__4685__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4685__auto____$4)) {
                return or__4685__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__22310__delegate = function(x, y, z, args) {
        var or__4685__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return cljs.core.some(function(or__4685__auto__) {
            return function(p1__22288_SHARP_) {
              var or__4685__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__22288_SHARP_) : p1.call(null, p1__22288_SHARP_);
              if (cljs.core.truth_(or__4685__auto____$1)) {
                return or__4685__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__22288_SHARP_) : p2.call(null, p1__22288_SHARP_);
              }
            };
          }(or__4685__auto__), args);
        }
      };
      var G__22310 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22311__i = 0, G__22311__a = new Array(arguments.length - 3);
          while (G__22311__i < G__22311__a.length) {
            G__22311__a[G__22311__i] = arguments[G__22311__i + 3];
            ++G__22311__i;
          }
          args = new cljs.core.IndexedSeq(G__22311__a, 0);
        }
        return G__22310__delegate.call(this, x, y, z, args);
      };
      G__22310.cljs$lang$maxFixedArity = 3;
      G__22310.cljs$lang$applyTo = function(arglist__22312) {
        var x = cljs.core.first(arglist__22312);
        arglist__22312 = cljs.core.next(arglist__22312);
        var y = cljs.core.first(arglist__22312);
        arglist__22312 = cljs.core.next(arglist__22312);
        var z = cljs.core.first(arglist__22312);
        var args = cljs.core.rest(arglist__22312);
        return G__22310__delegate(x, y, z, args);
      };
      G__22310.cljs$core$IFn$_invoke$arity$variadic = G__22310__delegate;
      return G__22310;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__22313 = null;
          if (arguments.length > 3) {
            var G__22314__i = 0, G__22314__a = new Array(arguments.length - 3);
            while (G__22314__i < G__22314__a.length) {
              G__22314__a[G__22314__i] = arguments[G__22314__i + 3];
              ++G__22314__i;
            }
            G__22313 = new cljs.core.IndexedSeq(G__22314__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22313);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4685__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4685__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          var or__4685__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4685__auto____$2)) {
            return or__4685__auto____$2;
          } else {
            var or__4685__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4685__auto____$3)) {
              return or__4685__auto____$3;
            } else {
              var or__4685__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4685__auto____$4)) {
                return or__4685__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4685__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          var or__4685__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4685__auto____$2)) {
            return or__4685__auto____$2;
          } else {
            var or__4685__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4685__auto____$3)) {
              return or__4685__auto____$3;
            } else {
              var or__4685__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4685__auto____$4)) {
                return or__4685__auto____$4;
              } else {
                var or__4685__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4685__auto____$5)) {
                  return or__4685__auto____$5;
                } else {
                  var or__4685__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4685__auto____$6)) {
                    return or__4685__auto____$6;
                  } else {
                    var or__4685__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4685__auto____$7)) {
                      return or__4685__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__22315__delegate = function(x, y, z, args) {
        var or__4685__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return cljs.core.some(function(or__4685__auto__) {
            return function(p1__22289_SHARP_) {
              var or__4685__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__22289_SHARP_) : p1.call(null, p1__22289_SHARP_);
              if (cljs.core.truth_(or__4685__auto____$1)) {
                return or__4685__auto____$1;
              } else {
                var or__4685__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__22289_SHARP_) : p2.call(null, p1__22289_SHARP_);
                if (cljs.core.truth_(or__4685__auto____$2)) {
                  return or__4685__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__22289_SHARP_) : p3.call(null, p1__22289_SHARP_);
                }
              }
            };
          }(or__4685__auto__), args);
        }
      };
      var G__22315 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22316__i = 0, G__22316__a = new Array(arguments.length - 3);
          while (G__22316__i < G__22316__a.length) {
            G__22316__a[G__22316__i] = arguments[G__22316__i + 3];
            ++G__22316__i;
          }
          args = new cljs.core.IndexedSeq(G__22316__a, 0);
        }
        return G__22315__delegate.call(this, x, y, z, args);
      };
      G__22315.cljs$lang$maxFixedArity = 3;
      G__22315.cljs$lang$applyTo = function(arglist__22317) {
        var x = cljs.core.first(arglist__22317);
        arglist__22317 = cljs.core.next(arglist__22317);
        var y = cljs.core.first(arglist__22317);
        arglist__22317 = cljs.core.next(arglist__22317);
        var z = cljs.core.first(arglist__22317);
        var args = cljs.core.rest(arglist__22317);
        return G__22315__delegate(x, y, z, args);
      };
      G__22315.cljs$core$IFn$_invoke$arity$variadic = G__22315__delegate;
      return G__22315;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__22318 = null;
          if (arguments.length > 3) {
            var G__22319__i = 0, G__22319__a = new Array(arguments.length - 3);
            while (G__22319__i < G__22319__a.length) {
              G__22319__a[G__22319__i] = arguments[G__22319__i + 3];
              ++G__22319__i;
            }
            G__22318 = new cljs.core.IndexedSeq(G__22319__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22318);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__22290_SHARP_) {
            return p1__22290_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22290_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22290_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__22291_SHARP_) {
            var or__4685__auto__ = p1__22291_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22291_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22291_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4685__auto__)) {
              return or__4685__auto__;
            } else {
              return p1__22291_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22291_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__22291_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__22292_SHARP_) {
            var or__4685__auto__ = p1__22292_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22292_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22292_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4685__auto__)) {
              return or__4685__auto__;
            } else {
              var or__4685__auto____$1 = p1__22292_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22292_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__22292_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4685__auto____$1)) {
                return or__4685__auto____$1;
              } else {
                return p1__22292_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22292_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__22292_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__22320__delegate = function(x, y, z, args) {
          var or__4685__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return cljs.core.some(function(or__4685__auto__, ps__$1) {
              return function(p1__22293_SHARP_) {
                return cljs.core.some(p1__22293_SHARP_, args);
              };
            }(or__4685__auto__, ps__$1), ps__$1);
          }
        };
        var G__22320 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__22321__i = 0, G__22321__a = new Array(arguments.length - 3);
            while (G__22321__i < G__22321__a.length) {
              G__22321__a[G__22321__i] = arguments[G__22321__i + 3];
              ++G__22321__i;
            }
            args = new cljs.core.IndexedSeq(G__22321__a, 0);
          }
          return G__22320__delegate.call(this, x, y, z, args);
        };
        G__22320.cljs$lang$maxFixedArity = 3;
        G__22320.cljs$lang$applyTo = function(arglist__22322) {
          var x = cljs.core.first(arglist__22322);
          arglist__22322 = cljs.core.next(arglist__22322);
          var y = cljs.core.first(arglist__22322);
          arglist__22322 = cljs.core.next(arglist__22322);
          var z = cljs.core.first(arglist__22322);
          var args = cljs.core.rest(arglist__22322);
          return G__22320__delegate(x, y, z, args);
        };
        G__22320.cljs$core$IFn$_invoke$arity$variadic = G__22320__delegate;
        return G__22320;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__22323 = null;
            if (arguments.length > 3) {
              var G__22324__i = 0, G__22324__a = new Array(arguments.length - 3);
              while (G__22324__i < G__22324__a.length) {
                G__22324__a[G__22324__i] = arguments[G__22324__i + 3];
                ++G__22324__i;
              }
              G__22323 = new cljs.core.IndexedSeq(G__22324__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22323);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq22295) {
  var G__22296 = cljs.core.first(seq22295);
  var seq22295__$1 = cljs.core.next(seq22295);
  var G__22297 = cljs.core.first(seq22295__$1);
  var seq22295__$2 = cljs.core.next(seq22295__$1);
  var G__22298 = cljs.core.first(seq22295__$2);
  var seq22295__$3 = cljs.core.next(seq22295__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__22296, G__22297, G__22298, seq22295__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args22326 = [];
  var len__5743__auto___22346 = arguments.length;
  var i__5744__auto___22347 = 0;
  while (true) {
    if (i__5744__auto___22347 < len__5743__auto___22346) {
      args22326.push(arguments[i__5744__auto___22347]);
      var G__22348 = i__5744__auto___22347 + 1;
      i__5744__auto___22347 = G__22348;
      continue;
    } else {
    }
    break;
  }
  var G__22333 = args22326.length;
  switch(G__22333) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22326.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5762__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__22350 = null;
      var G__22350__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22350__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22350__2 = function(result, input) {
        var G__22334 = result;
        var G__22335 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22334, G__22335) : rf.call(null, G__22334, G__22335);
      };
      var G__22350__3 = function() {
        var G__22351__delegate = function(result, input, inputs) {
          var G__22336 = result;
          var G__22337 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22336, G__22337) : rf.call(null, G__22336, G__22337);
        };
        var G__22351 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__22352__i = 0, G__22352__a = new Array(arguments.length - 2);
            while (G__22352__i < G__22352__a.length) {
              G__22352__a[G__22352__i] = arguments[G__22352__i + 2];
              ++G__22352__i;
            }
            inputs = new cljs.core.IndexedSeq(G__22352__a, 0);
          }
          return G__22351__delegate.call(this, result, input, inputs);
        };
        G__22351.cljs$lang$maxFixedArity = 2;
        G__22351.cljs$lang$applyTo = function(arglist__22353) {
          var result = cljs.core.first(arglist__22353);
          arglist__22353 = cljs.core.next(arglist__22353);
          var input = cljs.core.first(arglist__22353);
          var inputs = cljs.core.rest(arglist__22353);
          return G__22351__delegate(result, input, inputs);
        };
        G__22351.cljs$core$IFn$_invoke$arity$variadic = G__22351__delegate;
        return G__22351;
      }();
      G__22350 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__22350__0.call(this);
          case 1:
            return G__22350__1.call(this, result);
          case 2:
            return G__22350__2.call(this, result, input);
          default:
            var G__22354 = null;
            if (arguments.length > 2) {
              var G__22355__i = 0, G__22355__a = new Array(arguments.length - 2);
              while (G__22355__i < G__22355__a.length) {
                G__22355__a[G__22355__i] = arguments[G__22355__i + 2];
                ++G__22355__i;
              }
              G__22354 = new cljs.core.IndexedSeq(G__22355__a, 0);
            }
            return G__22350__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__22354);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22350.cljs$lang$maxFixedArity = 2;
      G__22350.cljs$lang$applyTo = G__22350__3.cljs$lang$applyTo;
      G__22350.cljs$core$IFn$_invoke$arity$0 = G__22350__0;
      G__22350.cljs$core$IFn$_invoke$arity$1 = G__22350__1;
      G__22350.cljs$core$IFn$_invoke$arity$2 = G__22350__2;
      G__22350.cljs$core$IFn$_invoke$arity$variadic = G__22350__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__22350;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5588__auto___22356 = size;
        var i_22357 = 0;
        while (true) {
          if (i_22357 < n__5588__auto___22356) {
            cljs.core.chunk_append(b, function() {
              var G__22338 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22357);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22338) : f.call(null, G__22338);
            }());
            var G__22358 = i_22357 + 1;
            i_22357 = G__22358;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__22339 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22339) : f.call(null, G__22339);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__22340 = cljs.core.first(s1);
        var G__22341 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22340, G__22341) : f.call(null, G__22340, G__22341);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__22342 = cljs.core.first(s1);
        var G__22343 = cljs.core.first(s2);
        var G__22344 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22342, G__22343, G__22344) : f.call(null, G__22342, G__22343, G__22344);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__22325_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__22325_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq22327) {
  var G__22328 = cljs.core.first(seq22327);
  var seq22327__$1 = cljs.core.next(seq22327);
  var G__22329 = cljs.core.first(seq22327__$1);
  var seq22327__$2 = cljs.core.next(seq22327__$1);
  var G__22330 = cljs.core.first(seq22327__$2);
  var seq22327__$3 = cljs.core.next(seq22327__$2);
  var G__22331 = cljs.core.first(seq22327__$3);
  var seq22327__$4 = cljs.core.next(seq22327__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__22328, G__22329, G__22330, G__22331, seq22327__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args22359 = [];
  var len__5743__auto___22364 = arguments.length;
  var i__5744__auto___22365 = 0;
  while (true) {
    if (i__5744__auto___22365 < len__5743__auto___22364) {
      args22359.push(arguments[i__5744__auto___22365]);
      var G__22366 = i__5744__auto___22365 + 1;
      i__5744__auto___22365 = G__22366;
      continue;
    } else {
    }
    break;
  }
  var G__22361 = args22359.length;
  switch(G__22361) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22359.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__22362 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22362) : cljs.core.pr_str.call(null, G__22362);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__22368 = null;
        var G__22368__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22368__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22368__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__22368 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22368__0.call(this);
            case 1:
              return G__22368__1.call(this, result);
            case 2:
              return G__22368__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22368.cljs$core$IFn$_invoke$arity$0 = G__22368__0;
        G__22368.cljs$core$IFn$_invoke$arity$1 = G__22368__1;
        G__22368.cljs$core$IFn$_invoke$arity$2 = G__22368__2;
        return G__22368;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__22363 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22363) : cljs.core.pr_str.call(null, G__22363);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args22369 = [];
  var len__5743__auto___22374 = arguments.length;
  var i__5744__auto___22375 = 0;
  while (true) {
    if (i__5744__auto___22375 < len__5743__auto___22374) {
      args22369.push(arguments[i__5744__auto___22375]);
      var G__22376 = i__5744__auto___22375 + 1;
      i__5744__auto___22375 = G__22376;
      continue;
    } else {
    }
    break;
  }
  var G__22371 = args22369.length;
  switch(G__22371) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22369.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__22372 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22372) : cljs.core.pr_str.call(null, G__22372);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__22378 = null;
        var G__22378__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22378__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22378__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__22378 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22378__0.call(this);
            case 1:
              return G__22378__1.call(this, result);
            case 2:
              return G__22378__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22378.cljs$core$IFn$_invoke$arity$0 = G__22378__0;
        G__22378.cljs$core$IFn$_invoke$arity$1 = G__22378__1;
        G__22378.cljs$core$IFn$_invoke$arity$2 = G__22378__2;
        return G__22378;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__22373 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22373) : cljs.core.pr_str.call(null, G__22373);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__22379 = n__$1 - 1;
        var G__22380 = cljs.core.rest(s);
        n__$1 = G__22379;
        coll__$1 = G__22380;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args22381 = [];
  var len__5743__auto___22384 = arguments.length;
  var i__5744__auto___22385 = 0;
  while (true) {
    if (i__5744__auto___22385 < len__5743__auto___22384) {
      args22381.push(arguments[i__5744__auto___22385]);
      var G__22386 = i__5744__auto___22385 + 1;
      i__5744__auto___22385 = G__22386;
      continue;
    } else {
    }
    break;
  }
  var G__22383 = args22381.length;
  switch(G__22383) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22381.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__22388 = cljs.core.next(s);
      var G__22389 = cljs.core.next(lead);
      s = G__22388;
      lead = G__22389;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args22390 = [];
  var len__5743__auto___22395 = arguments.length;
  var i__5744__auto___22396 = 0;
  while (true) {
    if (i__5744__auto___22396 < len__5743__auto___22395) {
      args22390.push(arguments[i__5744__auto___22396]);
      var G__22397 = i__5744__auto___22396 + 1;
      i__5744__auto___22396 = G__22397;
      continue;
    } else {
    }
    break;
  }
  var G__22392 = args22390.length;
  switch(G__22392) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22390.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__22399 = null;
        var G__22399__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22399__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22399__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4673__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4673__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4673__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__22399 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22399__0.call(this);
            case 1:
              return G__22399__1.call(this, result);
            case 2:
              return G__22399__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22399.cljs$core$IFn$_invoke$arity$0 = G__22399__0;
        G__22399.cljs$core$IFn$_invoke$arity$1 = G__22399__1;
        G__22399.cljs$core$IFn$_invoke$arity$2 = G__22399__2;
        return G__22399;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4673__auto__ = s;
        if (and__4673__auto__) {
          var G__22394 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__22394) : pred__$1.call(null, G__22394);
        } else {
          return and__4673__auto__;
        }
      }())) {
        var G__22400 = pred__$1;
        var G__22401 = cljs.core.rest(s);
        pred__$1 = G__22400;
        coll__$1 = G__22401;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args22402 = [];
  var len__5743__auto___22405 = arguments.length;
  var i__5744__auto___22406 = 0;
  while (true) {
    if (i__5744__auto___22406 < len__5743__auto___22405) {
      args22402.push(arguments[i__5744__auto___22406]);
      var G__22407 = i__5744__auto___22406 + 1;
      i__5744__auto___22406 = G__22407;
      continue;
    } else {
    }
    break;
  }
  var G__22404 = args22402.length;
  switch(G__22404) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22402.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args22409 = [];
  var len__5743__auto___22412 = arguments.length;
  var i__5744__auto___22413 = 0;
  while (true) {
    if (i__5744__auto___22413 < len__5743__auto___22412) {
      args22409.push(arguments[i__5744__auto___22413]);
      var G__22414 = i__5744__auto___22413 + 1;
      i__5744__auto___22413 = G__22414;
      continue;
    } else {
    }
    break;
  }
  var G__22411 = args22409.length;
  switch(G__22411) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22409.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args22418 = [];
  var len__5743__auto___22424 = arguments.length;
  var i__5744__auto___22425 = 0;
  while (true) {
    if (i__5744__auto___22425 < len__5743__auto___22424) {
      args22418.push(arguments[i__5744__auto___22425]);
      var G__22426 = i__5744__auto___22425 + 1;
      i__5744__auto___22425 = G__22426;
      continue;
    } else {
    }
    break;
  }
  var G__22423 = args22418.length;
  switch(G__22423) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22418.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq22419) {
  var G__22420 = cljs.core.first(seq22419);
  var seq22419__$1 = cljs.core.next(seq22419);
  var G__22421 = cljs.core.first(seq22419__$1);
  var seq22419__$2 = cljs.core.next(seq22419__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__22420, G__22421, seq22419__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args22428 = [];
  var len__5743__auto___22431 = arguments.length;
  var i__5744__auto___22432 = 0;
  while (true) {
    if (i__5744__auto___22432 < len__5743__auto___22431) {
      args22428.push(arguments[i__5744__auto___22432]);
      var G__22433 = i__5744__auto___22432 + 1;
      i__5744__auto___22432 = G__22433;
      continue;
    } else {
    }
    break;
  }
  var G__22430 = args22428.length;
  switch(G__22430) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22428.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__22435 = null;
        var G__22435__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22435__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22435__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__22435 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22435__0.call(this);
            case 1:
              return G__22435__1.call(this, result);
            case 2:
              return G__22435__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22435.cljs$core$IFn$_invoke$arity$0 = G__22435__0;
        G__22435.cljs$core$IFn$_invoke$arity$1 = G__22435__1;
        G__22435.cljs$core$IFn$_invoke$arity$2 = G__22435__2;
        return G__22435;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.cat;
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args22444 = [];
  var len__5743__auto___22449 = arguments.length;
  var i__5744__auto___22450 = 0;
  while (true) {
    if (i__5744__auto___22450 < len__5743__auto___22449) {
      args22444.push(arguments[i__5744__auto___22450]);
      var G__22451 = i__5744__auto___22450 + 1;
      i__5744__auto___22450 = G__22451;
      continue;
    } else {
    }
    break;
  }
  var G__22448 = args22444.length;
  switch(G__22448) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22444.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5762__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq22445) {
  var G__22446 = cljs.core.first(seq22445);
  var seq22445__$1 = cljs.core.next(seq22445);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__22446, seq22445__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args22453 = [];
  var len__5743__auto___22457 = arguments.length;
  var i__5744__auto___22458 = 0;
  while (true) {
    if (i__5744__auto___22458 < len__5743__auto___22457) {
      args22453.push(arguments[i__5744__auto___22458]);
      var G__22459 = i__5744__auto___22458 + 1;
      i__5744__auto___22458 = G__22459;
      continue;
    } else {
    }
    break;
  }
  var G__22455 = args22453.length;
  switch(G__22455) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22453.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__22461 = null;
      var G__22461__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22461__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22461__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__22461 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22461__0.call(this);
          case 1:
            return G__22461__1.call(this, result);
          case 2:
            return G__22461__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22461.cljs$core$IFn$_invoke$arity$0 = G__22461__0;
      G__22461.cljs$core$IFn$_invoke$arity$1 = G__22461__1;
      G__22461.cljs$core$IFn$_invoke$arity$2 = G__22461__2;
      return G__22461;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5588__auto___22462 = size;
        var i_22463 = 0;
        while (true) {
          if (i_22463 < n__5588__auto___22462) {
            if (cljs.core.truth_(function() {
              var G__22456 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22463);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22456) : pred.call(null, G__22456);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22463));
            } else {
            }
            var G__22464 = i_22463 + 1;
            i_22463 = G__22464;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args22465 = [];
  var len__5743__auto___22468 = arguments.length;
  var i__5744__auto___22469 = 0;
  while (true) {
    if (i__5744__auto___22469 < len__5743__auto___22468) {
      args22465.push(arguments[i__5744__auto___22469]);
      var G__22470 = i__5744__auto___22469 + 1;
      i__5744__auto___22469 = G__22470;
      continue;
    } else {
    }
    break;
  }
  var G__22467 = args22465.length;
  switch(G__22467) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22465.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__22472_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__22472_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args22473 = [];
  var len__5743__auto___22478 = arguments.length;
  var i__5744__auto___22479 = 0;
  while (true) {
    if (i__5744__auto___22479 < len__5743__auto___22478) {
      args22473.push(arguments[i__5744__auto___22479]);
      var G__22480 = i__5744__auto___22479 + 1;
      i__5744__auto___22479 = G__22480;
      continue;
    } else {
    }
    break;
  }
  var G__22475 = args22473.length;
  switch(G__22475) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22473.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args22482 = [];
  var len__5743__auto___22490 = arguments.length;
  var i__5744__auto___22491 = 0;
  while (true) {
    if (i__5744__auto___22491 < len__5743__auto___22490) {
      args22482.push(arguments[i__5744__auto___22491]);
      var G__22492 = i__5744__auto___22491 + 1;
      i__5744__auto___22491 = G__22492;
      continue;
    } else {
    }
    break;
  }
  var G__22489 = args22482.length;
  switch(G__22489) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22482.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5762__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq22483) {
  var G__22484 = cljs.core.first(seq22483);
  var seq22483__$1 = cljs.core.next(seq22483);
  var G__22485 = cljs.core.first(seq22483__$1);
  var seq22483__$2 = cljs.core.next(seq22483__$1);
  var G__22486 = cljs.core.first(seq22483__$2);
  var seq22483__$3 = cljs.core.next(seq22483__$2);
  var G__22487 = cljs.core.first(seq22483__$3);
  var seq22483__$4 = cljs.core.next(seq22483__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__22484, G__22485, G__22486, G__22487, seq22483__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args22494 = [];
  var len__5743__auto___22497 = arguments.length;
  var i__5744__auto___22498 = 0;
  while (true) {
    if (i__5744__auto___22498 < len__5743__auto___22497) {
      args22494.push(arguments[i__5744__auto___22498]);
      var G__22499 = i__5744__auto___22498 + 1;
      i__5744__auto___22498 = G__22499;
      continue;
    } else {
    }
    break;
  }
  var G__22496 = args22494.length;
  switch(G__22496) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22494.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args22501 = [];
  var len__5743__auto___22505 = arguments.length;
  var i__5744__auto___22506 = 0;
  while (true) {
    if (i__5744__auto___22506 < len__5743__auto___22505) {
      args22501.push(arguments[i__5744__auto___22506]);
      var G__22507 = i__5744__auto___22506 + 1;
      i__5744__auto___22506 = G__22507;
      continue;
    } else {
    }
    break;
  }
  var G__22503 = args22501.length;
  switch(G__22503) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22501.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__22509 = sentinel;
          var G__22510 = m__$2;
          var G__22511 = cljs.core.next(ks__$1);
          sentinel = G__22509;
          m__$1 = G__22510;
          ks__$1 = G__22511;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__22512, v) {
  var vec__22517 = p__22512;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22517, 0, null);
  var ks = cljs.core.nthnext(vec__22517, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args22518 = [];
  var len__5743__auto___22548 = arguments.length;
  var i__5744__auto___22549 = 0;
  while (true) {
    if (i__5744__auto___22549 < len__5743__auto___22548) {
      args22518.push(arguments[i__5744__auto___22549]);
      var G__22550 = i__5744__auto___22549 + 1;
      i__5744__auto___22549 = G__22550;
      continue;
    } else {
    }
    break;
  }
  var G__22527 = args22518.length;
  switch(G__22527) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22518.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5762__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__22528, f) {
  var vec__22529 = p__22528;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22529, 0, null);
  var ks = cljs.core.nthnext(vec__22529, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__22530 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22530) : f.call(null, G__22530);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__22531, f, a) {
  var vec__22532 = p__22531;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22532, 0, null);
  var ks = cljs.core.nthnext(vec__22532, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__22533 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__22534 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22533, G__22534) : f.call(null, G__22533, G__22534);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__22535, f, a, b) {
  var vec__22536 = p__22535;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22536, 0, null);
  var ks = cljs.core.nthnext(vec__22536, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__22537 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__22538 = a;
      var G__22539 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22537, G__22538, G__22539) : f.call(null, G__22537, G__22538, G__22539);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__22540, f, a, b, c) {
  var vec__22541 = p__22540;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22541, 0, null);
  var ks = cljs.core.nthnext(vec__22541, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__22542 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__22543 = a;
      var G__22544 = b;
      var G__22545 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22542, G__22543, G__22544, G__22545) : f.call(null, G__22542, G__22543, G__22544, G__22545);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__22546, f, a, b, c, args) {
  var vec__22547 = p__22546;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22547, 0, null);
  var ks = cljs.core.nthnext(vec__22547, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq22519) {
  var G__22520 = cljs.core.first(seq22519);
  var seq22519__$1 = cljs.core.next(seq22519);
  var G__22521 = cljs.core.first(seq22519__$1);
  var seq22519__$2 = cljs.core.next(seq22519__$1);
  var G__22522 = cljs.core.first(seq22519__$2);
  var seq22519__$3 = cljs.core.next(seq22519__$2);
  var G__22523 = cljs.core.first(seq22519__$3);
  var seq22519__$4 = cljs.core.next(seq22519__$3);
  var G__22524 = cljs.core.first(seq22519__$4);
  var seq22519__$5 = cljs.core.next(seq22519__$4);
  var G__22525 = cljs.core.first(seq22519__$5);
  var seq22519__$6 = cljs.core.next(seq22519__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__22520, G__22521, G__22522, G__22523, G__22524, G__22525, seq22519__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args22552 = [];
  var len__5743__auto___22572 = arguments.length;
  var i__5744__auto___22573 = 0;
  while (true) {
    if (i__5744__auto___22573 < len__5743__auto___22572) {
      args22552.push(arguments[i__5744__auto___22573]);
      var G__22574 = i__5744__auto___22573 + 1;
      i__5744__auto___22573 = G__22574;
      continue;
    } else {
    }
    break;
  }
  var G__22561 = args22552.length;
  switch(G__22561) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args22552.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5762__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__22562 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22562) : f.call(null, G__22562);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__22563 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__22564 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22563, G__22564) : f.call(null, G__22563, G__22564);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__22565 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__22566 = x;
    var G__22567 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22565, G__22566, G__22567) : f.call(null, G__22565, G__22566, G__22567);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__22568 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__22569 = x;
    var G__22570 = y;
    var G__22571 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22568, G__22569, G__22570, G__22571) : f.call(null, G__22568, G__22569, G__22570, G__22571);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq22553) {
  var G__22554 = cljs.core.first(seq22553);
  var seq22553__$1 = cljs.core.next(seq22553);
  var G__22555 = cljs.core.first(seq22553__$1);
  var seq22553__$2 = cljs.core.next(seq22553__$1);
  var G__22556 = cljs.core.first(seq22553__$2);
  var seq22553__$3 = cljs.core.next(seq22553__$2);
  var G__22557 = cljs.core.first(seq22553__$3);
  var seq22553__$4 = cljs.core.next(seq22553__$3);
  var G__22558 = cljs.core.first(seq22553__$4);
  var seq22553__$5 = cljs.core.next(seq22553__$4);
  var G__22559 = cljs.core.first(seq22553__$5);
  var seq22553__$6 = cljs.core.next(seq22553__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__22554, G__22555, G__22556, G__22557, G__22558, G__22559, seq22553__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__22576 = ll - 5;
      var G__22577 = r;
      ll = G__22576;
      ret = G__22577;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__22582 = cljs.core.pv_aget(node, 0);
      var G__22583 = level - 5;
      node = G__22582;
      level = G__22583;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__22584 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__22585 = level - 5;
        node = G__22584;
        level = G__22585;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.tv_editable_root;
cljs.core.tv_editable_tail;
cljs.core.TransientVector;
cljs.core.deref;
cljs.core.pr_sequential_writer;
cljs.core.pr_writer;
cljs.core.chunked_seq;
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__22595 = init__$2;
              var G__22596 = j + i;
              var G__22597 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22595, G__22596, G__22597) : f.call(null, G__22595, G__22596, G__22597);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__22604 = j + 1;
              var G__22605 = init__$3;
              j = G__22604;
              init__$2 = G__22605;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22606 = i + len;
        var G__22607 = init__$2;
        i = G__22606;
        init__$1 = G__22607;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__22598 = init__$2;
              var G__22599 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22598, G__22599) : f.call(null, G__22598, G__22599);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__22608 = j + 1;
              var G__22609 = init__$3;
              j = G__22608;
              init__$2 = G__22609;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22610 = i + len;
        var G__22611 = init__$2;
        i = G__22610;
        init__$1 = G__22611;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__22600 = coll__$1;
      var G__22601 = cljs.core.first_array_for_longvec(coll__$1);
      var G__22602 = 0;
      var G__22603 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22600, G__22601, G__22602, G__22603) : cljs.core.chunked_seq.call(null, G__22600, G__22601, G__22602, G__22603);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5588__auto___22612 = len;
    var i_22613 = 0;
    while (true) {
      if (i_22613 < n__5588__auto___22612) {
        new_tail[i_22613] = self__.tail[i_22613];
        var G__22614 = i_22613 + 1;
        i_22613 = G__22614;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__22615 = null;
  var G__22615__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__22615__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__22615 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22615__2.call(this, self__, k);
      case 3:
        return G__22615__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22615.cljs$core$IFn$_invoke$arity$2 = G__22615__2;
  G__22615.cljs$core$IFn$_invoke$arity$3 = G__22615__3;
  return G__22615;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args22594) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22594)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__22616 = i + 1;
        var G__22617 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__22616;
        out = G__22617;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___22619 = arguments.length;
  var i__5744__auto___22620 = 0;
  while (true) {
    if (i__5744__auto___22620 < len__5743__auto___22619) {
      args__5750__auto__.push(arguments[i__5744__auto___22620]);
      var G__22621 = i__5744__auto___22620 + 1;
      i__5744__auto___22620 = G__22621;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq22618) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq22618));
};
cljs.core.subvec;
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__22622 = self__.vec;
      var G__22623 = self__.node;
      var G__22624 = self__.i;
      var G__22625 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22622, G__22623, G__22624, G__22625) : cljs.core.chunked_seq.call(null, G__22622, G__22623, G__22624, G__22625);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__22626 = self__.vec;
    var G__22627 = self__.i + self__.off;
    var G__22628 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22626, G__22627, G__22628) : cljs.core.subvec.call(null, G__22626, G__22627, G__22628);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__22629 = self__.vec;
    var G__22630 = self__.i + self__.off;
    var G__22631 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22629, G__22630, G__22631) : cljs.core.subvec.call(null, G__22629, G__22630, G__22631);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__22632 = self__.vec;
      var G__22633 = self__.node;
      var G__22634 = self__.i;
      var G__22635 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22632, G__22633, G__22634, G__22635) : cljs.core.chunked_seq.call(null, G__22632, G__22633, G__22634, G__22635);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__22636 = self__.vec;
    var G__22637 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__22638 = end;
    var G__22639 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22636, G__22637, G__22638, G__22639) : cljs.core.chunked_seq.call(null, G__22636, G__22637, G__22638, G__22639);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__22640 = self__.vec;
    var G__22641 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__22642 = end;
    var G__22643 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22640, G__22641, G__22642, G__22643) : cljs.core.chunked_seq.call(null, G__22640, G__22641, G__22642, G__22643);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args22644 = [];
  var len__5743__auto___22647 = arguments.length;
  var i__5744__auto___22648 = 0;
  while (true) {
    if (i__5744__auto___22648 < len__5743__auto___22647) {
      args22644.push(arguments[i__5744__auto___22648]);
      var G__22649 = i__5744__auto___22648 + 1;
      i__5744__auto___22648 = G__22649;
      continue;
    } else {
    }
    break;
  }
  var G__22646 = args22644.length;
  switch(G__22646) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22644.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.build_subvec;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__22652 = init__$1;
        var G__22653 = j;
        var G__22654 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22652, G__22653, G__22654) : f.call(null, G__22652, G__22653, G__22654);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22671 = i + 1;
        var G__22672 = j + 1;
        var G__22673 = init__$2;
        i = G__22671;
        j = G__22672;
        init__$1 = G__22673;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__22655 = self__.meta;
  var G__22656 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__22657 = self__.start;
  var G__22658 = function() {
    var x__5016__auto__ = self__.end;
    var y__5017__auto__ = v_pos + 1;
    return x__5016__auto__ > y__5017__auto__ ? x__5016__auto__ : y__5017__auto__;
  }();
  var G__22659 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22655, G__22656, G__22657, G__22658, G__22659) : cljs.core.build_subvec.call(null, G__22655, G__22656, G__22657, G__22658, G__22659);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__22660 = self__.meta;
    var G__22661 = self__.v;
    var G__22662 = self__.start;
    var G__22663 = self__.end - 1;
    var G__22664 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22660, G__22661, G__22662, G__22663, G__22664) : cljs.core.build_subvec.call(null, G__22660, G__22661, G__22662, G__22663, G__22664);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__22666 = self__.meta;
  var G__22667 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__22668 = self__.start;
  var G__22669 = self__.end + 1;
  var G__22670 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22666, G__22667, G__22668, G__22669, G__22670) : cljs.core.build_subvec.call(null, G__22666, G__22667, G__22668, G__22669, G__22670);
};
cljs.core.Subvec.prototype.call = function() {
  var G__22674 = null;
  var G__22674__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__22674__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__22674 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22674__2.call(this, self__, k);
      case 3:
        return G__22674__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22674.cljs$core$IFn$_invoke$arity$2 = G__22674__2;
  G__22674.cljs$core$IFn$_invoke$arity$3 = G__22674__3;
  return G__22674;
}();
cljs.core.Subvec.prototype.apply = function(self__, args22651) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22651)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__22675 = meta;
      var G__22676 = v.v;
      var G__22677 = v.start + start;
      var G__22678 = v.start + end;
      var G__22679 = __hash;
      meta = G__22675;
      v = G__22676;
      start = G__22677;
      end = G__22678;
      __hash = G__22679;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args22680 = [];
  var len__5743__auto___22683 = arguments.length;
  var i__5744__auto___22684 = 0;
  while (true) {
    if (i__5744__auto___22684 < len__5743__auto___22683) {
      args22680.push(arguments[i__5744__auto___22684]);
      var G__22685 = i__5744__auto___22684 + 1;
      i__5744__auto___22684 = G__22685;
      continue;
    } else {
    }
    break;
  }
  var G__22682 = args22680.length;
  switch(G__22682) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22680.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__22698 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__22699 = level - 5;
        node = G__22698;
        level = G__22699;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__22703 = null;
  var G__22703__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22703__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22703 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22703__2.call(this, self__, k);
      case 3:
        return G__22703__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22703.cljs$core$IFn$_invoke$arity$2 = G__22703__2;
  G__22703.cljs$core$IFn$_invoke$arity$3 = G__22703__3;
  return G__22703;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args22700) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22700)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4685__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4685__auto__) {
    return or__4685__auto__;
  } else {
    var and__4673__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4673__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4673__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4685__auto__ = self__.front;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4685__auto__ = self__.rear;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__22704 = i + incr;
        i = G__22704;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__22705 = i + 1;
      var G__22706 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__22705;
      out = G__22706;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_22711 = 0;
  while (true) {
    if (i_22711 < l) {
      var k_22712 = ks[i_22711];
      new_obj[k_22712] = obj[k_22712];
      var G__22713 = i_22711 + 1;
      i_22711 = G__22713;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__22716 = init__$1;
        var G__22717 = k;
        var G__22718 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22716, G__22717, G__22718) : f.call(null, G__22716, G__22717, G__22718);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22719 = cljs.core.rest(keys__$1);
        var G__22720 = init__$2;
        keys__$1 = G__22719;
        init__$1 = G__22720;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__22714_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22714_SHARP_, self__.strobj[p1__22714_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__22721 = null;
  var G__22721__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22721__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22721 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22721__2.call(this, self__, k);
      case 3:
        return G__22721__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22721.cljs$core$IFn$_invoke$arity$2 = G__22721__2;
  G__22721.cljs$core$IFn$_invoke$arity$3 = G__22721__3;
  return G__22721;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args22715) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22715)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4685__auto__ = self__.i < self__.base_count;
  if (or__4685__auto__) {
    return or__4685__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__22724 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22724, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22724, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__22725 = i + 2;
        i = G__22725;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__22726 = i + 2;
        i = G__22726;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__22727 = i + 2;
        i = G__22727;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__22728 = i + 2;
        i = G__22728;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__22729 = i + 2;
        i = G__22729;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_22730 = 0;
  while (true) {
    if (i_22730 < l) {
      narr[i_22730] = arr[i_22730];
      var G__22731 = i_22730 + 1;
      i_22730 = G__22731;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.TransientArrayMap;
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.keys;
cljs.core.vals;
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22733 = cljs.core.seq(coll);
  var chunk__22734 = null;
  var count__22735 = 0;
  var i__22736 = 0;
  while (true) {
    if (i__22736 < count__22735) {
      var vec__22737 = chunk__22734.cljs$core$IIndexed$_nth$arity$2(null, i__22736);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22737, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22737, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22746 = seq__22733;
      var G__22747 = chunk__22734;
      var G__22748 = count__22735;
      var G__22749 = i__22736 + 1;
      seq__22733 = G__22746;
      chunk__22734 = G__22747;
      count__22735 = G__22748;
      i__22736 = G__22749;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__22733);
      if (temp__4657__auto__) {
        var seq__22733__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__22733__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first(seq__22733__$1);
          var G__22750 = cljs.core.chunk_rest(seq__22733__$1);
          var G__22751 = c__5488__auto__;
          var G__22752 = cljs.core.count(c__5488__auto__);
          var G__22753 = 0;
          seq__22733 = G__22750;
          chunk__22734 = G__22751;
          count__22735 = G__22752;
          i__22736 = G__22753;
          continue;
        } else {
          var vec__22738 = cljs.core.first(seq__22733__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22738, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22738, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22754 = cljs.core.next(seq__22733__$1);
          var G__22755 = null;
          var G__22756 = 0;
          var G__22757 = 0;
          seq__22733 = G__22754;
          chunk__22734 = G__22755;
          count__22735 = G__22756;
          i__22736 = G__22757;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__22739 = init__$1;
        var G__22740 = self__.arr[i];
        var G__22741 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22739, G__22740, G__22741) : f.call(null, G__22739, G__22740, G__22741);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22758 = i + 2;
        var G__22759 = init__$2;
        i = G__22758;
        init__$1 = G__22759;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__22760 = i + 2;
              i = G__22760;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__22761 = s + 2;
            var G__22762 = d;
            s = G__22761;
            d = G__22762;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__22763 = s + 2;
            var G__22764 = d + 2;
            s = G__22763;
            d = G__22764;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__22745 = cljs.core.aclone(self__.arr);
        G__22745[idx + 1] = v;
        return G__22745;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__22765 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__22766 = cljs.core.next(es);
          ret = G__22765;
          es = G__22766;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__22767 = null;
  var G__22767__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22767__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22767 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22767__2.call(this, self__, k);
      case 3:
        return G__22767__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22767.cljs$core$IFn$_invoke$arity$2 = G__22767__2;
  G__22767.cljs$core$IFn$_invoke$arity$3 = G__22767__3;
  return G__22767;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args22732) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22732)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_22768 = 0;
    while (true) {
      if (i_22768 < arr__$1.length) {
        var k_22769 = arr__$1[i_22768];
        var v_22770 = arr__$1[i_22768 + 1];
        var idx_22771 = cljs.core.array_index_of(ret, k_22769);
        if (idx_22771 === -1) {
          ret.push(k_22769);
          ret.push(v_22770);
        } else {
        }
        var G__22772 = i_22768 + 2;
        i_22768 = G__22772;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.array__GT_transient_hash_map;
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__22775 = cljs.core.next(es);
          var G__22776 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__22775;
          tcoll__$2 = G__22776;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__22774_22777 = self__.arr;
      G__22774_22777.pop();
      G__22774_22777.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.TransientHashMap;
cljs.core.PersistentHashMap;
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__22778 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__22779 = i + 2;
      out = G__22778;
      i = G__22779;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.create_inode_seq;
cljs.core.create_array_node_seq;
cljs.core.reset_BANG_;
cljs.core.create_node;
cljs.core.atom;
cljs.core.deref;
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args22780 = [];
  var len__5743__auto___22785 = arguments.length;
  var i__5744__auto___22786 = 0;
  while (true) {
    if (i__5744__auto___22786 < len__5743__auto___22785) {
      args22780.push(arguments[i__5744__auto___22786]);
      var G__22787 = i__5744__auto___22786 + 1;
      i__5744__auto___22786 = G__22787;
      continue;
    } else {
    }
    break;
  }
  var G__22782 = args22780.length;
  switch(G__22782) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22780.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__22783 = cljs.core.aclone(arr);
  G__22783[i] = a;
  return G__22783;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__22784 = cljs.core.aclone(arr);
  G__22784[i] = a;
  G__22784[j] = b;
  return G__22784;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args22789 = [];
  var len__5743__auto___22792 = arguments.length;
  var i__5744__auto___22793 = 0;
  while (true) {
    if (i__5744__auto___22793 < len__5743__auto___22792) {
      args22789.push(arguments[i__5744__auto___22793]);
      var G__22794 = i__5744__auto___22793 + 1;
      i__5744__auto___22793 = G__22794;
      continue;
    } else {
    }
    break;
  }
  var G__22791 = args22789.length;
  switch(G__22791) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22789.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__22799 = init__$1;
          var G__22800 = k;
          var G__22801 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22799, G__22800, G__22801) : f.call(null, G__22799, G__22800, G__22801);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22802 = i + 2;
        var G__22803 = init__$2;
        i = G__22802;
        init__$1 = G__22803;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode;
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4685__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4685__auto__) {
    return or__4685__auto__;
  } else {
    var or__4685__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4685__auto____$1) {
      return or__4685__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_22817 = 0;
        var j_22818 = 0;
        while (true) {
          if (i_22817 < 32) {
            if ((self__.bitmap >>> i_22817 & 1) === 0) {
              var G__22819 = i_22817 + 1;
              var G__22820 = j_22818;
              i_22817 = G__22819;
              j_22818 = G__22820;
              continue;
            } else {
              nodes[i_22817] = !(self__.arr[j_22818] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_22818]), self__.arr[j_22818], self__.arr[j_22818 + 1], added_leaf_QMARK_) : self__.arr[j_22818 + 1];
              var G__22821 = i_22817 + 1;
              var G__22822 = j_22818 + 2;
              i_22817 = G__22821;
              j_22818 = G__22822;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__22804 = edit__$1;
          var G__22805 = shift + 5;
          var G__22806 = key_or_nil;
          var G__22807 = val_or_node;
          var G__22808 = hash;
          var G__22809 = key;
          var G__22810 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__22804, G__22805, G__22806, G__22807, G__22808, G__22809, G__22810) : cljs.core.create_node.call(null, G__22804, G__22805, G__22806, G__22807, G__22808, G__22809, G__22810);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_22823 = 0;
      var j_22824 = 0;
      while (true) {
        if (i_22823 < 32) {
          if ((self__.bitmap >>> i_22823 & 1) === 0) {
            var G__22825 = i_22823 + 1;
            var G__22826 = j_22824;
            i_22823 = G__22825;
            j_22824 = G__22826;
            continue;
          } else {
            nodes[i_22823] = !(self__.arr[j_22824] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_22824]), self__.arr[j_22824], self__.arr[j_22824 + 1], added_leaf_QMARK_) : self__.arr[j_22824 + 1];
            var G__22827 = i_22823 + 1;
            var G__22828 = j_22824 + 2;
            i_22823 = G__22827;
            j_22824 = G__22828;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__22811 = shift + 5;
          var G__22812 = key_or_nil;
          var G__22813 = val_or_node;
          var G__22814 = hash;
          var G__22815 = key;
          var G__22816 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__22811, G__22812, G__22813, G__22814, G__22815, G__22816) : cljs.core.create_node.call(null, G__22811, G__22812, G__22813, G__22814, G__22815, G__22816);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__22829 = i + 1;
        var G__22830 = j + 2;
        var G__22831 = bitmap | 1 << i;
        i = G__22829;
        j = G__22830;
        bitmap = G__22831;
        continue;
      } else {
        var G__22832 = i + 1;
        var G__22833 = j;
        var G__22834 = bitmap;
        i = G__22832;
        j = G__22833;
        bitmap = G__22834;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__22835 = i + 1;
          var G__22836 = init__$2;
          i = G__22835;
          init__$1 = G__22836;
          continue;
        }
      } else {
        var G__22837 = i + 1;
        var G__22838 = init__$1;
        i = G__22837;
        init__$1 = G__22838;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__22839 = i + 2;
        i = G__22839;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args22840 = [];
  var len__5743__auto___22843 = arguments.length;
  var i__5744__auto___22844 = 0;
  while (true) {
    if (i__5744__auto___22844 < len__5743__auto___22843) {
      args22840.push(arguments[i__5744__auto___22844]);
      var G__22845 = i__5744__auto___22844 + 1;
      i__5744__auto___22844 = G__22845;
      continue;
    } else {
    }
    break;
  }
  var G__22842 = args22840.length;
  switch(G__22842) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22840.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__22847 = self__.nodes;
    var G__22848 = self__.i + 2;
    var G__22849 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22847, G__22848, G__22849) : cljs.core.create_inode_seq.call(null, G__22847, G__22848, G__22849);
  } else {
    var G__22850 = self__.nodes;
    var G__22851 = self__.i;
    var G__22852 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22850, G__22851, G__22852) : cljs.core.create_inode_seq.call(null, G__22850, G__22851, G__22852);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args22853 = [];
  var len__5743__auto___22856 = arguments.length;
  var i__5744__auto___22857 = 0;
  while (true) {
    if (i__5744__auto___22857 < len__5743__auto___22856) {
      args22853.push(arguments[i__5744__auto___22857]);
      var G__22858 = i__5744__auto___22857 + 1;
      i__5744__auto___22857 = G__22858;
      continue;
    } else {
    }
    break;
  }
  var G__22855 = args22853.length;
  switch(G__22855) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22853.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__22860 = j + 2;
              j = G__22860;
              continue;
            }
          } else {
            var G__22861 = j + 2;
            j = G__22861;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__22862 = null;
  var G__22863 = self__.nodes;
  var G__22864 = self__.i;
  var G__22865 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__22862, G__22863, G__22864, G__22865) : cljs.core.create_array_node_seq.call(null, G__22862, G__22863, G__22864, G__22865);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args22866 = [];
  var len__5743__auto___22869 = arguments.length;
  var i__5744__auto___22870 = 0;
  while (true) {
    if (i__5744__auto___22870 < len__5743__auto___22869) {
      args22866.push(arguments[i__5744__auto___22870]);
      var G__22871 = i__5744__auto___22870 + 1;
      i__5744__auto___22870 = G__22871;
      continue;
    } else {
    }
    break;
  }
  var G__22868 = args22866.length;
  switch(G__22868) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22866.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__22873 = j + 1;
            j = G__22873;
            continue;
          }
        } else {
          var G__22874 = j + 1;
          j = G__22874;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.TransientHashMap;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22876 = cljs.core.seq(coll);
  var chunk__22877 = null;
  var count__22878 = 0;
  var i__22879 = 0;
  while (true) {
    if (i__22879 < count__22878) {
      var vec__22880 = chunk__22877.cljs$core$IIndexed$_nth$arity$2(null, i__22879);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22880, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22880, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22884 = seq__22876;
      var G__22885 = chunk__22877;
      var G__22886 = count__22878;
      var G__22887 = i__22879 + 1;
      seq__22876 = G__22884;
      chunk__22877 = G__22885;
      count__22878 = G__22886;
      i__22879 = G__22887;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__22876);
      if (temp__4657__auto__) {
        var seq__22876__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__22876__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first(seq__22876__$1);
          var G__22888 = cljs.core.chunk_rest(seq__22876__$1);
          var G__22889 = c__5488__auto__;
          var G__22890 = cljs.core.count(c__5488__auto__);
          var G__22891 = 0;
          seq__22876 = G__22888;
          chunk__22877 = G__22889;
          count__22878 = G__22890;
          i__22879 = G__22891;
          continue;
        } else {
          var vec__22881 = cljs.core.first(seq__22876__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22881, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22881, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22892 = cljs.core.next(seq__22876__$1);
          var G__22893 = null;
          var G__22894 = 0;
          var G__22895 = 0;
          seq__22876 = G__22892;
          chunk__22877 = G__22893;
          count__22878 = G__22894;
          i__22879 = G__22895;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__22896 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__22897 = cljs.core.next(es);
          ret = G__22896;
          es = G__22897;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__22898 = null;
  var G__22898__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22898__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22898 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22898__2.call(this, self__, k);
      case 3:
        return G__22898__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22898.cljs$core$IFn$_invoke$arity$2 = G__22898__2;
  G__22898.cljs$core$IFn$_invoke$arity$3 = G__22898__3;
  return G__22898;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args22875) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22875)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__22899 = i + 2;
      var G__22900 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__22899;
      ret = G__22900;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__22901 = i + 1;
      var G__22902 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__22901;
      out = G__22902;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__22904 = cljs.core.next(es);
          var G__22905 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__22904;
          tcoll__$1 = G__22905;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__22906 = ascending_QMARK_ ? t.left : t.right;
      var G__22907 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__22906;
      stack__$1 = G__22907;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.RedNode;
cljs.core.BlackNode;
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__22917 = init__$1;
      var G__22918 = node.key;
      var G__22919 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22917, G__22918, G__22919) : f.call(null, G__22917, G__22918, G__22919);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__22921 = null;
  var G__22921__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22921__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22921 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22921__2.call(this, self__, k);
      case 3:
        return G__22921__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22921.cljs$core$IFn$_invoke$arity$2 = G__22921__2;
  G__22921.cljs$core$IFn$_invoke$arity$3 = G__22921__3;
  return G__22921;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args22920) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22920)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__22923 = null;
  var G__22923__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22923__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22923 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22923__2.call(this, self__, k);
      case 3:
        return G__22923__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22923.cljs$core$IFn$_invoke$arity$2 = G__22923__2;
  G__22923.cljs$core$IFn$_invoke$arity$3 = G__22923__3;
  return G__22923;
}();
cljs.core.RedNode.prototype.apply = function(self__, args22922) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22922)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__22936 = k;
      var G__22937 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22936, G__22937) : comp.call(null, G__22936, G__22937);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__22956 = k;
      var G__22957 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22956, G__22957) : comp.call(null, G__22956, G__22957);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.key;
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22967 = cljs.core.seq(coll);
  var chunk__22968 = null;
  var count__22969 = 0;
  var i__22970 = 0;
  while (true) {
    if (i__22970 < count__22969) {
      var vec__22971 = chunk__22968.cljs$core$IIndexed$_nth$arity$2(null, i__22970);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22971, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22971, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22977 = seq__22967;
      var G__22978 = chunk__22968;
      var G__22979 = count__22969;
      var G__22980 = i__22970 + 1;
      seq__22967 = G__22977;
      chunk__22968 = G__22978;
      count__22969 = G__22979;
      i__22970 = G__22980;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__22967);
      if (temp__4657__auto__) {
        var seq__22967__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__22967__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first(seq__22967__$1);
          var G__22981 = cljs.core.chunk_rest(seq__22967__$1);
          var G__22982 = c__5488__auto__;
          var G__22983 = cljs.core.count(c__5488__auto__);
          var G__22984 = 0;
          seq__22967 = G__22981;
          chunk__22968 = G__22982;
          count__22969 = G__22983;
          i__22970 = G__22984;
          continue;
        } else {
          var vec__22972 = cljs.core.first(seq__22967__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22972, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22972, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22985 = cljs.core.next(seq__22967__$1);
          var G__22986 = null;
          var G__22987 = 0;
          var G__22988 = 0;
          seq__22967 = G__22985;
          chunk__22968 = G__22986;
          count__22969 = G__22987;
          i__22970 = G__22988;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__22973 = k;
        var G__22974 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22973, G__22974) : self__.comp.call(null, G__22973, G__22974);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__22989 = t.left;
          t = G__22989;
          continue;
        } else {
          var G__22990 = t.right;
          t = G__22990;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__22991 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__22992 = cljs.core.next(es);
          ret = G__22991;
          es = G__22992;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__22993 = null;
  var G__22993__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22993__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22993 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22993__2.call(this, self__, k);
      case 3:
        return G__22993__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22993.cljs$core$IFn$_invoke$arity$2 = G__22993__2;
  G__22993.cljs$core$IFn$_invoke$arity$3 = G__22993__3;
  return G__22993;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args22966) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22966)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__22975 = k;
          var G__22976 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22975, G__22976) : self__.comp.call(null, G__22975, G__22976);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__22994 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__22995 = t.left;
              stack = G__22994;
              t = G__22995;
              continue;
            } else {
              var G__22996 = stack;
              var G__22997 = t.right;
              stack = G__22996;
              t = G__22997;
              continue;
            }
          } else {
            if (c > 0) {
              var G__22998 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__22999 = t.right;
              stack = G__22998;
              t = G__22999;
              continue;
            } else {
              var G__23000 = stack;
              var G__23001 = t.left;
              stack = G__23000;
              t = G__23001;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23003 = arguments.length;
  var i__5744__auto___23004 = 0;
  while (true) {
    if (i__5744__auto___23004 < len__5743__auto___23003) {
      args__5750__auto__.push(arguments[i__5744__auto___23004]);
      var G__23005 = i__5744__auto___23004 + 1;
      i__5744__auto___23004 = G__23005;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__23006 = cljs.core.nnext(in$);
      var G__23007 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__23006;
      out = G__23007;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq23002) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23002));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23009 = arguments.length;
  var i__5744__auto___23010 = 0;
  while (true) {
    if (i__5744__auto___23010 < len__5743__auto___23009) {
      args__5750__auto__.push(arguments[i__5744__auto___23010]);
      var G__23011 = i__5744__auto___23010 + 1;
      i__5744__auto___23010 = G__23011;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq23008) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23008));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23015 = arguments.length;
  var i__5744__auto___23016 = 0;
  while (true) {
    if (i__5744__auto___23016 < len__5743__auto___23015) {
      args__5750__auto__.push(arguments[i__5744__auto___23016]);
      var G__23017 = i__5744__auto___23016 + 1;
      i__5744__auto___23016 = G__23017;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__23018 = cljs.core.nnext(kvs);
      kvs = G__23018;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq23012) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23012));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23020 = arguments.length;
  var i__5744__auto___23021 = 0;
  while (true) {
    if (i__5744__auto___23021 < len__5743__auto___23020) {
      args__5750__auto__.push(arguments[i__5744__auto___23021]);
      var G__23022 = i__5744__auto___23021 + 1;
      i__5744__auto___23021 = G__23022;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__23023 = cljs.core.nnext(in$);
      var G__23024 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__23023;
      out = G__23024;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq23019) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23019));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23027 = arguments.length;
  var i__5744__auto___23028 = 0;
  while (true) {
    if (i__5744__auto___23028 < len__5743__auto___23027) {
      args__5750__auto__.push(arguments[i__5744__auto___23028]);
      var G__23029 = i__5744__auto___23028 + 1;
      i__5744__auto___23028 = G__23029;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__23030 = cljs.core.nnext(in$);
      var G__23031 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__23030;
      out = G__23031;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq23025) {
  var G__23026 = cljs.core.first(seq23025);
  var seq23025__$1 = cljs.core.next(seq23025);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__23026, seq23025__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23039 = arguments.length;
  var i__5744__auto___23040 = 0;
  while (true) {
    if (i__5744__auto___23040 < len__5743__auto___23039) {
      args__5750__auto__.push(arguments[i__5744__auto___23040]);
      var G__23041 = i__5744__auto___23040 + 1;
      i__5744__auto___23040 = G__23041;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__23036_SHARP_, p2__23037_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4685__auto__ = p1__23036_SHARP_;
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__23037_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq23038) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23038));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23046 = arguments.length;
  var i__5744__auto___23047 = 0;
  while (true) {
    if (i__5744__auto___23047 < len__5743__auto___23046) {
      args__5750__auto__.push(arguments[i__5744__auto___23047]);
      var G__23048 = i__5744__auto___23047 + 1;
      i__5744__auto___23047 = G__23048;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__23044 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__23045 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23044, G__23045) : f.call(null, G__23044, G__23045);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4685__auto__ = m1;
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq23042) {
  var G__23043 = cljs.core.first(seq23042);
  var seq23042__$1 = cljs.core.next(seq23042);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__23043, seq23042__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__23049 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__23050 = cljs.core.next(keys);
      ret = G__23049;
      keys = G__23050;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.TransientHashSet;
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__23053 = cljs.core.seq(coll);
  var chunk__23054 = null;
  var count__23055 = 0;
  var i__23056 = 0;
  while (true) {
    if (i__23056 < count__23055) {
      var vec__23057 = chunk__23054.cljs$core$IIndexed$_nth$arity$2(null, i__23056);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23057, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23057, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__23059 = seq__23053;
      var G__23060 = chunk__23054;
      var G__23061 = count__23055;
      var G__23062 = i__23056 + 1;
      seq__23053 = G__23059;
      chunk__23054 = G__23060;
      count__23055 = G__23061;
      i__23056 = G__23062;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23053);
      if (temp__4657__auto__) {
        var seq__23053__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23053__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first(seq__23053__$1);
          var G__23063 = cljs.core.chunk_rest(seq__23053__$1);
          var G__23064 = c__5488__auto__;
          var G__23065 = cljs.core.count(c__5488__auto__);
          var G__23066 = 0;
          seq__23053 = G__23063;
          chunk__23054 = G__23064;
          count__23055 = G__23065;
          i__23056 = G__23066;
          continue;
        } else {
          var vec__23058 = cljs.core.first(seq__23053__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23058, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23058, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__23067 = cljs.core.next(seq__23053__$1);
          var G__23068 = null;
          var G__23069 = 0;
          var G__23070 = 0;
          seq__23053 = G__23067;
          chunk__23054 = G__23068;
          count__23055 = G__23069;
          i__23056 = G__23070;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__23051_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__23051_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__23071 = null;
  var G__23071__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23071__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23071 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23071__2.call(this, self__, k);
      case 3:
        return G__23071__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23071.cljs$core$IFn$_invoke$arity$2 = G__23071__2;
  G__23071.cljs$core$IFn$_invoke$arity$3 = G__23071__3;
  return G__23071;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args23052) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23052)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__23072 = i + 1;
        var G__23073 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__23072;
        out = G__23073;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__23074 = i + 1;
        var G__23075 = cljs.core._conj_BANG_(out, items[i]);
        i = G__23074;
        out = G__23075;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__23077 = null;
  var G__23077__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__23077__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__23077 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23077__2.call(this, self__, k);
      case 3:
        return G__23077__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23077.cljs$core$IFn$_invoke$arity$2 = G__23077__2;
  G__23077.cljs$core$IFn$_invoke$arity$3 = G__23077__3;
  return G__23077;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args23076) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23076)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__23080 = cljs.core.seq(coll);
  var chunk__23081 = null;
  var count__23082 = 0;
  var i__23083 = 0;
  while (true) {
    if (i__23083 < count__23082) {
      var vec__23084 = chunk__23081.cljs$core$IIndexed$_nth$arity$2(null, i__23083);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23084, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23084, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__23086 = seq__23080;
      var G__23087 = chunk__23081;
      var G__23088 = count__23082;
      var G__23089 = i__23083 + 1;
      seq__23080 = G__23086;
      chunk__23081 = G__23087;
      count__23082 = G__23088;
      i__23083 = G__23089;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23080);
      if (temp__4657__auto__) {
        var seq__23080__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23080__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first(seq__23080__$1);
          var G__23090 = cljs.core.chunk_rest(seq__23080__$1);
          var G__23091 = c__5488__auto__;
          var G__23092 = cljs.core.count(c__5488__auto__);
          var G__23093 = 0;
          seq__23080 = G__23090;
          chunk__23081 = G__23091;
          count__23082 = G__23092;
          i__23083 = G__23093;
          continue;
        } else {
          var vec__23085 = cljs.core.first(seq__23080__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23085, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23085, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__23094 = cljs.core.next(seq__23080__$1);
          var G__23095 = null;
          var G__23096 = 0;
          var G__23097 = 0;
          seq__23080 = G__23094;
          chunk__23081 = G__23095;
          count__23082 = G__23096;
          i__23083 = G__23097;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__23078_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__23078_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__23098 = null;
  var G__23098__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23098__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23098 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23098__2.call(this, self__, k);
      case 3:
        return G__23098__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23098.cljs$core$IFn$_invoke$arity$2 = G__23098__2;
  G__23098.cljs$core$IFn$_invoke$arity$3 = G__23098__3;
  return G__23098;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args23079) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23079)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5582__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5582__auto__.length) {
        var G__23099 = i + 1;
        var G__23100 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__23099;
        res = G__23100;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__23101 = cljs.core.next(in$__$1);
          var G__23102 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__23101;
          out = G__23102;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args23103 = [];
  var len__5743__auto___23107 = arguments.length;
  var i__5744__auto___23108 = 0;
  while (true) {
    if (i__5744__auto___23108 < len__5743__auto___23107) {
      args23103.push(arguments[i__5744__auto___23108]);
      var G__23109 = i__5744__auto___23108 + 1;
      i__5744__auto___23108 = G__23109;
      continue;
    } else {
    }
    break;
  }
  var G__23106 = args23103.length;
  switch(G__23106) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args23103.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5762__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq23104) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23104));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23112 = arguments.length;
  var i__5744__auto___23113 = 0;
  while (true) {
    if (i__5744__auto___23113 < len__5743__auto___23112) {
      args__5750__auto__.push(arguments[i__5744__auto___23113]);
      var G__23114 = i__5744__auto___23113 + 1;
      i__5744__auto___23113 = G__23114;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq23111) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23111));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23117 = arguments.length;
  var i__5744__auto___23118 = 0;
  while (true) {
    if (i__5744__auto___23118 < len__5743__auto___23117) {
      args__5750__auto__.push(arguments[i__5744__auto___23118]);
      var G__23119 = i__5744__auto___23118 + 1;
      i__5744__auto___23118 = G__23119;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq23115) {
  var G__23116 = cljs.core.first(seq23115);
  var seq23115__$1 = cljs.core.next(seq23115);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__23116, seq23115__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args23122 = [];
  var len__5743__auto___23125 = arguments.length;
  var i__5744__auto___23126 = 0;
  while (true) {
    if (i__5744__auto___23126 < len__5743__auto___23125) {
      args23122.push(arguments[i__5744__auto___23126]);
      var G__23127 = i__5744__auto___23126 + 1;
      i__5744__auto___23126 = G__23127;
      continue;
    } else {
    }
    break;
  }
  var G__23124 = args23122.length;
  switch(G__23124) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23122.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__23120_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__23120_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__23120_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__23121_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__23121_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__23121_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args23129 = [];
  var len__5743__auto___23138 = arguments.length;
  var i__5744__auto___23139 = 0;
  while (true) {
    if (i__5744__auto___23139 < len__5743__auto___23138) {
      args23129.push(arguments[i__5744__auto___23139]);
      var G__23140 = i__5744__auto___23139 + 1;
      i__5744__auto___23139 = G__23140;
      continue;
    } else {
    }
    break;
  }
  var G__23131 = args23129.length;
  switch(G__23131) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23129.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__23142 = null;
        var G__23142__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23142__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23142__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__23142 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23142__0.call(this);
            case 1:
              return G__23142__1.call(this, result);
            case 2:
              return G__23142__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23142.cljs$core$IFn$_invoke$arity$0 = G__23142__0;
        G__23142.cljs$core$IFn$_invoke$arity$1 = G__23142__1;
        G__23142.cljs$core$IFn$_invoke$arity$2 = G__23142__2;
        return G__23142;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__23136, seen__$1) {
        while (true) {
          var vec__23137 = p__23136;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23137, 0, null);
          var xs__$1 = vec__23137;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__23143 = cljs.core.rest(s);
              var G__23144 = seen__$1;
              p__23136 = G__23143;
              seen__$1 = G__23144;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__23145 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__23146 = cljs.core.next(s__$1);
      ret = G__23145;
      s__$1 = G__23146;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__23149 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__23150 = cljs.core.next(ks);
      var G__23151 = cljs.core.next(vs);
      map = G__23149;
      ks = G__23150;
      vs = G__23151;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args23154 = [];
  var len__5743__auto___23161 = arguments.length;
  var i__5744__auto___23162 = 0;
  while (true) {
    if (i__5744__auto___23162 < len__5743__auto___23161) {
      args23154.push(arguments[i__5744__auto___23162]);
      var G__23163 = i__5744__auto___23162 + 1;
      i__5744__auto___23162 = G__23163;
      continue;
    } else {
    }
    break;
  }
  var G__23160 = args23154.length;
  switch(G__23160) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args23154.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23152_SHARP_, p2__23153_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__23152_SHARP_, p2__23153_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq23155) {
  var G__23156 = cljs.core.first(seq23155);
  var seq23155__$1 = cljs.core.next(seq23155);
  var G__23157 = cljs.core.first(seq23155__$1);
  var seq23155__$2 = cljs.core.next(seq23155__$1);
  var G__23158 = cljs.core.first(seq23155__$2);
  var seq23155__$3 = cljs.core.next(seq23155__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__23156, G__23157, G__23158, seq23155__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args23167 = [];
  var len__5743__auto___23174 = arguments.length;
  var i__5744__auto___23175 = 0;
  while (true) {
    if (i__5744__auto___23175 < len__5743__auto___23174) {
      args23167.push(arguments[i__5744__auto___23175]);
      var G__23176 = i__5744__auto___23175 + 1;
      i__5744__auto___23175 = G__23176;
      continue;
    } else {
    }
    break;
  }
  var G__23173 = args23167.length;
  switch(G__23173) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args23167.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23165_SHARP_, p2__23166_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__23165_SHARP_, p2__23166_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq23168) {
  var G__23169 = cljs.core.first(seq23168);
  var seq23168__$1 = cljs.core.next(seq23168);
  var G__23170 = cljs.core.first(seq23168__$1);
  var seq23168__$2 = cljs.core.next(seq23168__$1);
  var G__23171 = cljs.core.first(seq23168__$2);
  var seq23168__$3 = cljs.core.next(seq23168__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__23169, G__23170, G__23171, seq23168__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args23178 = [];
  var len__5743__auto___23181 = arguments.length;
  var i__5744__auto___23182 = 0;
  while (true) {
    if (i__5744__auto___23182 < len__5743__auto___23181) {
      args23178.push(arguments[i__5744__auto___23182]);
      var G__23183 = i__5744__auto___23182 + 1;
      i__5744__auto___23182 = G__23183;
      continue;
    } else {
    }
    break;
  }
  var G__23180 = args23178.length;
  switch(G__23180) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23178.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__23185 = null;
        var G__23185__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23185__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__23185__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__23185 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23185__0.call(this);
            case 1:
              return G__23185__1.call(this, result);
            case 2:
              return G__23185__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23185.cljs$core$IFn$_invoke$arity$0 = G__23185__0;
        G__23185.cljs$core$IFn$_invoke$arity$1 = G__23185__1;
        G__23185.cljs$core$IFn$_invoke$arity$2 = G__23185__2;
        return G__23185;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args23186 = [];
  var len__5743__auto___23190 = arguments.length;
  var i__5744__auto___23191 = 0;
  while (true) {
    if (i__5744__auto___23191 < len__5743__auto___23190) {
      args23186.push(arguments[i__5744__auto___23191]);
      var G__23192 = i__5744__auto___23191 + 1;
      i__5744__auto___23191 = G__23192;
      continue;
    } else {
    }
    break;
  }
  var G__23188 = args23186.length;
  switch(G__23188) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23186.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__23194 = null;
      var G__23194__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__23194__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__23194__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__23194 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__23194__0.call(this);
          case 1:
            return G__23194__1.call(this, result);
          case 2:
            return G__23194__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23194.cljs$core$IFn$_invoke$arity$0 = G__23194__0;
      G__23194.cljs$core$IFn$_invoke$arity$1 = G__23194__1;
      G__23194.cljs$core$IFn$_invoke$arity$2 = G__23194__2;
      return G__23194;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__23189 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23189) : pred.call(null, G__23189);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__23203 = function() {
      var G__23205 = cljs.core._entry_key(sc, e);
      var G__23206 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23205, G__23206) : comp.call(null, G__23205, G__23206);
    }();
    var G__23204 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__23203, G__23204) : test.call(null, G__23203, G__23204);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args23207 = [];
  var len__5743__auto___23212 = arguments.length;
  var i__5744__auto___23213 = 0;
  while (true) {
    if (i__5744__auto___23213 < len__5743__auto___23212) {
      args23207.push(arguments[i__5744__auto___23213]);
      var G__23214 = i__5744__auto___23213 + 1;
      i__5744__auto___23213 = G__23214;
      continue;
    } else {
    }
    break;
  }
  var G__23209 = args23207.length;
  switch(G__23209) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23207.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__23210 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23210, 0, null);
      var s = vec__23210;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__23211 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23211, 0, null);
    var s = vec__23211;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args23216 = [];
  var len__5743__auto___23221 = arguments.length;
  var i__5744__auto___23222 = 0;
  while (true) {
    if (i__5744__auto___23222 < len__5743__auto___23221) {
      args23216.push(arguments[i__5744__auto___23222]);
      var G__23223 = i__5744__auto___23222 + 1;
      i__5744__auto___23222 = G__23223;
      continue;
    } else {
    }
    break;
  }
  var G__23218 = args23216.length;
  switch(G__23218) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23216.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__23219 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23219, 0, null);
      var s = vec__23219;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__23220 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23220, 0, null);
    var s = vec__23220;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__23225 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__23225);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__23226 = i + self__.step;
        var G__23227 = ret__$1;
        i = G__23226;
        ret = G__23227;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args23228 = [];
  var len__5743__auto___23231 = arguments.length;
  var i__5744__auto___23232 = 0;
  while (true) {
    if (i__5744__auto___23232 < len__5743__auto___23231) {
      args23228.push(arguments[i__5744__auto___23232]);
      var G__23233 = i__5744__auto___23232 + 1;
      i__5744__auto___23232 = G__23233;
      continue;
    } else {
    }
    break;
  }
  var G__23230 = args23228.length;
  switch(G__23230) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23228.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args23235 = [];
  var len__5743__auto___23240 = arguments.length;
  var i__5744__auto___23241 = 0;
  while (true) {
    if (i__5744__auto___23241 < len__5743__auto___23240) {
      args23235.push(arguments[i__5744__auto___23241]);
      var G__23242 = i__5744__auto___23241 + 1;
      i__5744__auto___23241 = G__23242;
      continue;
    } else {
    }
    break;
  }
  var G__23237 = args23235.length;
  switch(G__23237) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23235.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__23238 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23238) : cljs.core.pr_str.call(null, G__23238);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__23244 = null;
        var G__23244__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23244__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23244__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__23244 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23244__0.call(this);
            case 1:
              return G__23244__1.call(this, result);
            case 2:
              return G__23244__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23244.cljs$core$IFn$_invoke$arity$0 = G__23244__0;
        G__23244.cljs$core$IFn$_invoke$arity$1 = G__23244__1;
        G__23244.cljs$core$IFn$_invoke$arity$2 = G__23244__2;
        return G__23244;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__23239 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23239) : cljs.core.pr_str.call(null, G__23239);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args23246 = [];
  var len__5743__auto___23249 = arguments.length;
  var i__5744__auto___23250 = 0;
  while (true) {
    if (i__5744__auto___23250 < len__5743__auto___23249) {
      args23246.push(arguments[i__5744__auto___23250]);
      var G__23251 = i__5744__auto___23250 + 1;
      i__5744__auto___23250 = G__23251;
      continue;
    } else {
    }
    break;
  }
  var G__23248 = args23246.length;
  switch(G__23248) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23246.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__23253 = null;
        var G__23253__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23253__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__23253__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__23253 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23253__0.call(this);
            case 1:
              return G__23253__1.call(this, result);
            case 2:
              return G__23253__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23253.cljs$core$IFn$_invoke$arity$0 = G__23253__0;
        G__23253.cljs$core$IFn$_invoke$arity$1 = G__23253__1;
        G__23253.cljs$core$IFn$_invoke$arity$2 = G__23253__2;
        return G__23253;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__23245_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__23245_SHARP_) : f.call(null, p1__23245_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args23254 = [];
  var len__5743__auto___23259 = arguments.length;
  var i__5744__auto___23260 = 0;
  while (true) {
    if (i__5744__auto___23260 < len__5743__auto___23259) {
      args23254.push(arguments[i__5744__auto___23260]);
      var G__23261 = i__5744__auto___23260 + 1;
      i__5744__auto___23260 = G__23261;
      continue;
    } else {
    }
    break;
  }
  var G__23256 = args23254.length;
  switch(G__23256) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23254.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__23257 = init;
        var G__23258 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23257, G__23258) : f.call(null, G__23257, G__23258);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args23273 = [];
  var len__5743__auto___23280 = arguments.length;
  var i__5744__auto___23281 = 0;
  while (true) {
    if (i__5744__auto___23281 < len__5743__auto___23280) {
      args23273.push(arguments[i__5744__auto___23281]);
      var G__23282 = i__5744__auto___23281 + 1;
      i__5744__auto___23281 = G__23282;
      continue;
    } else {
    }
    break;
  }
  var G__23279 = args23273.length;
  switch(G__23279) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args23273.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__23284 = null;
    var G__23284__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__23284__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__23284__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__23284__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__23284__4 = function() {
      var G__23285__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__23285 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23286__i = 0, G__23286__a = new Array(arguments.length - 3);
          while (G__23286__i < G__23286__a.length) {
            G__23286__a[G__23286__i] = arguments[G__23286__i + 3];
            ++G__23286__i;
          }
          args = new cljs.core.IndexedSeq(G__23286__a, 0);
        }
        return G__23285__delegate.call(this, x, y, z, args);
      };
      G__23285.cljs$lang$maxFixedArity = 3;
      G__23285.cljs$lang$applyTo = function(arglist__23287) {
        var x = cljs.core.first(arglist__23287);
        arglist__23287 = cljs.core.next(arglist__23287);
        var y = cljs.core.first(arglist__23287);
        arglist__23287 = cljs.core.next(arglist__23287);
        var z = cljs.core.first(arglist__23287);
        var args = cljs.core.rest(arglist__23287);
        return G__23285__delegate(x, y, z, args);
      };
      G__23285.cljs$core$IFn$_invoke$arity$variadic = G__23285__delegate;
      return G__23285;
    }();
    G__23284 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23284__0.call(this);
        case 1:
          return G__23284__1.call(this, x);
        case 2:
          return G__23284__2.call(this, x, y);
        case 3:
          return G__23284__3.call(this, x, y, z);
        default:
          var G__23288 = null;
          if (arguments.length > 3) {
            var G__23289__i = 0, G__23289__a = new Array(arguments.length - 3);
            while (G__23289__i < G__23289__a.length) {
              G__23289__a[G__23289__i] = arguments[G__23289__i + 3];
              ++G__23289__i;
            }
            G__23288 = new cljs.core.IndexedSeq(G__23289__a, 0);
          }
          return G__23284__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23288);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23284.cljs$lang$maxFixedArity = 3;
    G__23284.cljs$lang$applyTo = G__23284__4.cljs$lang$applyTo;
    G__23284.cljs$core$IFn$_invoke$arity$0 = G__23284__0;
    G__23284.cljs$core$IFn$_invoke$arity$1 = G__23284__1;
    G__23284.cljs$core$IFn$_invoke$arity$2 = G__23284__2;
    G__23284.cljs$core$IFn$_invoke$arity$3 = G__23284__3;
    G__23284.cljs$core$IFn$_invoke$arity$variadic = G__23284__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23284;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__23290 = null;
    var G__23290__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__23290__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__23290__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__23290__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__23290__4 = function() {
      var G__23291__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__23291 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23292__i = 0, G__23292__a = new Array(arguments.length - 3);
          while (G__23292__i < G__23292__a.length) {
            G__23292__a[G__23292__i] = arguments[G__23292__i + 3];
            ++G__23292__i;
          }
          args = new cljs.core.IndexedSeq(G__23292__a, 0);
        }
        return G__23291__delegate.call(this, x, y, z, args);
      };
      G__23291.cljs$lang$maxFixedArity = 3;
      G__23291.cljs$lang$applyTo = function(arglist__23293) {
        var x = cljs.core.first(arglist__23293);
        arglist__23293 = cljs.core.next(arglist__23293);
        var y = cljs.core.first(arglist__23293);
        arglist__23293 = cljs.core.next(arglist__23293);
        var z = cljs.core.first(arglist__23293);
        var args = cljs.core.rest(arglist__23293);
        return G__23291__delegate(x, y, z, args);
      };
      G__23291.cljs$core$IFn$_invoke$arity$variadic = G__23291__delegate;
      return G__23291;
    }();
    G__23290 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23290__0.call(this);
        case 1:
          return G__23290__1.call(this, x);
        case 2:
          return G__23290__2.call(this, x, y);
        case 3:
          return G__23290__3.call(this, x, y, z);
        default:
          var G__23294 = null;
          if (arguments.length > 3) {
            var G__23295__i = 0, G__23295__a = new Array(arguments.length - 3);
            while (G__23295__i < G__23295__a.length) {
              G__23295__a[G__23295__i] = arguments[G__23295__i + 3];
              ++G__23295__i;
            }
            G__23294 = new cljs.core.IndexedSeq(G__23295__a, 0);
          }
          return G__23290__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23294);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23290.cljs$lang$maxFixedArity = 3;
    G__23290.cljs$lang$applyTo = G__23290__4.cljs$lang$applyTo;
    G__23290.cljs$core$IFn$_invoke$arity$0 = G__23290__0;
    G__23290.cljs$core$IFn$_invoke$arity$1 = G__23290__1;
    G__23290.cljs$core$IFn$_invoke$arity$2 = G__23290__2;
    G__23290.cljs$core$IFn$_invoke$arity$3 = G__23290__3;
    G__23290.cljs$core$IFn$_invoke$arity$variadic = G__23290__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23290;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__23296 = null;
    var G__23296__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__23296__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__23296__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__23296__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__23296__4 = function() {
      var G__23297__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__23297 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23298__i = 0, G__23298__a = new Array(arguments.length - 3);
          while (G__23298__i < G__23298__a.length) {
            G__23298__a[G__23298__i] = arguments[G__23298__i + 3];
            ++G__23298__i;
          }
          args = new cljs.core.IndexedSeq(G__23298__a, 0);
        }
        return G__23297__delegate.call(this, x, y, z, args);
      };
      G__23297.cljs$lang$maxFixedArity = 3;
      G__23297.cljs$lang$applyTo = function(arglist__23299) {
        var x = cljs.core.first(arglist__23299);
        arglist__23299 = cljs.core.next(arglist__23299);
        var y = cljs.core.first(arglist__23299);
        arglist__23299 = cljs.core.next(arglist__23299);
        var z = cljs.core.first(arglist__23299);
        var args = cljs.core.rest(arglist__23299);
        return G__23297__delegate(x, y, z, args);
      };
      G__23297.cljs$core$IFn$_invoke$arity$variadic = G__23297__delegate;
      return G__23297;
    }();
    G__23296 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23296__0.call(this);
        case 1:
          return G__23296__1.call(this, x);
        case 2:
          return G__23296__2.call(this, x, y);
        case 3:
          return G__23296__3.call(this, x, y, z);
        default:
          var G__23300 = null;
          if (arguments.length > 3) {
            var G__23301__i = 0, G__23301__a = new Array(arguments.length - 3);
            while (G__23301__i < G__23301__a.length) {
              G__23301__a[G__23301__i] = arguments[G__23301__i + 3];
              ++G__23301__i;
            }
            G__23300 = new cljs.core.IndexedSeq(G__23301__a, 0);
          }
          return G__23296__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23300);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23296.cljs$lang$maxFixedArity = 3;
    G__23296.cljs$lang$applyTo = G__23296__4.cljs$lang$applyTo;
    G__23296.cljs$core$IFn$_invoke$arity$0 = G__23296__0;
    G__23296.cljs$core$IFn$_invoke$arity$1 = G__23296__1;
    G__23296.cljs$core$IFn$_invoke$arity$2 = G__23296__2;
    G__23296.cljs$core$IFn$_invoke$arity$3 = G__23296__3;
    G__23296.cljs$core$IFn$_invoke$arity$variadic = G__23296__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23296;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__23302 = null;
      var G__23302__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__23263_SHARP_, p2__23264_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23263_SHARP_, p2__23264_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__23264_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__23264_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__23302__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__23265_SHARP_, p2__23266_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23265_SHARP_, p2__23266_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__23266_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__23266_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__23302__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__23267_SHARP_, p2__23268_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23267_SHARP_, p2__23268_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__23268_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__23268_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__23302__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__23269_SHARP_, p2__23270_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23269_SHARP_, p2__23270_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__23270_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__23270_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__23302__4 = function() {
        var G__23303__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__23271_SHARP_, p2__23272_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23271_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__23272_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23303 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__23304__i = 0, G__23304__a = new Array(arguments.length - 3);
            while (G__23304__i < G__23304__a.length) {
              G__23304__a[G__23304__i] = arguments[G__23304__i + 3];
              ++G__23304__i;
            }
            args = new cljs.core.IndexedSeq(G__23304__a, 0);
          }
          return G__23303__delegate.call(this, x, y, z, args);
        };
        G__23303.cljs$lang$maxFixedArity = 3;
        G__23303.cljs$lang$applyTo = function(arglist__23305) {
          var x = cljs.core.first(arglist__23305);
          arglist__23305 = cljs.core.next(arglist__23305);
          var y = cljs.core.first(arglist__23305);
          arglist__23305 = cljs.core.next(arglist__23305);
          var z = cljs.core.first(arglist__23305);
          var args = cljs.core.rest(arglist__23305);
          return G__23303__delegate(x, y, z, args);
        };
        G__23303.cljs$core$IFn$_invoke$arity$variadic = G__23303__delegate;
        return G__23303;
      }();
      G__23302 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23302__0.call(this);
          case 1:
            return G__23302__1.call(this, x);
          case 2:
            return G__23302__2.call(this, x, y);
          case 3:
            return G__23302__3.call(this, x, y, z);
          default:
            var G__23306 = null;
            if (arguments.length > 3) {
              var G__23307__i = 0, G__23307__a = new Array(arguments.length - 3);
              while (G__23307__i < G__23307__a.length) {
                G__23307__a[G__23307__i] = arguments[G__23307__i + 3];
                ++G__23307__i;
              }
              G__23306 = new cljs.core.IndexedSeq(G__23307__a, 0);
            }
            return G__23302__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23306);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23302.cljs$lang$maxFixedArity = 3;
      G__23302.cljs$lang$applyTo = G__23302__4.cljs$lang$applyTo;
      G__23302.cljs$core$IFn$_invoke$arity$0 = G__23302__0;
      G__23302.cljs$core$IFn$_invoke$arity$1 = G__23302__1;
      G__23302.cljs$core$IFn$_invoke$arity$2 = G__23302__2;
      G__23302.cljs$core$IFn$_invoke$arity$3 = G__23302__3;
      G__23302.cljs$core$IFn$_invoke$arity$variadic = G__23302__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__23302;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq23274) {
  var G__23275 = cljs.core.first(seq23274);
  var seq23274__$1 = cljs.core.next(seq23274);
  var G__23276 = cljs.core.first(seq23274__$1);
  var seq23274__$2 = cljs.core.next(seq23274__$1);
  var G__23277 = cljs.core.first(seq23274__$2);
  var seq23274__$3 = cljs.core.next(seq23274__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__23275, G__23276, G__23277, seq23274__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args23308 = [];
  var len__5743__auto___23311 = arguments.length;
  var i__5744__auto___23312 = 0;
  while (true) {
    if (i__5744__auto___23312 < len__5743__auto___23311) {
      args23308.push(arguments[i__5744__auto___23312]);
      var G__23313 = i__5744__auto___23312 + 1;
      i__5744__auto___23312 = G__23313;
      continue;
    } else {
    }
    break;
  }
  var G__23310 = args23308.length;
  switch(G__23310) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23308.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__23315 = cljs.core.next(coll);
      coll = G__23315;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__23316 = n - 1;
      var G__23317 = cljs.core.next(coll);
      n = G__23316;
      coll = G__23317;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args23318 = [];
  var len__5743__auto___23321 = arguments.length;
  var i__5744__auto___23322 = 0;
  while (true) {
    if (i__5744__auto___23322 < len__5743__auto___23321) {
      args23318.push(arguments[i__5744__auto___23322]);
      var G__23323 = i__5744__auto___23322 + 1;
      i__5744__auto___23322 = G__23323;
      continue;
    } else {
    }
    break;
  }
  var G__23320 = args23318.length;
  switch(G__23320) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23318.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__23326 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23326, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23326, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4685__auto__ = flags;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_23334 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4685__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4685__auto__)) {
              return or__4685__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__23335_23341 = cljs.core.first(coll);
          var G__23336_23342 = writer;
          var G__23337_23343 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23335_23341, G__23336_23342, G__23337_23343) : print_one.call(null, G__23335_23341, G__23336_23342, G__23337_23343);
        } else {
        }
        var coll_23344__$1 = cljs.core.next(coll);
        var n_23345 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_23344__$1 && (n_23345 == null || !(n_23345 === 0))) {
            cljs.core._write(writer, sep);
            var G__23338_23346 = cljs.core.first(coll_23344__$1);
            var G__23339_23347 = writer;
            var G__23340_23348 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23338_23346, G__23339_23347, G__23340_23348) : print_one.call(null, G__23338_23346, G__23339_23347, G__23340_23348);
            var G__23349 = cljs.core.next(coll_23344__$1);
            var G__23350 = n_23345 - 1;
            coll_23344__$1 = G__23349;
            n_23345 = G__23350;
            continue;
          } else {
            if (cljs.core.seq(coll_23344__$1) && n_23345 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4685__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4685__auto__)) {
                  return or__4685__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23334;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23357 = arguments.length;
  var i__5744__auto___23358 = 0;
  while (true) {
    if (i__5744__auto___23358 < len__5743__auto___23357) {
      args__5750__auto__.push(arguments[i__5744__auto___23358]);
      var G__23359 = i__5744__auto___23358 + 1;
      i__5744__auto___23358 = G__23359;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__23353 = cljs.core.seq(ss);
  var chunk__23354 = null;
  var count__23355 = 0;
  var i__23356 = 0;
  while (true) {
    if (i__23356 < count__23355) {
      var s = chunk__23354.cljs$core$IIndexed$_nth$arity$2(null, i__23356);
      cljs.core._write(writer, s);
      var G__23360 = seq__23353;
      var G__23361 = chunk__23354;
      var G__23362 = count__23355;
      var G__23363 = i__23356 + 1;
      seq__23353 = G__23360;
      chunk__23354 = G__23361;
      count__23355 = G__23362;
      i__23356 = G__23363;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23353);
      if (temp__4657__auto__) {
        var seq__23353__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23353__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first(seq__23353__$1);
          var G__23364 = cljs.core.chunk_rest(seq__23353__$1);
          var G__23365 = c__5488__auto__;
          var G__23366 = cljs.core.count(c__5488__auto__);
          var G__23367 = 0;
          seq__23353 = G__23364;
          chunk__23354 = G__23365;
          count__23355 = G__23366;
          i__23356 = G__23367;
          continue;
        } else {
          var s = cljs.core.first(seq__23353__$1);
          cljs.core._write(writer, s);
          var G__23368 = cljs.core.next(seq__23353__$1);
          var G__23369 = null;
          var G__23370 = 0;
          var G__23371 = 0;
          seq__23353 = G__23368;
          chunk__23354 = G__23369;
          count__23355 = G__23370;
          i__23356 = G__23371;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq23351) {
  var G__23352 = cljs.core.first(seq23351);
  var seq23351__$1 = cljs.core.next(seq23351);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__23352, seq23351__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj23373 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj23373;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_map;
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4673__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4673__auto__) {
    var and__4673__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4673__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4673__auto____$1;
    }
  } else {
    return and__4673__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__23389_23398 = cljs.core.meta(obj);
      var G__23390_23399 = writer;
      var G__23391_23400 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__23389_23398, G__23390_23399, G__23391_23400) : cljs.core.pr_writer.call(null, G__23389_23398, G__23390_23399, G__23391_23400);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__23393 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__23394 = cljs.core.pr_writer;
            var G__23395 = writer;
            var G__23396 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__23393, G__23394, G__23395, G__23396) : cljs.core.print_map.call(null, G__23393, G__23394, G__23395, G__23396);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4685__auto__ = name == null;
                    if (or__4685__auto__) {
                      return or__4685__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__23401 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__23401;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4685__auto__ = name == null;
                            if (or__4685__auto__) {
                              return or__4685__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__23405 = obj;
    var G__23406 = writer;
    var G__23407 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__23405, G__23406, G__23407) : alt_impl.call(null, G__23405, G__23406, G__23407);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__23412 = cljs.core.seq(cljs.core.next(objs));
  var chunk__23413 = null;
  var count__23414 = 0;
  var i__23415 = 0;
  while (true) {
    if (i__23415 < count__23414) {
      var obj = chunk__23413.cljs$core$IIndexed$_nth$arity$2(null, i__23415);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__23416 = seq__23412;
      var G__23417 = chunk__23413;
      var G__23418 = count__23414;
      var G__23419 = i__23415 + 1;
      seq__23412 = G__23416;
      chunk__23413 = G__23417;
      count__23414 = G__23418;
      i__23415 = G__23419;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23412);
      if (temp__4657__auto__) {
        var seq__23412__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23412__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first(seq__23412__$1);
          var G__23420 = cljs.core.chunk_rest(seq__23412__$1);
          var G__23421 = c__5488__auto__;
          var G__23422 = cljs.core.count(c__5488__auto__);
          var G__23423 = 0;
          seq__23412 = G__23420;
          chunk__23413 = G__23421;
          count__23414 = G__23422;
          i__23415 = G__23423;
          continue;
        } else {
          var obj = cljs.core.first(seq__23412__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__23424 = cljs.core.next(seq__23412__$1);
          var G__23425 = null;
          var G__23426 = 0;
          var G__23427 = 0;
          seq__23412 = G__23424;
          chunk__23413 = G__23425;
          count__23414 = G__23426;
          i__23415 = G__23427;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args23428 = [];
  var len__5743__auto___23431 = arguments.length;
  var i__5744__auto___23432 = 0;
  while (true) {
    if (i__5744__auto___23432 < len__5743__auto___23431) {
      args23428.push(arguments[i__5744__auto___23432]);
      var G__23433 = i__5744__auto___23432 + 1;
      i__5744__auto___23432 = G__23433;
      continue;
    } else {
    }
    break;
  }
  var G__23430 = args23428.length;
  switch(G__23430) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23428.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23436 = arguments.length;
  var i__5744__auto___23437 = 0;
  while (true) {
    if (i__5744__auto___23437 < len__5743__auto___23436) {
      args__5750__auto__.push(arguments[i__5744__auto___23437]);
      var G__23438 = i__5744__auto___23437 + 1;
      i__5744__auto___23437 = G__23438;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq23435) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23435));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23440 = arguments.length;
  var i__5744__auto___23441 = 0;
  while (true) {
    if (i__5744__auto___23441 < len__5743__auto___23440) {
      args__5750__auto__.push(arguments[i__5744__auto___23441]);
      var G__23442 = i__5744__auto___23441 + 1;
      i__5744__auto___23441 = G__23442;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq23439) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23439));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23444 = arguments.length;
  var i__5744__auto___23445 = 0;
  while (true) {
    if (i__5744__auto___23445 < len__5743__auto___23444) {
      args__5750__auto__.push(arguments[i__5744__auto___23445]);
      var G__23446 = i__5744__auto___23445 + 1;
      i__5744__auto___23445 = G__23446;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq23443) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23443));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__23447__i = 0, G__23447__a = new Array(arguments.length - 0);
      while (G__23447__i < G__23447__a.length) {
        G__23447__a[G__23447__i] = arguments[G__23447__i + 0];
        ++G__23447__i;
      }
      objs = new cljs.core.IndexedSeq(G__23447__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__23448) {
    var objs = cljs.core.seq(arglist__23448);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23450 = arguments.length;
  var i__5744__auto___23451 = 0;
  while (true) {
    if (i__5744__auto___23451 < len__5743__auto___23450) {
      args__5750__auto__.push(arguments[i__5744__auto___23451]);
      var G__23452 = i__5744__auto___23451 + 1;
      i__5744__auto___23451 = G__23452;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq23449) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23449));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23454 = arguments.length;
  var i__5744__auto___23455 = 0;
  while (true) {
    if (i__5744__auto___23455 < len__5743__auto___23454) {
      args__5750__auto__.push(arguments[i__5744__auto___23455]);
      var G__23456 = i__5744__auto___23455 + 1;
      i__5744__auto___23455 = G__23456;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq23453) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23453));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23458 = arguments.length;
  var i__5744__auto___23459 = 0;
  while (true) {
    if (i__5744__auto___23459 < len__5743__auto___23458) {
      args__5750__auto__.push(arguments[i__5744__auto___23459]);
      var G__23460 = i__5744__auto___23459 + 1;
      i__5744__auto___23459 = G__23460;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq23457) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23457));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23462 = arguments.length;
  var i__5744__auto___23463 = 0;
  while (true) {
    if (i__5744__auto___23463 < len__5743__auto___23462) {
      args__5750__auto__.push(arguments[i__5744__auto___23463]);
      var G__23464 = i__5744__auto___23463 + 1;
      i__5744__auto___23463 = G__23464;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq23461) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23461));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__23471_23477 = cljs.core.key(e);
    var G__23472_23478 = w;
    var G__23473_23479 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23471_23477, G__23472_23478, G__23473_23479) : print_one.call(null, G__23471_23477, G__23472_23478, G__23473_23479);
    cljs.core._write(w, " ");
    var G__23474 = cljs.core.val(e);
    var G__23475 = w;
    var G__23476 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23474, G__23475, G__23476) : print_one.call(null, G__23474, G__23475, G__23476);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23483 = arguments.length;
  var i__5744__auto___23484 = 0;
  while (true) {
    if (i__5744__auto___23484 < len__5743__auto___23483) {
      args__5750__auto__.push(arguments[i__5744__auto___23484]);
      var G__23485 = i__5744__auto___23484 + 1;
      i__5744__auto___23484 = G__23485;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq23480) {
  var G__23481 = cljs.core.first(seq23480);
  var seq23480__$1 = cljs.core.next(seq23480);
  var G__23482 = cljs.core.first(seq23480__$1);
  var seq23480__$2 = cljs.core.next(seq23480__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23481, G__23482, seq23480__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args23486 = [];
  var len__5743__auto___23489 = arguments.length;
  var i__5744__auto___23490 = 0;
  while (true) {
    if (i__5744__auto___23490 < len__5743__auto___23489) {
      args23486.push(arguments[i__5744__auto___23490]);
      var G__23491 = i__5744__auto___23490 + 1;
      i__5744__auto___23490 = G__23491;
      continue;
    } else {
    }
    break;
  }
  var G__23488 = args23486.length;
  switch(G__23488) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23486.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__23493_SHARP_, p2__23494_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__23493_SHARP_, p2__23494_SHARP_) : rf.call(null, p1__23493_SHARP_, p2__23494_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__23495 = null;
      var G__23495__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__23495__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__23495__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__23495 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__23495__0.call(this);
          case 1:
            return G__23495__1.call(this, result);
          case 2:
            return G__23495__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23495.cljs$core$IFn$_invoke$arity$0 = G__23495__0;
      G__23495.cljs$core$IFn$_invoke$arity$1 = G__23495__1;
      G__23495.cljs$core$IFn$_invoke$arity$2 = G__23495__2;
      return G__23495;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args23496 = [];
  var len__5743__auto___23499 = arguments.length;
  var i__5744__auto___23500 = 0;
  while (true) {
    if (i__5744__auto___23500 < len__5743__auto___23499) {
      args23496.push(arguments[i__5744__auto___23500]);
      var G__23501 = i__5744__auto___23500 + 1;
      i__5744__auto___23500 = G__23501;
      continue;
    } else {
    }
    break;
  }
  var G__23498 = args23496.length;
  switch(G__23498) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23496.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__23503 = null;
        var G__23503__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23503__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23503__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__23503 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23503__0.call(this);
            case 1:
              return G__23503__1.call(this, result);
            case 2:
              return G__23503__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23503.cljs$core$IFn$_invoke$arity$0 = G__23503__0;
        G__23503.cljs$core$IFn$_invoke$arity$1 = G__23503__1;
        G__23503.cljs$core$IFn$_invoke$arity$2 = G__23503__2;
        return G__23503;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.rand;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args23504 = [];
  var len__5743__auto___23507 = arguments.length;
  var i__5744__auto___23508 = 0;
  while (true) {
    if (i__5744__auto___23508 < len__5743__auto___23507) {
      args23504.push(arguments[i__5744__auto___23508]);
      var G__23509 = i__5744__auto___23508 + 1;
      i__5744__auto___23508 = G__23509;
      continue;
    } else {
    }
    break;
  }
  var G__23506 = args23504.length;
  switch(G__23506) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23504.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5679__auto__ = this;
  return cljs.core.es6_iterator(this__5679__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23512 = arguments.length;
  var i__5744__auto___23513 = 0;
  while (true) {
    if (i__5744__auto___23513 < len__5743__auto___23512) {
      args__5750__auto__.push(arguments[i__5744__auto___23513]);
      var G__23514 = i__5744__auto___23513 + 1;
      i__5744__auto___23513 = G__23514;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq23511) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23511));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23516_SHARP_, p2__23515_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__23515_SHARP_) : proc.call(null, p2__23515_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__5340__auto__ = x == null ? null : x;
    var m__5341__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5341__auto__.call(null, x);
    } else {
      var m__5341__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5341__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__5340__auto__ = x == null ? null : x;
    var m__5341__auto__ = cljs.core._key__GT_js[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5341__auto__.call(null, x);
    } else {
      var m__5341__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5341__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.clj__GT_js;
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__23535_23545 = cljs.core.seq(x);
            var chunk__23536_23546 = null;
            var count__23537_23547 = 0;
            var i__23538_23548 = 0;
            while (true) {
              if (i__23538_23548 < count__23537_23547) {
                var vec__23539_23549 = chunk__23536_23546.cljs$core$IIndexed$_nth$arity$2(null, i__23538_23548);
                var k_23550 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23539_23549, 0, null);
                var v_23551 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23539_23549, 1, null);
                m[cljs.core.key__GT_js(k_23550)] = cljs$core$clj__GT_js(v_23551);
                var G__23552 = seq__23535_23545;
                var G__23553 = chunk__23536_23546;
                var G__23554 = count__23537_23547;
                var G__23555 = i__23538_23548 + 1;
                seq__23535_23545 = G__23552;
                chunk__23536_23546 = G__23553;
                count__23537_23547 = G__23554;
                i__23538_23548 = G__23555;
                continue;
              } else {
                var temp__4657__auto___23556 = cljs.core.seq(seq__23535_23545);
                if (temp__4657__auto___23556) {
                  var seq__23535_23557__$1 = temp__4657__auto___23556;
                  if (cljs.core.chunked_seq_QMARK_(seq__23535_23557__$1)) {
                    var c__5488__auto___23558 = cljs.core.chunk_first(seq__23535_23557__$1);
                    var G__23559 = cljs.core.chunk_rest(seq__23535_23557__$1);
                    var G__23560 = c__5488__auto___23558;
                    var G__23561 = cljs.core.count(c__5488__auto___23558);
                    var G__23562 = 0;
                    seq__23535_23545 = G__23559;
                    chunk__23536_23546 = G__23560;
                    count__23537_23547 = G__23561;
                    i__23538_23548 = G__23562;
                    continue;
                  } else {
                    var vec__23540_23563 = cljs.core.first(seq__23535_23557__$1);
                    var k_23564 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23540_23563, 0, null);
                    var v_23565 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23540_23563, 1, null);
                    m[cljs.core.key__GT_js(k_23564)] = cljs$core$clj__GT_js(v_23565);
                    var G__23566 = cljs.core.next(seq__23535_23557__$1);
                    var G__23567 = null;
                    var G__23568 = 0;
                    var G__23569 = 0;
                    seq__23535_23545 = G__23566;
                    chunk__23536_23546 = G__23567;
                    count__23537_23547 = G__23568;
                    i__23538_23548 = G__23569;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__23541_23570 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__23542_23571 = null;
              var count__23543_23572 = 0;
              var i__23544_23573 = 0;
              while (true) {
                if (i__23544_23573 < count__23543_23572) {
                  var x_23574__$1 = chunk__23542_23571.cljs$core$IIndexed$_nth$arity$2(null, i__23544_23573);
                  arr.push(x_23574__$1);
                  var G__23575 = seq__23541_23570;
                  var G__23576 = chunk__23542_23571;
                  var G__23577 = count__23543_23572;
                  var G__23578 = i__23544_23573 + 1;
                  seq__23541_23570 = G__23575;
                  chunk__23542_23571 = G__23576;
                  count__23543_23572 = G__23577;
                  i__23544_23573 = G__23578;
                  continue;
                } else {
                  var temp__4657__auto___23579 = cljs.core.seq(seq__23541_23570);
                  if (temp__4657__auto___23579) {
                    var seq__23541_23580__$1 = temp__4657__auto___23579;
                    if (cljs.core.chunked_seq_QMARK_(seq__23541_23580__$1)) {
                      var c__5488__auto___23581 = cljs.core.chunk_first(seq__23541_23580__$1);
                      var G__23582 = cljs.core.chunk_rest(seq__23541_23580__$1);
                      var G__23583 = c__5488__auto___23581;
                      var G__23584 = cljs.core.count(c__5488__auto___23581);
                      var G__23585 = 0;
                      seq__23541_23570 = G__23582;
                      chunk__23542_23571 = G__23583;
                      count__23543_23572 = G__23584;
                      i__23544_23573 = G__23585;
                      continue;
                    } else {
                      var x_23586__$1 = cljs.core.first(seq__23541_23580__$1);
                      arr.push(x_23586__$1);
                      var G__23587 = cljs.core.next(seq__23541_23580__$1);
                      var G__23588 = null;
                      var G__23589 = 0;
                      var G__23590 = 0;
                      seq__23541_23570 = G__23587;
                      chunk__23542_23571 = G__23588;
                      count__23543_23572 = G__23589;
                      i__23544_23573 = G__23590;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__5340__auto__ = x == null ? null : x;
    var m__5341__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__5341__auto__.call(null, x, options);
    } else {
      var m__5341__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__5341__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args23591 = [];
  var len__5743__auto___23616 = arguments.length;
  var i__5744__auto___23617 = 0;
  while (true) {
    if (i__5744__auto___23617 < len__5743__auto___23616) {
      args23591.push(arguments[i__5744__auto___23617]);
      var G__23618 = i__5744__auto___23617 + 1;
      i__5744__auto___23617 = G__23618;
      continue;
    } else {
    }
    break;
  }
  var G__23595 = args23591.length;
  switch(G__23595) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args23591.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5762__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__23596 = opts;
  var map__23596__$1 = (!(map__23596 == null) ? map__23596.cljs$lang$protocol_mask$partition0$ & 64 || map__23596.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23596) : map__23596;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23596__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__23596, map__23596__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5457__auto__ = function(map__23596, map__23596__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__23610(s__23611) {
                      return new cljs.core.LazySeq(null, function(map__23596, map__23596__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__23611__$1 = s__23611;
                          while (true) {
                            var temp__4657__auto__ = cljs.core.seq(s__23611__$1);
                            if (temp__4657__auto__) {
                              var s__23611__$2 = temp__4657__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__23611__$2)) {
                                var c__5455__auto__ = cljs.core.chunk_first(s__23611__$2);
                                var size__5456__auto__ = cljs.core.count(c__5455__auto__);
                                var b__23613 = cljs.core.chunk_buffer(size__5456__auto__);
                                if (function() {
                                  var i__23612 = 0;
                                  while (true) {
                                    if (i__23612 < size__5456__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5455__auto__, i__23612);
                                      cljs.core.chunk_append(b__23613, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__23620 = i__23612 + 1;
                                      i__23612 = G__23620;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__23613), cljs$core$thisfn_$_iter__23610(cljs.core.chunk_rest(s__23611__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__23613), null);
                                }
                              } else {
                                var k = cljs.core.first(s__23611__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__23610(cljs.core.rest(s__23611__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__23596, map__23596__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__23596, map__23596__$1, keywordize_keys, keyfn);
                  return iter__5457__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__23596, map__23596__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq23592) {
  var G__23593 = cljs.core.first(seq23592);
  var seq23592__$1 = cljs.core.next(seq23592);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__23593, seq23592__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__23622 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23622) : cljs.core.atom.call(null, G__23622);
  }();
  return function(mem) {
    return function() {
      var G__23623__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__23623 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__23624__i = 0, G__23624__a = new Array(arguments.length - 0);
          while (G__23624__i < G__23624__a.length) {
            G__23624__a[G__23624__i] = arguments[G__23624__i + 0];
            ++G__23624__i;
          }
          args = new cljs.core.IndexedSeq(G__23624__a, 0);
        }
        return G__23623__delegate.call(this, args);
      };
      G__23623.cljs$lang$maxFixedArity = 0;
      G__23623.cljs$lang$applyTo = function(arglist__23625) {
        var args = cljs.core.seq(arglist__23625);
        return G__23623__delegate(args);
      };
      G__23623.cljs$core$IFn$_invoke$arity$variadic = G__23623__delegate;
      return G__23623;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args23626 = [];
  var len__5743__auto___23631 = arguments.length;
  var i__5744__auto___23632 = 0;
  while (true) {
    if (i__5744__auto___23632 < len__5743__auto___23631) {
      args23626.push(arguments[i__5744__auto___23632]);
      var G__23633 = i__5744__auto___23632 + 1;
      i__5744__auto___23632 = G__23633;
      continue;
    } else {
    }
    break;
  }
  var G__23630 = args23626.length;
  switch(G__23630) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args23626.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5762__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__23635 = ret;
      f = G__23635;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq23627) {
  var G__23628 = cljs.core.first(seq23627);
  var seq23627__$1 = cljs.core.next(seq23627);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__23628, seq23627__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args23636 = [];
  var len__5743__auto___23639 = arguments.length;
  var i__5744__auto___23640 = 0;
  while (true) {
    if (i__5744__auto___23640 < len__5743__auto___23639) {
      args23636.push(arguments[i__5744__auto___23640]);
      var G__23641 = i__5744__auto___23640 + 1;
      i__5744__auto___23640 = G__23641;
      continue;
    } else {
    }
    break;
  }
  var G__23638 = args23636.length;
  switch(G__23638) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23636.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__23644 = Math.random() * n;
  return Math.floor(G__23644);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__23646 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23646) : cljs.core.atom.call(null, G__23646);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23649 = arguments.length;
  var i__5744__auto___23650 = 0;
  while (true) {
    if (i__5744__auto___23650 < len__5743__auto___23649) {
      args__5750__auto__.push(arguments[i__5744__auto___23650]);
      var G__23651 = i__5744__auto___23650 + 1;
      i__5744__auto___23650 = G__23651;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq23647) {
  var G__23648 = cljs.core.first(seq23647);
  var seq23647__$1 = cljs.core.next(seq23647);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23648, seq23647__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args23652 = [];
  var len__5743__auto___23656 = arguments.length;
  var i__5744__auto___23657 = 0;
  while (true) {
    if (i__5744__auto___23657 < len__5743__auto___23656) {
      args23652.push(arguments[i__5744__auto___23657]);
      var G__23658 = i__5744__auto___23657 + 1;
      i__5744__auto___23657 = G__23658;
      continue;
    } else {
    }
    break;
  }
  var G__23654 = args23652.length;
  switch(G__23654) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23652.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__23655 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23655) : cljs.core.deref.call(null, G__23655);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4685__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4685__auto__) {
    return or__4685__auto__;
  } else {
    var or__4685__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4685__auto____$1) {
      return or__4685__auto____$1;
    } else {
      var and__4673__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4673__auto__) {
        var and__4673__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4673__auto____$1) {
          var and__4673__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4673__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__23660 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__23661 = i + 1;
                ret = G__23660;
                i = G__23661;
                continue;
              }
              break;
            }
          } else {
            return and__4673__auto____$2;
          }
        } else {
          return and__4673__auto____$1;
        }
      } else {
        return and__4673__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args23662 = [];
  var len__5743__auto___23666 = arguments.length;
  var i__5744__auto___23667 = 0;
  while (true) {
    if (i__5744__auto___23667 < len__5743__auto___23666) {
      args23662.push(arguments[i__5744__auto___23667]);
      var G__23668 = i__5744__auto___23667 + 1;
      i__5744__auto___23667 = G__23668;
      continue;
    } else {
    }
    break;
  }
  var G__23664 = args23662.length;
  switch(G__23664) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23662.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__23665 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23665) : cljs.core.deref.call(null, G__23665);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args23670 = [];
  var len__5743__auto___23674 = arguments.length;
  var i__5744__auto___23675 = 0;
  while (true) {
    if (i__5744__auto___23675 < len__5743__auto___23674) {
      args23670.push(arguments[i__5744__auto___23675]);
      var G__23676 = i__5744__auto___23675 + 1;
      i__5744__auto___23675 = G__23676;
      continue;
    } else {
    }
    break;
  }
  var G__23672 = args23670.length;
  switch(G__23672) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23670.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__23673 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23673) : cljs.core.deref.call(null, G__23673);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args23678 = [];
  var len__5743__auto___23682 = arguments.length;
  var i__5744__auto___23683 = 0;
  while (true) {
    if (i__5744__auto___23683 < len__5743__auto___23682) {
      args23678.push(arguments[i__5744__auto___23683]);
      var G__23684 = i__5744__auto___23683 + 1;
      i__5744__auto___23683 = G__23684;
      continue;
    } else {
    }
    break;
  }
  var G__23680 = args23678.length;
  switch(G__23680) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23678.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__23681 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23681) : cljs.core.deref.call(null, G__23681);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args23686 = [];
  var len__5743__auto___23689 = arguments.length;
  var i__5744__auto___23690 = 0;
  while (true) {
    if (i__5744__auto___23690 < len__5743__auto___23689) {
      args23686.push(arguments[i__5744__auto___23690]);
      var G__23691 = i__5744__auto___23690 + 1;
      i__5744__auto___23690 = G__23691;
      continue;
    } else {
    }
    break;
  }
  var G__23688 = args23686.length;
  switch(G__23688) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23686.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4685__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args23696 = [];
  var len__5743__auto___23699 = arguments.length;
  var i__5744__auto___23700 = 0;
  while (true) {
    if (i__5744__auto___23700 < len__5743__auto___23699) {
      args23696.push(arguments[i__5744__auto___23700]);
      var G__23701 = i__5744__auto___23700 + 1;
      i__5744__auto___23700 = G__23701;
      continue;
    } else {
    }
    break;
  }
  var G__23698 = args23696.length;
  switch(G__23698) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23696.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__23693_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__23693_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__23693_SHARP_), cljs.core.second(p1__23693_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__23694_SHARP_, p2__23695_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__23694_SHARP_, p2__23695_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4685__auto__ = cljs.core.truth_(function() {
    var and__4673__auto__ = xprefs;
    if (cljs.core.truth_(and__4673__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4673__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    var or__4685__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__23715 = cljs.core.rest(ps);
          ps = G__23715;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4685__auto____$1)) {
      return or__4685__auto____$1;
    } else {
      var or__4685__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__23716 = cljs.core.rest(ps);
            ps = G__23716;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4685__auto____$2)) {
        return or__4685__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4685__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__23719) {
    var vec__23720 = p__23719;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23720, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23720, 1, null);
    var e = vec__23720;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4685__auto__ = be == null;
        if (or__4685__auto__) {
          return or__4685__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._reset[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto__.call(null, mf);
    } else {
      var m__5341__auto____$1 = cljs.core._reset["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._add_method[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5341__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__5341__auto____$1 = cljs.core._add_method["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5341__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._remove_method[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5341__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5341__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5341__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._prefer_method[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5341__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__5341__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5341__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._get_method[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5341__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5341__auto____$1 = cljs.core._get_method["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5341__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._methods[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto__.call(null, mf);
    } else {
      var m__5341__auto____$1 = cljs.core._methods["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._prefers[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto__.call(null, mf);
    } else {
      var m__5341__auto____$1 = cljs.core._prefers["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto__.call(null, mf);
    } else {
      var m__5341__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__5340__auto__ = mf == null ? null : mf;
    var m__5341__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto__.call(null, mf);
    } else {
      var m__5341__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5341__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5341__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__23722 = null;
  var G__23722__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__23722__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__23722__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__23722__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__23722__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__23722__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__23722__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__23722__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__23722__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__23722__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__23722__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__23722__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__23722__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__23722__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__23722__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__23722__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__23722__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__23722__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__23722__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__23722__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__23722__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__23722__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__23722 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__23722__1.call(this, self__);
      case 2:
        return G__23722__2.call(this, self__, a);
      case 3:
        return G__23722__3.call(this, self__, a, b);
      case 4:
        return G__23722__4.call(this, self__, a, b, c);
      case 5:
        return G__23722__5.call(this, self__, a, b, c, d);
      case 6:
        return G__23722__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__23722__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__23722__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__23722__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__23722__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__23722__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__23722__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__23722__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__23722__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__23722__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__23722__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__23722__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__23722__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__23722__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__23722__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__23722__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__23722__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23722.cljs$core$IFn$_invoke$arity$1 = G__23722__1;
  G__23722.cljs$core$IFn$_invoke$arity$2 = G__23722__2;
  G__23722.cljs$core$IFn$_invoke$arity$3 = G__23722__3;
  G__23722.cljs$core$IFn$_invoke$arity$4 = G__23722__4;
  G__23722.cljs$core$IFn$_invoke$arity$5 = G__23722__5;
  G__23722.cljs$core$IFn$_invoke$arity$6 = G__23722__6;
  G__23722.cljs$core$IFn$_invoke$arity$7 = G__23722__7;
  G__23722.cljs$core$IFn$_invoke$arity$8 = G__23722__8;
  G__23722.cljs$core$IFn$_invoke$arity$9 = G__23722__9;
  G__23722.cljs$core$IFn$_invoke$arity$10 = G__23722__10;
  G__23722.cljs$core$IFn$_invoke$arity$11 = G__23722__11;
  G__23722.cljs$core$IFn$_invoke$arity$12 = G__23722__12;
  G__23722.cljs$core$IFn$_invoke$arity$13 = G__23722__13;
  G__23722.cljs$core$IFn$_invoke$arity$14 = G__23722__14;
  G__23722.cljs$core$IFn$_invoke$arity$15 = G__23722__15;
  G__23722.cljs$core$IFn$_invoke$arity$16 = G__23722__16;
  G__23722.cljs$core$IFn$_invoke$arity$17 = G__23722__17;
  G__23722.cljs$core$IFn$_invoke$arity$18 = G__23722__18;
  G__23722.cljs$core$IFn$_invoke$arity$19 = G__23722__19;
  G__23722.cljs$core$IFn$_invoke$arity$20 = G__23722__20;
  G__23722.cljs$core$IFn$_invoke$arity$21 = G__23722__21;
  G__23722.cljs$core$IFn$_invoke$arity$22 = G__23722__22;
  return G__23722;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args23721) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23721)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    var temp__4655__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var target_fn = temp__4655__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__23723 = self__.uuid;
  var G__23724 = other.uuid;
  return goog.array.defaultCompare(G__23723, G__23724);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args23725 = [];
  var len__5743__auto___23728 = arguments.length;
  var i__5744__auto___23729 = 0;
  while (true) {
    if (i__5744__auto___23729 < len__5743__auto___23728) {
      args23725.push(arguments[i__5744__auto___23729]);
      var G__23730 = i__5744__auto___23729 + 1;
      i__5744__auto___23729 = G__23730;
      continue;
    } else {
    }
    break;
  }
  var G__23727 = args23725.length;
  switch(G__23727) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23725.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__23732 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__23732) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23734_SHARP_, p2__23735_SHARP_) {
      goog.object.set(p1__23734_SHARP_, p2__23735_SHARP_, true);
      return p1__23734_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__23738 = cljs.core.next(ks__$1);
          var G__23739 = [cljs.core.str(function() {
            var G__23737 = ret;
            if (!(ret === "")) {
              return [cljs.core.str(G__23737), cljs.core.str("|")].join("");
            } else {
              return G__23737;
            }
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__23738;
          ret = G__23739;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_23740 = 0;
  while (true) {
    if (i_23740 < name.length) {
      var c_23741 = name.charAt(i_23740);
      var sub_23742 = goog.object.get(cljs.core.CHAR_MAP, c_23741);
      if (!(sub_23742 == null)) {
        sb.append(sub_23742);
      } else {
        sb.append(c_23741);
      }
      var G__23743 = i_23740 + 1;
      i_23740 = G__23743;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__23745 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23745, 0, null);
      var G__23746 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__23747 = r.lastIndex;
      ret = G__23746;
      last_match_end = G__23747;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write(writer__5284__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__23752 = function() {
          var G__23750 = ctxt;
          var G__23751 = cljs.core.first(xs);
          return goog.object.get(G__23750, G__23751);
        }();
        var G__23753 = cljs.core.next(xs);
        ctxt = G__23752;
        xs = G__23753;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__23757 = cljs.core._STAR_target_STAR_;
  switch(G__23757) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__23759 = cljs.core.first(segs);
            return eval(G__23759);
          } catch (e23758) {
            if (e23758 instanceof ReferenceError) {
              var e = e23758;
              return null;
            } else {
              throw e23758;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args23761 = [];
  var len__5743__auto___23764 = arguments.length;
  var i__5744__auto___23765 = 0;
  while (true) {
    if (i__5744__auto___23765 < len__5743__auto___23764) {
      args23761.push(arguments[i__5744__auto___23765]);
      var G__23766 = i__5744__auto___23765 + 1;
      i__5744__auto___23765 = G__23766;
      continue;
    } else {
    }
    break;
  }
  var G__23763 = args23761.length;
  switch(G__23763) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23761.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__23769 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23769) : cljs.core.atom.call(null, G__23769);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__23771 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23771) : cljs.core.atom.call(null, G__23771);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__5340__auto__ = port == null ? null : port;
    var m__5341__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, port, fn1_handler);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__5340__auto__ = port == null ? null : port;
    var m__5341__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__5340__auto__ = chan == null ? null : chan;
    var m__5341__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, chan);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__5340__auto__ = chan == null ? null : chan;
    var m__5341__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, chan);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__5340__auto__ = h == null ? null : h;
    var m__5341__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, h);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function cljs$core$async$impl$protocols$blockable_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(h);
  } else {
    var x__5340__auto__ = h == null ? null : h;
    var m__5341__auto__ = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, h);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.blockable_QMARK_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.blockable?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__5340__auto__ = h == null ? null : h;
    var m__5341__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, h);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__5340__auto__ = b == null ? null : b;
    var m__5341__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, b);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__5340__auto__ = b == null ? null : b;
    var m__5341__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, b);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__5340__auto__ = b == null ? null : b;
    var m__5341__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, b, itm);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function cljs$core$async$impl$protocols$close_buf_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(b);
  } else {
    var x__5340__auto__ = b == null ? null : b;
    var m__5341__auto__ = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, b);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.protocols.close_buf_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var args23889 = [];
  var len__5743__auto___23892 = arguments.length;
  var i__5744__auto___23893 = 0;
  while (true) {
    if (i__5744__auto___23893 < len__5743__auto___23892) {
      args23889.push(arguments[i__5744__auto___23893]);
      var G__23894 = i__5744__auto___23893 + 1;
      i__5744__auto___23893 = G__23894;
      continue;
    } else {
    }
    break;
  }
  var G__23891 = args23889.length;
  switch(G__23891) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23889.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__23898 = cnt + 1;
      cnt = G__23898;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__5588__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__5588__auto__) {
      var v_23899 = this$.pop();
      if (keep_QMARK_.call(null, v_23899)) {
        this$.unshift(v_23899);
      } else {
      }
      var G__23900 = x + 1;
      x = G__23900;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
if (typeof cljs.core.async.impl.buffers.NO_VAL !== "undefined") {
} else {
  cljs.core.async.impl.buffers.NO_VAL = new Object;
}
cljs.core.async.impl.buffers.undelivered_QMARK_ = function cljs$core$async$impl$buffers$undelivered_QMARK_(val) {
  return cljs.core.async.impl.buffers.NO_VAL === val;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    self__.val = itm;
  } else {
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return self__.val = null;
  } else {
    return null;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return 0;
  } else {
    return 1;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function cljs$core$async$impl$buffers$__GT_PromiseBuffer(val) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(val);
};
cljs.core.async.impl.buffers.promise_buffer = function cljs$core$async$impl$buffers$promise_buffer() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  return (function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(null, args);
    }, interval);
  });
};
goog.functions.throttle = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = null;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(null, args);
  };
  return (function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  });
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || !goog.global.Window || !goog.global.Window.prototype || goog.global.Window.prototype.setImmediate != goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.queue_dispatcher;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_23903 = 0;
  while (true) {
    var m_23904 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_23904 == null) {
    } else {
      m_23904.call(null);
      if (count_23903 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__23905 = count_23903 + 1;
        count_23903 = G__23905;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__4673__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__4673__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911 = function(box, val, meta23912) {
      this.box = box;
      this.val = val;
      this.meta23912 = meta23912;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23913, meta23912__$1) {
      var self__ = this;
      var _23913__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911(self__.box, self__.val, meta23912__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23913) {
      var self__ = this;
      var _23913__$1 = this;
      return self__.meta23912;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
      1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta23912", "meta23912", 701977127, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels23911";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels23911");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels23911 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels23911(box__$1, val__$1, meta23912) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911(box__$1, val__$1, meta23912);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23911(cljs$core$async$impl$channels$box, val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__5340__auto__ = this$ == null ? null : this$;
    var m__5341__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, this$);
    } else {
      var m__5341__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_23914 = self__.puts.pop();
    if (putter_23914 == null) {
    } else {
      var put_handler_23915 = putter_23914.handler;
      var val_23916 = putter_23914.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_23915)) {
        var put_cb_23917 = cljs.core.async.impl.protocols.commit.call(null, put_handler_23915);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_23917, put_handler_23915, val_23916, putter_23914, this$__$1) {
          return function() {
            return put_cb_23917.call(null, true);
          };
        }(put_cb_23917, put_handler_23915, val_23916, putter_23914, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = self__.buf;
      if (cljs.core.truth_(and__4673__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__4673__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_23918 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23918)) {
            var take_cb_23919 = cljs.core.async.impl.protocols.commit.call(null, taker_23918);
            var val_23920__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23919, val_23920__$1, taker_23918, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_23919.call(null, val_23920__$1);
              };
            }(take_cb_23919, val_23920__$1, taker_23918, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        } else {
        }
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_23921 = self__.puts.pop();
          if (putter_23921 == null) {
          } else {
            var put_handler_23922 = putter_23921.handler;
            var val_23923 = putter_23921.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_23922)) {
              var put_cb_23924 = cljs.core.async.impl.protocols.commit.call(null, put_handler_23922);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_23924, put_handler_23922, val_23923, putter_23921, _, retval, this$__$1) {
                return function() {
                  return put_cb_23924.call(null, true);
                };
              }(put_cb_23924, put_handler_23922, val_23923, putter_23921, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_23923))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__4673__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__4673__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__4673__auto__;
            }
          }())) {
            var has_val = function() {
              var and__4673__auto__ = self__.buf;
              if (cljs.core.truth_(and__4673__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__4673__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
          } else {
          }
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = self__.buf;
      if (cljs.core.truth_(and__4673__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__4673__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_23925 = self__.takes.pop();
      if (taker_23925 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23925)) {
          var take_cb_23926 = cljs.core.async.impl.protocols.commit.call(null, taker_23925);
          var val_23927 = cljs.core.truth_(function() {
            var and__4673__auto__ = self__.buf;
            if (cljs.core.truth_(and__4673__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__4673__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23926, val_23927, taker_23925, this$__$1) {
            return function() {
              return take_cb_23926.call(null, val_23927);
            };
          }(take_cb_23926, val_23927, taker_23925, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    if (cljs.core.truth_(self__.buf)) {
      cljs.core.async.impl.protocols.close_buf_BANG_.call(null, self__.buf);
    } else {
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__4685__auto__ = exh;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var args23928 = [];
  var len__5743__auto___23933 = arguments.length;
  var i__5744__auto___23934 = 0;
  while (true) {
    if (i__5744__auto___23934 < len__5743__auto___23933) {
      args23928.push(arguments[i__5744__auto___23934]);
      var G__23935 = i__5744__auto___23934 + 1;
      i__5744__auto___23934 = G__23935;
      continue;
    } else {
    }
    break;
  }
  var G__23930 = args23928.length;
  switch(G__23930) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23928.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__23937 = null;
        var G__23937__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e23931) {
            var t = e23931;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__23937__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e23932) {
            var t = e23932;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__23937 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__23937__1.call(this, buf__$1);
            case 2:
              return G__23937__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23937.cljs$core$IFn$_invoke$arity$1 = G__23937__1;
        G__23937.cljs$core$IFn$_invoke$arity$2 = G__23937__2;
        return G__23937;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044 = function(fn_handler, f, meta26045) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta26045 = meta26045;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26046, meta26045__$1) {
      var self__ = this;
      var _26046__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044(self__.fn_handler, self__.f, meta26045__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26046) {
      var self__ = this;
      var _26046__$1 = this;
      return self__.meta26045;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta26045", "meta26045", 1246951233, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers26044";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers26044");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers26044 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers26044(fn_handler__$1, f__$1, meta26045) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044(fn_handler__$1, f__$1, meta26045);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26044(cljs$core$async$impl$ioc_helpers$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e26048) {
    if (e26048 instanceof Object) {
      var ex = e26048;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e26048;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_26051_26053 = state;
    statearr_26051_26053[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_26051_26053[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_26052_26054 = state;
    statearr_26052_26054[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_26052_26054[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_26057_26059 = state;
    statearr_26057_26059[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_26057_26059[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_26058_26060 = state;
    statearr_26058_26060[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_26058_26060[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5299__auto__, k__5300__auto__) {
  var self__ = this;
  var this__5299__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5299__auto____$1, k__5300__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5301__auto__, k26062, else__5302__auto__) {
  var self__ = this;
  var this__5301__auto____$1 = this;
  var G__26064 = k26062 instanceof cljs.core.Keyword ? k26062.fqn : null;
  switch(G__26064) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k26062, else__5302__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5313__auto__, writer__5314__auto__, opts__5315__auto__) {
  var self__ = this;
  var this__5313__auto____$1 = this;
  var pr_pair__5316__auto__ = function(this__5313__auto____$1) {
    return function(keyval__5317__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, cljs.core.pr_writer, "", " ", "", opts__5315__auto__, keyval__5317__auto__);
    };
  }(this__5313__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, pr_pair__5316__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__5315__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__26061) {
  var self__ = this;
  var G__26061__$1 = this;
  return new cljs.core.RecordIter(0, G__26061__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core._iterator.call(null, self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5297__auto__) {
  var self__ = this;
  var this__5297__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5293__auto__) {
  var self__ = this;
  var this__5293__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5303__auto__) {
  var self__ = this;
  var this__5303__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5294__auto__) {
  var self__ = this;
  var this__5294__auto____$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_imap.call(null, this__5294__auto____$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5295__auto__, other__5296__auto__) {
  var self__ = this;
  var this__5295__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = other__5296__auto__;
    if (cljs.core.truth_(and__4673__auto__)) {
      var and__4673__auto____$1 = this__5295__auto____$1.constructor === other__5296__auto__.constructor;
      if (and__4673__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5295__auto____$1, other__5296__auto__);
      } else {
        return and__4673__auto____$1;
      }
    } else {
      return and__4673__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5308__auto__, k__5309__auto__) {
  var self__ = this;
  var this__5308__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__5309__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5308__auto____$1), self__.__meta), k__5309__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5309__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5306__auto__, k__5307__auto__, G__26061) {
  var self__ = this;
  var this__5306__auto____$1 = this;
  var pred__26065 = cljs.core.keyword_identical_QMARK_;
  var expr__26066 = k__5307__auto__;
  if (cljs.core.truth_(pred__26065.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__26066))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__26061, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__26065.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__26066))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__26061, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__26065.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__26066))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__26061, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__26065.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__26066))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__26061, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__26065.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__26066))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__26061, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5307__auto__, G__26061), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5311__auto__) {
  var self__ = this;
  var this__5311__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5298__auto__, G__26061) {
  var self__ = this;
  var this__5298__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__26061, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5304__auto__, entry__5305__auto__) {
  var self__ = this;
  var this__5304__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5305__auto__)) {
    return cljs.core._assoc.call(null, this__5304__auto____$1, cljs.core._nth.call(null, entry__5305__auto__, 0), cljs.core._nth.call(null, entry__5305__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5304__auto____$1, entry__5305__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__5333__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__5333__auto__, writer__5334__auto__) {
  return cljs.core._write.call(null, writer__5334__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__26063) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__26063), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__26063), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__26063), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__26063), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__26063), null, cljs.core.dissoc.call(null, G__26063, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_26070 = state;
  statearr_26070[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_26070;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = exception;
      if (cljs.core.truth_(and__4673__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__4673__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__4673__auto__ = exception;
        if (cljs.core.truth_(and__4673__auto__)) {
          var and__4673__auto____$1 = catch_block;
          if (cljs.core.truth_(and__4673__auto____$1)) {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), catch_exception) || exception instanceof catch_exception;
          } else {
            return and__4673__auto____$1;
          }
        } else {
          return and__4673__auto__;
        }
      }())) {
        var statearr_26076 = state;
        statearr_26076[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_26076[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_26076[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_26076[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_26076;
      } else {
        if (cljs.core.truth_(function() {
          var and__4673__auto__ = exception;
          if (cljs.core.truth_(and__4673__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__4673__auto__;
          }
        }())) {
          var statearr_26077_26081 = state;
          statearr_26077_26081[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__26082 = state;
          state = G__26082;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__4673__auto__ = exception;
            if (cljs.core.truth_(and__4673__auto__)) {
              var and__4673__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__4673__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4673__auto____$1;
              }
            } else {
              return and__4673__auto__;
            }
          }())) {
            var statearr_26078 = state;
            statearr_26078[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_26078[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_26078;
          } else {
            if (cljs.core.truth_(function() {
              var and__4673__auto__ = cljs.core.not.call(null, exception);
              if (and__4673__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4673__auto__;
              }
            }())) {
              var statearr_26079 = state;
              statearr_26079[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_26079[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_26079;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_26080 = state;
                statearr_26080[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_26080[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_26080;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var args26085 = [];
  var len__5743__auto___26088 = arguments.length;
  var i__5744__auto___26089 = 0;
  while (true) {
    if (i__5744__auto___26089 < len__5743__auto___26088) {
      args26085.push(arguments[i__5744__auto___26089]);
      var G__26090 = i__5744__auto___26089 + 1;
      i__5744__auto___26089 = G__26090;
      continue;
    } else {
    }
    break;
  }
  var G__26087 = args26085.length;
  switch(G__26087) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26085.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__26092 = level + 1;
      level = G__26092;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var args26093 = [];
  var len__5743__auto___26096 = arguments.length;
  var i__5744__auto___26097 = 0;
  while (true) {
    if (i__5744__auto___26097 < len__5743__auto___26096) {
      args26093.push(arguments[i__5744__auto___26097]);
      var G__26098 = i__5744__auto___26097 + 1;
      i__5744__auto___26097 = G__26098;
      continue;
    } else {
    }
    break;
  }
  var G__26095 = args26093.length;
  switch(G__26095) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26093.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_26100 = 0;
  while (true) {
    if (i_26100 < arr.length) {
      arr[i_26100] = null;
      var G__26101 = i_26100 + 1;
      i_26100 = G__26101;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var args26102 = [];
  var len__5743__auto___26105 = arguments.length;
  var i__5744__auto___26106 = 0;
  while (true) {
    if (i__5744__auto___26106 < len__5743__auto___26105) {
      args26102.push(arguments[i__5744__auto___26106]);
      var G__26107 = i__5744__auto___26106 + 1;
      i__5744__auto___26106 = G__26107;
      continue;
    } else {
    }
    break;
  }
  var G__26104 = args26102.length;
  switch(G__26104) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26102.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4655__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var x_SINGLEQUOTE_ = temp__4655__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__26109 = x_SINGLEQUOTE_;
              x__$1 = G__26109;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__26110 = x__$1;
      var G__26111 = k;
      var G__26112 = level - 1;
      var G__26113 = update;
      x = G__26110;
      k = G__26111;
      level = G__26112;
      update = G__26113;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_26114 = self__.level + 1;
      while (true) {
        if (i_26114 <= new_level + 1) {
          update[i_26114] = self__.header;
          var G__26115 = i_26114 + 1;
          i_26114 = G__26115;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_26116 = 0;
    while (true) {
      if (i_26116 <= self__.level) {
        var links_26117 = update[i_26116].forward;
        if (links_26117[i_26116] === x__$1) {
          links_26117[i_26116] = x__$1.forward[i_26116];
          var G__26118 = i_26116 + 1;
          i_26116 = G__26118;
          continue;
        } else {
          var G__26119 = i_26116 + 1;
          i_26116 = G__26119;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__26120 = x_SINGLEQUOTE_;
              x__$1 = G__26120;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__26121 = nx;
        var G__26122 = level__$1 - 1;
        x = G__26121;
        level__$1 = G__26122;
        continue;
      } else {
        var G__26123 = x;
        var G__26124 = level__$1 - 1;
        x = G__26123;
        level__$1 = G__26124;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__26125 = x_SINGLEQUOTE_;
              x__$1 = G__26125;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__26126 = nx;
        var G__26127 = level__$1 - 1;
        x = G__26126;
        level__$1 = G__26127;
        continue;
      } else {
        var G__26128 = x;
        var G__26129 = level__$1 - 1;
        x = G__26128;
        level__$1 = G__26129;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__4685__auto__ = cljs.core.truth_(function() {
    var and__4673__auto__ = me;
    if (cljs.core.truth_(and__4673__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__4673__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__4685__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__4685__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(var_args) {
  var args26185 = [];
  var len__5743__auto___26191 = arguments.length;
  var i__5744__auto___26192 = 0;
  while (true) {
    if (i__5744__auto___26192 < len__5743__auto___26191) {
      args26185.push(arguments[i__5744__auto___26192]);
      var G__26193 = i__5744__auto___26192 + 1;
      i__5744__auto___26192 = G__26193;
      continue;
    } else {
    }
    break;
  }
  var G__26187 = args26185.length;
  switch(G__26187) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26185.length)].join(""));;
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.async.fn_handler.call(null, f, true);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(f, blockable) {
  if (typeof cljs.core.async.t_cljs$core$async26188 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async26188 = function(f, blockable, meta26189) {
      this.f = f;
      this.blockable = blockable;
      this.meta26189 = meta26189;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async26188.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26190, meta26189__$1) {
      var self__ = this;
      var _26190__$1 = this;
      return new cljs.core.async.t_cljs$core$async26188(self__.f, self__.blockable, meta26189__$1);
    };
    cljs.core.async.t_cljs$core$async26188.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26190) {
      var self__ = this;
      var _26190__$1 = this;
      return self__.meta26189;
    };
    cljs.core.async.t_cljs$core$async26188.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async26188.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async26188.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.blockable;
    };
    cljs.core.async.t_cljs$core$async26188.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async26188.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta26189", "meta26189", -27392496, null)], null);
    };
    cljs.core.async.t_cljs$core$async26188.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async26188.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async26188";
    cljs.core.async.t_cljs$core$async26188.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async26188");
    };
    cljs.core.async.__GT_t_cljs$core$async26188 = function cljs$core$async$__GT_t_cljs$core$async26188(f__$1, blockable__$1, meta26189) {
      return new cljs.core.async.t_cljs$core$async26188(f__$1, blockable__$1, meta26189);
    };
  }
  return new cljs.core.async.t_cljs$core$async26188(f, blockable, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var args26197 = [];
  var len__5743__auto___26200 = arguments.length;
  var i__5744__auto___26201 = 0;
  while (true) {
    if (i__5744__auto___26201 < len__5743__auto___26200) {
      args26197.push(arguments[i__5744__auto___26201]);
      var G__26202 = i__5744__auto___26201 + 1;
      i__5744__auto___26201 = G__26202;
      continue;
    } else {
    }
    break;
  }
  var G__26199 = args26197.length;
  switch(G__26199) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26197.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function cljs$core$async$promise_chan(var_args) {
  var args26204 = [];
  var len__5743__auto___26207 = arguments.length;
  var i__5744__auto___26208 = 0;
  while (true) {
    if (i__5744__auto___26208 < len__5743__auto___26207) {
      args26204.push(arguments[i__5744__auto___26208]);
      var G__26209 = i__5744__auto___26208 + 1;
      i__5744__auto___26208 = G__26209;
      continue;
    } else {
    }
    break;
  }
  var G__26206 = args26204.length;
  switch(G__26206) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26204.length)].join(""));;
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(xform) {
  return cljs.core.async.promise_chan.call(null, xform, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(xform, ex_handler) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), xform, ex_handler);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var args26211 = [];
  var len__5743__auto___26214 = arguments.length;
  var i__5744__auto___26215 = 0;
  while (true) {
    if (i__5744__auto___26215 < len__5743__auto___26214) {
      args26211.push(arguments[i__5744__auto___26215]);
      var G__26216 = i__5744__auto___26215 + 1;
      i__5744__auto___26215 = G__26216;
      continue;
    } else {
    }
    break;
  }
  var G__26213 = args26211.length;
  switch(G__26213) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26211.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_26218 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_26218);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_26218, ret) {
        return function() {
          return fn1.call(null, val_26218);
        };
      }(val_26218, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var args26219 = [];
  var len__5743__auto___26222 = arguments.length;
  var i__5744__auto___26223 = 0;
  while (true) {
    if (i__5744__auto___26223 < len__5743__auto___26222) {
      args26219.push(arguments[i__5744__auto___26223]);
      var G__26224 = i__5744__auto___26223 + 1;
      i__5744__auto___26223 = G__26224;
      continue;
    } else {
    }
    break;
  }
  var G__26221 = args26219.length;
  switch(G__26221) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26219.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ret = temp__4655__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var retb = temp__4655__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4655__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4655__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__5588__auto___26226 = n;
  var x_26227 = 0;
  while (true) {
    if (x_26227 < n__5588__auto___26226) {
      a[x_26227] = 0;
      var G__26228 = x_26227 + 1;
      x_26227 = G__26228;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__26229 = i + 1;
      i = G__26229;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t_cljs$core$async26233 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async26233 = function(alt_flag, flag, meta26234) {
      this.alt_flag = alt_flag;
      this.flag = flag;
      this.meta26234 = meta26234;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async26233.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_26235, meta26234__$1) {
        var self__ = this;
        var _26235__$1 = this;
        return new cljs.core.async.t_cljs$core$async26233(self__.alt_flag, self__.flag, meta26234__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26233.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_26235) {
        var self__ = this;
        var _26235__$1 = this;
        return self__.meta26234;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26233.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async26233.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26233.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26233.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26233.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
        new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta26234", "meta26234", 1641326419, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26233.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async26233.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async26233";
    cljs.core.async.t_cljs$core$async26233.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
        return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async26233");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async26233 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async26233(alt_flag__$1, flag__$1, meta26234) {
        return new cljs.core.async.t_cljs$core$async26233(alt_flag__$1, flag__$1, meta26234);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async26233(cljs$core$async$alt_flag, flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t_cljs$core$async26239 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async26239 = function(alt_handler, flag, cb, meta26240) {
      this.alt_handler = alt_handler;
      this.flag = flag;
      this.cb = cb;
      this.meta26240 = meta26240;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async26239.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26241, meta26240__$1) {
      var self__ = this;
      var _26241__$1 = this;
      return new cljs.core.async.t_cljs$core$async26239(self__.alt_handler, self__.flag, self__.cb, meta26240__$1);
    };
    cljs.core.async.t_cljs$core$async26239.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26241) {
      var self__ = this;
      var _26241__$1 = this;
      return self__.meta26240;
    };
    cljs.core.async.t_cljs$core$async26239.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async26239.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async26239.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async26239.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async26239.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta26240", "meta26240", -1859451879, null)], null);
    };
    cljs.core.async.t_cljs$core$async26239.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async26239.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async26239";
    cljs.core.async.t_cljs$core$async26239.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async26239");
    };
    cljs.core.async.__GT_t_cljs$core$async26239 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async26239(alt_handler__$1, flag__$1, cb__$1, meta26240) {
      return new cljs.core.async.t_cljs$core$async26239(alt_handler__$1, flag__$1, cb__$1, meta26240);
    };
  }
  return new cljs.core.async.t_cljs$core$async26239(cljs$core$async$alt_handler, flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__26242_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__26242_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__26243_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__26243_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__4685__auto__ = wport;
            if (cljs.core.truth_(or__4685__auto__)) {
              return or__4685__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__26244 = i + 1;
          i = G__26244;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__4685__auto__ = ret;
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4657__auto__ = function() {
        var and__4673__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__4673__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__4673__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4657__auto__)) {
        var got = temp__4657__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___26250 = arguments.length;
  var i__5744__auto___26251 = 0;
  while (true) {
    if (i__5744__auto___26251 < len__5743__auto___26250) {
      args__5750__auto__.push(arguments[i__5744__auto___26251]);
      var G__26252 = i__5744__auto___26251 + 1;
      i__5744__auto___26251 = G__26252;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__26247) {
  var map__26248 = p__26247;
  var map__26248__$1 = (!(map__26248 == null) ? map__26248.cljs$lang$protocol_mask$partition0$ & 64 || map__26248.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26248) : map__26248;
  var opts = map__26248__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq26245) {
  var G__26246 = cljs.core.first.call(null, seq26245);
  var seq26245__$1 = cljs.core.next.call(null, seq26245);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26246, seq26245__$1);
};
cljs.core.async.offer_BANG_ = function cljs$core$async$offer_BANG_(port, val) {
  var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.poll_BANG_ = function cljs$core$async$poll_BANG_(port) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var args26253 = [];
  var len__5743__auto___26303 = arguments.length;
  var i__5744__auto___26304 = 0;
  while (true) {
    if (i__5744__auto___26304 < len__5743__auto___26303) {
      args26253.push(arguments[i__5744__auto___26304]);
      var G__26305 = i__5744__auto___26304 + 1;
      i__5744__auto___26304 = G__26305;
      continue;
    } else {
    }
    break;
  }
  var G__26255 = args26253.length;
  switch(G__26255) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26253.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__26140__auto___26307 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___26307) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___26307) {
          return function(state_26279) {
            var state_val_26280 = state_26279[1];
            if (state_val_26280 === 7) {
              var inst_26275 = state_26279[2];
              var state_26279__$1 = state_26279;
              var statearr_26281_26308 = state_26279__$1;
              statearr_26281_26308[2] = inst_26275;
              statearr_26281_26308[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26280 === 1) {
                var state_26279__$1 = state_26279;
                var statearr_26282_26309 = state_26279__$1;
                statearr_26282_26309[2] = null;
                statearr_26282_26309[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26280 === 4) {
                  var inst_26258 = state_26279[7];
                  var inst_26258__$1 = state_26279[2];
                  var inst_26259 = inst_26258__$1 == null;
                  var state_26279__$1 = function() {
                    var statearr_26283 = state_26279;
                    statearr_26283[7] = inst_26258__$1;
                    return statearr_26283;
                  }();
                  if (cljs.core.truth_(inst_26259)) {
                    var statearr_26284_26310 = state_26279__$1;
                    statearr_26284_26310[1] = 5;
                  } else {
                    var statearr_26285_26311 = state_26279__$1;
                    statearr_26285_26311[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26280 === 13) {
                    var state_26279__$1 = state_26279;
                    var statearr_26286_26312 = state_26279__$1;
                    statearr_26286_26312[2] = null;
                    statearr_26286_26312[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26280 === 6) {
                      var inst_26258 = state_26279[7];
                      var state_26279__$1 = state_26279;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26279__$1, 11, to, inst_26258);
                    } else {
                      if (state_val_26280 === 3) {
                        var inst_26277 = state_26279[2];
                        var state_26279__$1 = state_26279;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26279__$1, inst_26277);
                      } else {
                        if (state_val_26280 === 12) {
                          var state_26279__$1 = state_26279;
                          var statearr_26287_26313 = state_26279__$1;
                          statearr_26287_26313[2] = null;
                          statearr_26287_26313[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26280 === 2) {
                            var state_26279__$1 = state_26279;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26279__$1, 4, from);
                          } else {
                            if (state_val_26280 === 11) {
                              var inst_26268 = state_26279[2];
                              var state_26279__$1 = state_26279;
                              if (cljs.core.truth_(inst_26268)) {
                                var statearr_26288_26314 = state_26279__$1;
                                statearr_26288_26314[1] = 12;
                              } else {
                                var statearr_26289_26315 = state_26279__$1;
                                statearr_26289_26315[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26280 === 9) {
                                var state_26279__$1 = state_26279;
                                var statearr_26290_26316 = state_26279__$1;
                                statearr_26290_26316[2] = null;
                                statearr_26290_26316[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26280 === 5) {
                                  var state_26279__$1 = state_26279;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_26291_26317 = state_26279__$1;
                                    statearr_26291_26317[1] = 8;
                                  } else {
                                    var statearr_26292_26318 = state_26279__$1;
                                    statearr_26292_26318[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26280 === 14) {
                                    var inst_26273 = state_26279[2];
                                    var state_26279__$1 = state_26279;
                                    var statearr_26293_26319 = state_26279__$1;
                                    statearr_26293_26319[2] = inst_26273;
                                    statearr_26293_26319[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_26280 === 10) {
                                      var inst_26265 = state_26279[2];
                                      var state_26279__$1 = state_26279;
                                      var statearr_26294_26320 = state_26279__$1;
                                      statearr_26294_26320[2] = inst_26265;
                                      statearr_26294_26320[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_26280 === 8) {
                                        var inst_26262 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_26279__$1 = state_26279;
                                        var statearr_26295_26321 = state_26279__$1;
                                        statearr_26295_26321[2] = inst_26262;
                                        statearr_26295_26321[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___26307);
        return function(switch__26028__auto__, c__26140__auto___26307) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_26299 = [null, null, null, null, null, null, null, null];
              statearr_26299[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_26299[1] = 1;
              return statearr_26299;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_26279) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_26279);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e26300) {
                    if (e26300 instanceof Object) {
                      var ex__26032__auto__ = e26300;
                      var statearr_26301_26322 = state_26279;
                      statearr_26301_26322[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26279);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26300;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26323 = state_26279;
                  state_26279 = G__26323;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_26279) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_26279);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___26307);
      }();
      var state__26142__auto__ = function() {
        var statearr_26302 = f__26141__auto__.call(null);
        statearr_26302[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___26307;
        return statearr_26302;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___26307));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__26507) {
      var vec__26508 = p__26507;
      var v = cljs.core.nth.call(null, vec__26508, 0, null);
      var p = cljs.core.nth.call(null, vec__26508, 1, null);
      var job = vec__26508;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__26140__auto___26690 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___26690, res, vec__26508, v, p, job, jobs, results) {
          return function() {
            var f__26141__auto__ = function() {
              var switch__26028__auto__ = function(c__26140__auto___26690, res, vec__26508, v, p, job, jobs, results) {
                return function(state_26513) {
                  var state_val_26514 = state_26513[1];
                  if (state_val_26514 === 1) {
                    var state_26513__$1 = state_26513;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26513__$1, 2, res, v);
                  } else {
                    if (state_val_26514 === 2) {
                      var inst_26510 = state_26513[2];
                      var inst_26511 = cljs.core.async.close_BANG_.call(null, res);
                      var state_26513__$1 = function() {
                        var statearr_26515 = state_26513;
                        statearr_26515[7] = inst_26510;
                        return statearr_26515;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26513__$1, inst_26511);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__26140__auto___26690, res, vec__26508, v, p, job, jobs, results);
              return function(switch__26028__auto__, c__26140__auto___26690, res, vec__26508, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0 = function() {
                    var statearr_26519 = [null, null, null, null, null, null, null, null];
                    statearr_26519[0] = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
                    statearr_26519[1] = 1;
                    return statearr_26519;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1 = function(state_26513) {
                    while (true) {
                      var ret_value__26030__auto__ = function() {
                        try {
                          while (true) {
                            var result__26031__auto__ = switch__26028__auto__.call(null, state_26513);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__26031__auto__;
                            }
                            break;
                          }
                        } catch (e26520) {
                          if (e26520 instanceof Object) {
                            var ex__26032__auto__ = e26520;
                            var statearr_26521_26691 = state_26513;
                            statearr_26521_26691[5] = ex__26032__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26513);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e26520;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__26692 = state_26513;
                        state_26513 = G__26692;
                        continue;
                      } else {
                        return ret_value__26030__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = function(state_26513) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1.call(this, state_26513);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
                }();
              }(switch__26028__auto__, c__26140__auto___26690, res, vec__26508, v, p, job, jobs, results);
            }();
            var state__26142__auto__ = function() {
              var statearr_26522 = f__26141__auto__.call(null);
              statearr_26522[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___26690;
              return statearr_26522;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
          };
        }(c__26140__auto___26690, res, vec__26508, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__26523) {
      var vec__26524 = p__26523;
      var v = cljs.core.nth.call(null, vec__26524, 0, null);
      var p = cljs.core.nth.call(null, vec__26524, 1, null);
      var job = vec__26524;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__5588__auto___26693 = n;
  var __26694 = 0;
  while (true) {
    if (__26694 < n__5588__auto___26693) {
      var G__26525_26695 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__26525_26695) {
        case "compute":
          var c__26140__auto___26697 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__26694, c__26140__auto___26697, G__26525_26695, n__5588__auto___26693, jobs, results, process, async) {
            return function() {
              var f__26141__auto__ = function() {
                var switch__26028__auto__ = function(__26694, c__26140__auto___26697, G__26525_26695, n__5588__auto___26693, jobs, results, process, async) {
                  return function(state_26538) {
                    var state_val_26539 = state_26538[1];
                    if (state_val_26539 === 1) {
                      var state_26538__$1 = state_26538;
                      var statearr_26540_26698 = state_26538__$1;
                      statearr_26540_26698[2] = null;
                      statearr_26540_26698[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26539 === 2) {
                        var state_26538__$1 = state_26538;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26538__$1, 4, jobs);
                      } else {
                        if (state_val_26539 === 3) {
                          var inst_26536 = state_26538[2];
                          var state_26538__$1 = state_26538;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26538__$1, inst_26536);
                        } else {
                          if (state_val_26539 === 4) {
                            var inst_26528 = state_26538[2];
                            var inst_26529 = process.call(null, inst_26528);
                            var state_26538__$1 = state_26538;
                            if (cljs.core.truth_(inst_26529)) {
                              var statearr_26541_26699 = state_26538__$1;
                              statearr_26541_26699[1] = 5;
                            } else {
                              var statearr_26542_26700 = state_26538__$1;
                              statearr_26542_26700[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26539 === 5) {
                              var state_26538__$1 = state_26538;
                              var statearr_26543_26701 = state_26538__$1;
                              statearr_26543_26701[2] = null;
                              statearr_26543_26701[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26539 === 6) {
                                var state_26538__$1 = state_26538;
                                var statearr_26544_26702 = state_26538__$1;
                                statearr_26544_26702[2] = null;
                                statearr_26544_26702[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26539 === 7) {
                                  var inst_26534 = state_26538[2];
                                  var state_26538__$1 = state_26538;
                                  var statearr_26545_26703 = state_26538__$1;
                                  statearr_26545_26703[2] = inst_26534;
                                  statearr_26545_26703[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__26694, c__26140__auto___26697, G__26525_26695, n__5588__auto___26693, jobs, results, process, async);
                return function(__26694, switch__26028__auto__, c__26140__auto___26697, G__26525_26695, n__5588__auto___26693, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0 = function() {
                      var statearr_26549 = [null, null, null, null, null, null, null];
                      statearr_26549[0] = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
                      statearr_26549[1] = 1;
                      return statearr_26549;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1 = function(state_26538) {
                      while (true) {
                        var ret_value__26030__auto__ = function() {
                          try {
                            while (true) {
                              var result__26031__auto__ = switch__26028__auto__.call(null, state_26538);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__26031__auto__;
                              }
                              break;
                            }
                          } catch (e26550) {
                            if (e26550 instanceof Object) {
                              var ex__26032__auto__ = e26550;
                              var statearr_26551_26704 = state_26538;
                              statearr_26551_26704[5] = ex__26032__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26538);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e26550;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__26705 = state_26538;
                          state_26538 = G__26705;
                          continue;
                        } else {
                          return ret_value__26030__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = function(state_26538) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1.call(this, state_26538);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
                  }();
                }(__26694, switch__26028__auto__, c__26140__auto___26697, G__26525_26695, n__5588__auto___26693, jobs, results, process, async);
              }();
              var state__26142__auto__ = function() {
                var statearr_26552 = f__26141__auto__.call(null);
                statearr_26552[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___26697;
                return statearr_26552;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
            };
          }(__26694, c__26140__auto___26697, G__26525_26695, n__5588__auto___26693, jobs, results, process, async));
          break;
        case "async":
          var c__26140__auto___26706 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__26694, c__26140__auto___26706, G__26525_26695, n__5588__auto___26693, jobs, results, process, async) {
            return function() {
              var f__26141__auto__ = function() {
                var switch__26028__auto__ = function(__26694, c__26140__auto___26706, G__26525_26695, n__5588__auto___26693, jobs, results, process, async) {
                  return function(state_26565) {
                    var state_val_26566 = state_26565[1];
                    if (state_val_26566 === 1) {
                      var state_26565__$1 = state_26565;
                      var statearr_26567_26707 = state_26565__$1;
                      statearr_26567_26707[2] = null;
                      statearr_26567_26707[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26566 === 2) {
                        var state_26565__$1 = state_26565;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26565__$1, 4, jobs);
                      } else {
                        if (state_val_26566 === 3) {
                          var inst_26563 = state_26565[2];
                          var state_26565__$1 = state_26565;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26565__$1, inst_26563);
                        } else {
                          if (state_val_26566 === 4) {
                            var inst_26555 = state_26565[2];
                            var inst_26556 = async.call(null, inst_26555);
                            var state_26565__$1 = state_26565;
                            if (cljs.core.truth_(inst_26556)) {
                              var statearr_26568_26708 = state_26565__$1;
                              statearr_26568_26708[1] = 5;
                            } else {
                              var statearr_26569_26709 = state_26565__$1;
                              statearr_26569_26709[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26566 === 5) {
                              var state_26565__$1 = state_26565;
                              var statearr_26570_26710 = state_26565__$1;
                              statearr_26570_26710[2] = null;
                              statearr_26570_26710[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26566 === 6) {
                                var state_26565__$1 = state_26565;
                                var statearr_26571_26711 = state_26565__$1;
                                statearr_26571_26711[2] = null;
                                statearr_26571_26711[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26566 === 7) {
                                  var inst_26561 = state_26565[2];
                                  var state_26565__$1 = state_26565;
                                  var statearr_26572_26712 = state_26565__$1;
                                  statearr_26572_26712[2] = inst_26561;
                                  statearr_26572_26712[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__26694, c__26140__auto___26706, G__26525_26695, n__5588__auto___26693, jobs, results, process, async);
                return function(__26694, switch__26028__auto__, c__26140__auto___26706, G__26525_26695, n__5588__auto___26693, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0 = function() {
                      var statearr_26576 = [null, null, null, null, null, null, null];
                      statearr_26576[0] = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
                      statearr_26576[1] = 1;
                      return statearr_26576;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1 = function(state_26565) {
                      while (true) {
                        var ret_value__26030__auto__ = function() {
                          try {
                            while (true) {
                              var result__26031__auto__ = switch__26028__auto__.call(null, state_26565);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__26031__auto__;
                              }
                              break;
                            }
                          } catch (e26577) {
                            if (e26577 instanceof Object) {
                              var ex__26032__auto__ = e26577;
                              var statearr_26578_26713 = state_26565;
                              statearr_26578_26713[5] = ex__26032__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26565);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e26577;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__26714 = state_26565;
                          state_26565 = G__26714;
                          continue;
                        } else {
                          return ret_value__26030__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = function(state_26565) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1.call(this, state_26565);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
                  }();
                }(__26694, switch__26028__auto__, c__26140__auto___26706, G__26525_26695, n__5588__auto___26693, jobs, results, process, async);
              }();
              var state__26142__auto__ = function() {
                var statearr_26579 = f__26141__auto__.call(null);
                statearr_26579[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___26706;
                return statearr_26579;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
            };
          }(__26694, c__26140__auto___26706, G__26525_26695, n__5588__auto___26693, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__26715 = __26694 + 1;
      __26694 = G__26715;
      continue;
    } else {
    }
    break;
  }
  var c__26140__auto___26716 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___26716, jobs, results, process, async) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___26716, jobs, results, process, async) {
          return function(state_26601) {
            var state_val_26602 = state_26601[1];
            if (state_val_26602 === 1) {
              var state_26601__$1 = state_26601;
              var statearr_26603_26717 = state_26601__$1;
              statearr_26603_26717[2] = null;
              statearr_26603_26717[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26602 === 2) {
                var state_26601__$1 = state_26601;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26601__$1, 4, from);
              } else {
                if (state_val_26602 === 3) {
                  var inst_26599 = state_26601[2];
                  var state_26601__$1 = state_26601;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26601__$1, inst_26599);
                } else {
                  if (state_val_26602 === 4) {
                    var inst_26582 = state_26601[7];
                    var inst_26582__$1 = state_26601[2];
                    var inst_26583 = inst_26582__$1 == null;
                    var state_26601__$1 = function() {
                      var statearr_26604 = state_26601;
                      statearr_26604[7] = inst_26582__$1;
                      return statearr_26604;
                    }();
                    if (cljs.core.truth_(inst_26583)) {
                      var statearr_26605_26718 = state_26601__$1;
                      statearr_26605_26718[1] = 5;
                    } else {
                      var statearr_26606_26719 = state_26601__$1;
                      statearr_26606_26719[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26602 === 5) {
                      var inst_26585 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_26601__$1 = state_26601;
                      var statearr_26607_26720 = state_26601__$1;
                      statearr_26607_26720[2] = inst_26585;
                      statearr_26607_26720[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26602 === 6) {
                        var inst_26587 = state_26601[8];
                        var inst_26582 = state_26601[7];
                        var inst_26587__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_26588 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_26589 = [inst_26582, inst_26587__$1];
                        var inst_26590 = new cljs.core.PersistentVector(null, 2, 5, inst_26588, inst_26589, null);
                        var state_26601__$1 = function() {
                          var statearr_26608 = state_26601;
                          statearr_26608[8] = inst_26587__$1;
                          return statearr_26608;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26601__$1, 8, jobs, inst_26590);
                      } else {
                        if (state_val_26602 === 7) {
                          var inst_26597 = state_26601[2];
                          var state_26601__$1 = state_26601;
                          var statearr_26609_26721 = state_26601__$1;
                          statearr_26609_26721[2] = inst_26597;
                          statearr_26609_26721[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26602 === 8) {
                            var inst_26587 = state_26601[8];
                            var inst_26592 = state_26601[2];
                            var state_26601__$1 = function() {
                              var statearr_26610 = state_26601;
                              statearr_26610[9] = inst_26592;
                              return statearr_26610;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26601__$1, 9, results, inst_26587);
                          } else {
                            if (state_val_26602 === 9) {
                              var inst_26594 = state_26601[2];
                              var state_26601__$1 = function() {
                                var statearr_26611 = state_26601;
                                statearr_26611[10] = inst_26594;
                                return statearr_26611;
                              }();
                              var statearr_26612_26722 = state_26601__$1;
                              statearr_26612_26722[2] = null;
                              statearr_26612_26722[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___26716, jobs, results, process, async);
        return function(switch__26028__auto__, c__26140__auto___26716, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0 = function() {
              var statearr_26616 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_26616[0] = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
              statearr_26616[1] = 1;
              return statearr_26616;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1 = function(state_26601) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_26601);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e26617) {
                    if (e26617 instanceof Object) {
                      var ex__26032__auto__ = e26617;
                      var statearr_26618_26723 = state_26601;
                      statearr_26618_26723[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26601);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26617;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26724 = state_26601;
                  state_26601 = G__26724;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = function(state_26601) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1.call(this, state_26601);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___26716, jobs, results, process, async);
      }();
      var state__26142__auto__ = function() {
        var statearr_26619 = f__26141__auto__.call(null);
        statearr_26619[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___26716;
        return statearr_26619;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___26716, jobs, results, process, async));
  var c__26140__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto__, jobs, results, process, async) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto__, jobs, results, process, async) {
          return function(state_26657) {
            var state_val_26658 = state_26657[1];
            if (state_val_26658 === 7) {
              var inst_26653 = state_26657[2];
              var state_26657__$1 = state_26657;
              var statearr_26659_26725 = state_26657__$1;
              statearr_26659_26725[2] = inst_26653;
              statearr_26659_26725[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26658 === 20) {
                var state_26657__$1 = state_26657;
                var statearr_26660_26726 = state_26657__$1;
                statearr_26660_26726[2] = null;
                statearr_26660_26726[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26658 === 1) {
                  var state_26657__$1 = state_26657;
                  var statearr_26661_26727 = state_26657__$1;
                  statearr_26661_26727[2] = null;
                  statearr_26661_26727[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26658 === 4) {
                    var inst_26622 = state_26657[7];
                    var inst_26622__$1 = state_26657[2];
                    var inst_26623 = inst_26622__$1 == null;
                    var state_26657__$1 = function() {
                      var statearr_26662 = state_26657;
                      statearr_26662[7] = inst_26622__$1;
                      return statearr_26662;
                    }();
                    if (cljs.core.truth_(inst_26623)) {
                      var statearr_26663_26728 = state_26657__$1;
                      statearr_26663_26728[1] = 5;
                    } else {
                      var statearr_26664_26729 = state_26657__$1;
                      statearr_26664_26729[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26658 === 15) {
                      var inst_26635 = state_26657[8];
                      var state_26657__$1 = state_26657;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26657__$1, 18, to, inst_26635);
                    } else {
                      if (state_val_26658 === 21) {
                        var inst_26648 = state_26657[2];
                        var state_26657__$1 = state_26657;
                        var statearr_26665_26730 = state_26657__$1;
                        statearr_26665_26730[2] = inst_26648;
                        statearr_26665_26730[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_26658 === 13) {
                          var inst_26650 = state_26657[2];
                          var state_26657__$1 = function() {
                            var statearr_26666 = state_26657;
                            statearr_26666[9] = inst_26650;
                            return statearr_26666;
                          }();
                          var statearr_26667_26731 = state_26657__$1;
                          statearr_26667_26731[2] = null;
                          statearr_26667_26731[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26658 === 6) {
                            var inst_26622 = state_26657[7];
                            var state_26657__$1 = state_26657;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26657__$1, 11, inst_26622);
                          } else {
                            if (state_val_26658 === 17) {
                              var inst_26643 = state_26657[2];
                              var state_26657__$1 = state_26657;
                              if (cljs.core.truth_(inst_26643)) {
                                var statearr_26668_26732 = state_26657__$1;
                                statearr_26668_26732[1] = 19;
                              } else {
                                var statearr_26669_26733 = state_26657__$1;
                                statearr_26669_26733[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26658 === 3) {
                                var inst_26655 = state_26657[2];
                                var state_26657__$1 = state_26657;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26657__$1, inst_26655);
                              } else {
                                if (state_val_26658 === 12) {
                                  var inst_26632 = state_26657[10];
                                  var state_26657__$1 = state_26657;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26657__$1, 14, inst_26632);
                                } else {
                                  if (state_val_26658 === 2) {
                                    var state_26657__$1 = state_26657;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26657__$1, 4, results);
                                  } else {
                                    if (state_val_26658 === 19) {
                                      var state_26657__$1 = state_26657;
                                      var statearr_26670_26734 = state_26657__$1;
                                      statearr_26670_26734[2] = null;
                                      statearr_26670_26734[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_26658 === 11) {
                                        var inst_26632 = state_26657[2];
                                        var state_26657__$1 = function() {
                                          var statearr_26671 = state_26657;
                                          statearr_26671[10] = inst_26632;
                                          return statearr_26671;
                                        }();
                                        var statearr_26672_26735 = state_26657__$1;
                                        statearr_26672_26735[2] = null;
                                        statearr_26672_26735[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_26658 === 9) {
                                          var state_26657__$1 = state_26657;
                                          var statearr_26673_26736 = state_26657__$1;
                                          statearr_26673_26736[2] = null;
                                          statearr_26673_26736[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_26658 === 5) {
                                            var state_26657__$1 = state_26657;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_26674_26737 = state_26657__$1;
                                              statearr_26674_26737[1] = 8;
                                            } else {
                                              var statearr_26675_26738 = state_26657__$1;
                                              statearr_26675_26738[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_26658 === 14) {
                                              var inst_26637 = state_26657[11];
                                              var inst_26635 = state_26657[8];
                                              var inst_26635__$1 = state_26657[2];
                                              var inst_26636 = inst_26635__$1 == null;
                                              var inst_26637__$1 = cljs.core.not.call(null, inst_26636);
                                              var state_26657__$1 = function() {
                                                var statearr_26676 = state_26657;
                                                statearr_26676[11] = inst_26637__$1;
                                                statearr_26676[8] = inst_26635__$1;
                                                return statearr_26676;
                                              }();
                                              if (inst_26637__$1) {
                                                var statearr_26677_26739 = state_26657__$1;
                                                statearr_26677_26739[1] = 15;
                                              } else {
                                                var statearr_26678_26740 = state_26657__$1;
                                                statearr_26678_26740[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_26658 === 16) {
                                                var inst_26637 = state_26657[11];
                                                var state_26657__$1 = state_26657;
                                                var statearr_26679_26741 = state_26657__$1;
                                                statearr_26679_26741[2] = inst_26637;
                                                statearr_26679_26741[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_26658 === 10) {
                                                  var inst_26629 = state_26657[2];
                                                  var state_26657__$1 = state_26657;
                                                  var statearr_26680_26742 = state_26657__$1;
                                                  statearr_26680_26742[2] = inst_26629;
                                                  statearr_26680_26742[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_26658 === 18) {
                                                    var inst_26640 = state_26657[2];
                                                    var state_26657__$1 = state_26657;
                                                    var statearr_26681_26743 = state_26657__$1;
                                                    statearr_26681_26743[2] = inst_26640;
                                                    statearr_26681_26743[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_26658 === 8) {
                                                      var inst_26626 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_26657__$1 = state_26657;
                                                      var statearr_26682_26744 = state_26657__$1;
                                                      statearr_26682_26744[2] = inst_26626;
                                                      statearr_26682_26744[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto__, jobs, results, process, async);
        return function(switch__26028__auto__, c__26140__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0 = function() {
              var statearr_26686 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26686[0] = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
              statearr_26686[1] = 1;
              return statearr_26686;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1 = function(state_26657) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_26657);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e26687) {
                    if (e26687 instanceof Object) {
                      var ex__26032__auto__ = e26687;
                      var statearr_26688_26745 = state_26657;
                      statearr_26688_26745[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26657);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26687;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26746 = state_26657;
                  state_26657 = G__26746;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__ = function(state_26657) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1.call(this, state_26657);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26029__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto__, jobs, results, process, async);
      }();
      var state__26142__auto__ = function() {
        var statearr_26689 = f__26141__auto__.call(null);
        statearr_26689[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto__;
        return statearr_26689;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto__, jobs, results, process, async));
  return c__26140__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var args26747 = [];
  var len__5743__auto___26750 = arguments.length;
  var i__5744__auto___26751 = 0;
  while (true) {
    if (i__5744__auto___26751 < len__5743__auto___26750) {
      args26747.push(arguments[i__5744__auto___26751]);
      var G__26752 = i__5744__auto___26751 + 1;
      i__5744__auto___26751 = G__26752;
      continue;
    } else {
    }
    break;
  }
  var G__26749 = args26747.length;
  switch(G__26749) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26747.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var args26754 = [];
  var len__5743__auto___26757 = arguments.length;
  var i__5744__auto___26758 = 0;
  while (true) {
    if (i__5744__auto___26758 < len__5743__auto___26757) {
      args26754.push(arguments[i__5744__auto___26758]);
      var G__26759 = i__5744__auto___26758 + 1;
      i__5744__auto___26758 = G__26759;
      continue;
    } else {
    }
    break;
  }
  var G__26756 = args26754.length;
  switch(G__26756) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26754.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var args26761 = [];
  var len__5743__auto___26814 = arguments.length;
  var i__5744__auto___26815 = 0;
  while (true) {
    if (i__5744__auto___26815 < len__5743__auto___26814) {
      args26761.push(arguments[i__5744__auto___26815]);
      var G__26816 = i__5744__auto___26815 + 1;
      i__5744__auto___26815 = G__26816;
      continue;
    } else {
    }
    break;
  }
  var G__26763 = args26761.length;
  switch(G__26763) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26761.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__26140__auto___26818 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___26818, tc, fc) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___26818, tc, fc) {
          return function(state_26789) {
            var state_val_26790 = state_26789[1];
            if (state_val_26790 === 7) {
              var inst_26785 = state_26789[2];
              var state_26789__$1 = state_26789;
              var statearr_26791_26819 = state_26789__$1;
              statearr_26791_26819[2] = inst_26785;
              statearr_26791_26819[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26790 === 1) {
                var state_26789__$1 = state_26789;
                var statearr_26792_26820 = state_26789__$1;
                statearr_26792_26820[2] = null;
                statearr_26792_26820[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26790 === 4) {
                  var inst_26766 = state_26789[7];
                  var inst_26766__$1 = state_26789[2];
                  var inst_26767 = inst_26766__$1 == null;
                  var state_26789__$1 = function() {
                    var statearr_26793 = state_26789;
                    statearr_26793[7] = inst_26766__$1;
                    return statearr_26793;
                  }();
                  if (cljs.core.truth_(inst_26767)) {
                    var statearr_26794_26821 = state_26789__$1;
                    statearr_26794_26821[1] = 5;
                  } else {
                    var statearr_26795_26822 = state_26789__$1;
                    statearr_26795_26822[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26790 === 13) {
                    var state_26789__$1 = state_26789;
                    var statearr_26796_26823 = state_26789__$1;
                    statearr_26796_26823[2] = null;
                    statearr_26796_26823[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26790 === 6) {
                      var inst_26766 = state_26789[7];
                      var inst_26772 = p.call(null, inst_26766);
                      var state_26789__$1 = state_26789;
                      if (cljs.core.truth_(inst_26772)) {
                        var statearr_26797_26824 = state_26789__$1;
                        statearr_26797_26824[1] = 9;
                      } else {
                        var statearr_26798_26825 = state_26789__$1;
                        statearr_26798_26825[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26790 === 3) {
                        var inst_26787 = state_26789[2];
                        var state_26789__$1 = state_26789;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26789__$1, inst_26787);
                      } else {
                        if (state_val_26790 === 12) {
                          var state_26789__$1 = state_26789;
                          var statearr_26799_26826 = state_26789__$1;
                          statearr_26799_26826[2] = null;
                          statearr_26799_26826[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26790 === 2) {
                            var state_26789__$1 = state_26789;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26789__$1, 4, ch);
                          } else {
                            if (state_val_26790 === 11) {
                              var inst_26766 = state_26789[7];
                              var inst_26776 = state_26789[2];
                              var state_26789__$1 = state_26789;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26789__$1, 8, inst_26776, inst_26766);
                            } else {
                              if (state_val_26790 === 9) {
                                var state_26789__$1 = state_26789;
                                var statearr_26800_26827 = state_26789__$1;
                                statearr_26800_26827[2] = tc;
                                statearr_26800_26827[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26790 === 5) {
                                  var inst_26769 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_26770 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_26789__$1 = function() {
                                    var statearr_26801 = state_26789;
                                    statearr_26801[8] = inst_26769;
                                    return statearr_26801;
                                  }();
                                  var statearr_26802_26828 = state_26789__$1;
                                  statearr_26802_26828[2] = inst_26770;
                                  statearr_26802_26828[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26790 === 14) {
                                    var inst_26783 = state_26789[2];
                                    var state_26789__$1 = state_26789;
                                    var statearr_26803_26829 = state_26789__$1;
                                    statearr_26803_26829[2] = inst_26783;
                                    statearr_26803_26829[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_26790 === 10) {
                                      var state_26789__$1 = state_26789;
                                      var statearr_26804_26830 = state_26789__$1;
                                      statearr_26804_26830[2] = fc;
                                      statearr_26804_26830[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_26790 === 8) {
                                        var inst_26778 = state_26789[2];
                                        var state_26789__$1 = state_26789;
                                        if (cljs.core.truth_(inst_26778)) {
                                          var statearr_26805_26831 = state_26789__$1;
                                          statearr_26805_26831[1] = 12;
                                        } else {
                                          var statearr_26806_26832 = state_26789__$1;
                                          statearr_26806_26832[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___26818, tc, fc);
        return function(switch__26028__auto__, c__26140__auto___26818, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_26810 = [null, null, null, null, null, null, null, null, null];
              statearr_26810[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_26810[1] = 1;
              return statearr_26810;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_26789) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_26789);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e26811) {
                    if (e26811 instanceof Object) {
                      var ex__26032__auto__ = e26811;
                      var statearr_26812_26833 = state_26789;
                      statearr_26812_26833[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26789);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26811;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26834 = state_26789;
                  state_26789 = G__26834;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_26789) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_26789);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___26818, tc, fc);
      }();
      var state__26142__auto__ = function() {
        var statearr_26813 = f__26141__auto__.call(null);
        statearr_26813[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___26818;
        return statearr_26813;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___26818, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__26140__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto__) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto__) {
          return function(state_26898) {
            var state_val_26899 = state_26898[1];
            if (state_val_26899 === 7) {
              var inst_26894 = state_26898[2];
              var state_26898__$1 = state_26898;
              var statearr_26900_26921 = state_26898__$1;
              statearr_26900_26921[2] = inst_26894;
              statearr_26900_26921[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26899 === 1) {
                var inst_26878 = init;
                var state_26898__$1 = function() {
                  var statearr_26901 = state_26898;
                  statearr_26901[7] = inst_26878;
                  return statearr_26901;
                }();
                var statearr_26902_26922 = state_26898__$1;
                statearr_26902_26922[2] = null;
                statearr_26902_26922[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26899 === 4) {
                  var inst_26881 = state_26898[8];
                  var inst_26881__$1 = state_26898[2];
                  var inst_26882 = inst_26881__$1 == null;
                  var state_26898__$1 = function() {
                    var statearr_26903 = state_26898;
                    statearr_26903[8] = inst_26881__$1;
                    return statearr_26903;
                  }();
                  if (cljs.core.truth_(inst_26882)) {
                    var statearr_26904_26923 = state_26898__$1;
                    statearr_26904_26923[1] = 5;
                  } else {
                    var statearr_26905_26924 = state_26898__$1;
                    statearr_26905_26924[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26899 === 6) {
                    var inst_26885 = state_26898[9];
                    var inst_26881 = state_26898[8];
                    var inst_26878 = state_26898[7];
                    var inst_26885__$1 = f.call(null, inst_26878, inst_26881);
                    var inst_26886 = cljs.core.reduced_QMARK_.call(null, inst_26885__$1);
                    var state_26898__$1 = function() {
                      var statearr_26906 = state_26898;
                      statearr_26906[9] = inst_26885__$1;
                      return statearr_26906;
                    }();
                    if (inst_26886) {
                      var statearr_26907_26925 = state_26898__$1;
                      statearr_26907_26925[1] = 8;
                    } else {
                      var statearr_26908_26926 = state_26898__$1;
                      statearr_26908_26926[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26899 === 3) {
                      var inst_26896 = state_26898[2];
                      var state_26898__$1 = state_26898;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26898__$1, inst_26896);
                    } else {
                      if (state_val_26899 === 2) {
                        var state_26898__$1 = state_26898;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26898__$1, 4, ch);
                      } else {
                        if (state_val_26899 === 9) {
                          var inst_26885 = state_26898[9];
                          var inst_26878 = inst_26885;
                          var state_26898__$1 = function() {
                            var statearr_26909 = state_26898;
                            statearr_26909[7] = inst_26878;
                            return statearr_26909;
                          }();
                          var statearr_26910_26927 = state_26898__$1;
                          statearr_26910_26927[2] = null;
                          statearr_26910_26927[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26899 === 5) {
                            var inst_26878 = state_26898[7];
                            var state_26898__$1 = state_26898;
                            var statearr_26911_26928 = state_26898__$1;
                            statearr_26911_26928[2] = inst_26878;
                            statearr_26911_26928[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26899 === 10) {
                              var inst_26892 = state_26898[2];
                              var state_26898__$1 = state_26898;
                              var statearr_26912_26929 = state_26898__$1;
                              statearr_26912_26929[2] = inst_26892;
                              statearr_26912_26929[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26899 === 8) {
                                var inst_26885 = state_26898[9];
                                var inst_26888 = cljs.core.deref.call(null, inst_26885);
                                var state_26898__$1 = state_26898;
                                var statearr_26913_26930 = state_26898__$1;
                                statearr_26913_26930[2] = inst_26888;
                                statearr_26913_26930[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto__);
        return function(switch__26028__auto__, c__26140__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__26029__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__26029__auto____0 = function() {
              var statearr_26917 = [null, null, null, null, null, null, null, null, null, null];
              statearr_26917[0] = cljs$core$async$reduce_$_state_machine__26029__auto__;
              statearr_26917[1] = 1;
              return statearr_26917;
            };
            var cljs$core$async$reduce_$_state_machine__26029__auto____1 = function(state_26898) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_26898);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e26918) {
                    if (e26918 instanceof Object) {
                      var ex__26032__auto__ = e26918;
                      var statearr_26919_26931 = state_26898;
                      statearr_26919_26931[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26898);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26918;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26932 = state_26898;
                  state_26898 = G__26932;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__26029__auto__ = function(state_26898) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__26029__auto____1.call(this, state_26898);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__26029__auto____0;
            cljs$core$async$reduce_$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__26029__auto____1;
            return cljs$core$async$reduce_$_state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto__);
      }();
      var state__26142__auto__ = function() {
        var statearr_26920 = f__26141__auto__.call(null);
        statearr_26920[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto__;
        return statearr_26920;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto__));
  return c__26140__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var args26933 = [];
  var len__5743__auto___26985 = arguments.length;
  var i__5744__auto___26986 = 0;
  while (true) {
    if (i__5744__auto___26986 < len__5743__auto___26985) {
      args26933.push(arguments[i__5744__auto___26986]);
      var G__26987 = i__5744__auto___26986 + 1;
      i__5744__auto___26986 = G__26987;
      continue;
    } else {
    }
    break;
  }
  var G__26935 = args26933.length;
  switch(G__26935) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26933.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__26140__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto__) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto__) {
          return function(state_26960) {
            var state_val_26961 = state_26960[1];
            if (state_val_26961 === 7) {
              var inst_26942 = state_26960[2];
              var state_26960__$1 = state_26960;
              var statearr_26962_26989 = state_26960__$1;
              statearr_26962_26989[2] = inst_26942;
              statearr_26962_26989[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26961 === 1) {
                var inst_26936 = cljs.core.seq.call(null, coll);
                var inst_26937 = inst_26936;
                var state_26960__$1 = function() {
                  var statearr_26963 = state_26960;
                  statearr_26963[7] = inst_26937;
                  return statearr_26963;
                }();
                var statearr_26964_26990 = state_26960__$1;
                statearr_26964_26990[2] = null;
                statearr_26964_26990[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26961 === 4) {
                  var inst_26937 = state_26960[7];
                  var inst_26940 = cljs.core.first.call(null, inst_26937);
                  var state_26960__$1 = state_26960;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26960__$1, 7, ch, inst_26940);
                } else {
                  if (state_val_26961 === 13) {
                    var inst_26954 = state_26960[2];
                    var state_26960__$1 = state_26960;
                    var statearr_26965_26991 = state_26960__$1;
                    statearr_26965_26991[2] = inst_26954;
                    statearr_26965_26991[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26961 === 6) {
                      var inst_26945 = state_26960[2];
                      var state_26960__$1 = state_26960;
                      if (cljs.core.truth_(inst_26945)) {
                        var statearr_26966_26992 = state_26960__$1;
                        statearr_26966_26992[1] = 8;
                      } else {
                        var statearr_26967_26993 = state_26960__$1;
                        statearr_26967_26993[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26961 === 3) {
                        var inst_26958 = state_26960[2];
                        var state_26960__$1 = state_26960;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26960__$1, inst_26958);
                      } else {
                        if (state_val_26961 === 12) {
                          var state_26960__$1 = state_26960;
                          var statearr_26968_26994 = state_26960__$1;
                          statearr_26968_26994[2] = null;
                          statearr_26968_26994[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26961 === 2) {
                            var inst_26937 = state_26960[7];
                            var state_26960__$1 = state_26960;
                            if (cljs.core.truth_(inst_26937)) {
                              var statearr_26969_26995 = state_26960__$1;
                              statearr_26969_26995[1] = 4;
                            } else {
                              var statearr_26970_26996 = state_26960__$1;
                              statearr_26970_26996[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26961 === 11) {
                              var inst_26951 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_26960__$1 = state_26960;
                              var statearr_26971_26997 = state_26960__$1;
                              statearr_26971_26997[2] = inst_26951;
                              statearr_26971_26997[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26961 === 9) {
                                var state_26960__$1 = state_26960;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_26972_26998 = state_26960__$1;
                                  statearr_26972_26998[1] = 11;
                                } else {
                                  var statearr_26973_26999 = state_26960__$1;
                                  statearr_26973_26999[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26961 === 5) {
                                  var inst_26937 = state_26960[7];
                                  var state_26960__$1 = state_26960;
                                  var statearr_26974_27000 = state_26960__$1;
                                  statearr_26974_27000[2] = inst_26937;
                                  statearr_26974_27000[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26961 === 10) {
                                    var inst_26956 = state_26960[2];
                                    var state_26960__$1 = state_26960;
                                    var statearr_26975_27001 = state_26960__$1;
                                    statearr_26975_27001[2] = inst_26956;
                                    statearr_26975_27001[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_26961 === 8) {
                                      var inst_26937 = state_26960[7];
                                      var inst_26947 = cljs.core.next.call(null, inst_26937);
                                      var inst_26937__$1 = inst_26947;
                                      var state_26960__$1 = function() {
                                        var statearr_26976 = state_26960;
                                        statearr_26976[7] = inst_26937__$1;
                                        return statearr_26976;
                                      }();
                                      var statearr_26977_27002 = state_26960__$1;
                                      statearr_26977_27002[2] = null;
                                      statearr_26977_27002[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto__);
        return function(switch__26028__auto__, c__26140__auto__) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_26981 = [null, null, null, null, null, null, null, null];
              statearr_26981[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_26981[1] = 1;
              return statearr_26981;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_26960) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_26960);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e26982) {
                    if (e26982 instanceof Object) {
                      var ex__26032__auto__ = e26982;
                      var statearr_26983_27003 = state_26960;
                      statearr_26983_27003[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26960);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26982;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__27004 = state_26960;
                  state_26960 = G__27004;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_26960) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_26960);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto__);
      }();
      var state__26142__auto__ = function() {
        var statearr_26984 = f__26141__auto__.call(null);
        statearr_26984[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto__;
        return statearr_26984;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto__));
  return c__26140__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__5340__auto__ = _ == null ? null : _;
    var m__5341__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, _);
    } else {
      var m__5341__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__5340__auto__ = m == null ? null : m;
    var m__5341__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__5341__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__5340__auto__ = m == null ? null : m;
    var m__5341__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, m, ch);
    } else {
      var m__5341__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__5340__auto__ = m == null ? null : m;
    var m__5341__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, m);
    } else {
      var m__5341__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async27226 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async27226 = function(mult, ch, cs, meta27227) {
        this.mult = mult;
        this.ch = ch;
        this.cs = cs;
        this.meta27227 = meta27227;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async27226.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_27228, meta27227__$1) {
          var self__ = this;
          var _27228__$1 = this;
          return new cljs.core.async.t_cljs$core$async27226(self__.mult, self__.ch, self__.cs, meta27227__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27226.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_27228) {
          var self__ = this;
          var _27228__$1 = this;
          return self__.meta27227;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27226.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async27226.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27226.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t_cljs$core$async27226.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27226.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27226.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27226.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", 
          "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
          null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta27227", "meta27227", -853501250, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27226.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async27226.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async27226";
      cljs.core.async.t_cljs$core$async27226.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
          return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async27226");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async27226 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async27226(mult__$1, ch__$1, cs__$1, meta27227) {
          return new cljs.core.async.t_cljs$core$async27226(mult__$1, ch__$1, cs__$1, meta27227);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async27226(cljs$core$async$mult, ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__26140__auto___27447 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___27447, cs, m, dchan, dctr, done) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___27447, cs, m, dchan, dctr, done) {
          return function(state_27359) {
            var state_val_27360 = state_27359[1];
            if (state_val_27360 === 7) {
              var inst_27355 = state_27359[2];
              var state_27359__$1 = state_27359;
              var statearr_27361_27448 = state_27359__$1;
              statearr_27361_27448[2] = inst_27355;
              statearr_27361_27448[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27360 === 20) {
                var inst_27260 = state_27359[7];
                var inst_27270 = cljs.core.first.call(null, inst_27260);
                var inst_27271 = cljs.core.nth.call(null, inst_27270, 0, null);
                var inst_27272 = cljs.core.nth.call(null, inst_27270, 1, null);
                var state_27359__$1 = function() {
                  var statearr_27362 = state_27359;
                  statearr_27362[8] = inst_27271;
                  return statearr_27362;
                }();
                if (cljs.core.truth_(inst_27272)) {
                  var statearr_27363_27449 = state_27359__$1;
                  statearr_27363_27449[1] = 22;
                } else {
                  var statearr_27364_27450 = state_27359__$1;
                  statearr_27364_27450[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27360 === 27) {
                  var inst_27307 = state_27359[9];
                  var inst_27302 = state_27359[10];
                  var inst_27300 = state_27359[11];
                  var inst_27231 = state_27359[12];
                  var inst_27307__$1 = cljs.core._nth.call(null, inst_27300, inst_27302);
                  var inst_27308 = cljs.core.async.put_BANG_.call(null, inst_27307__$1, inst_27231, done);
                  var state_27359__$1 = function() {
                    var statearr_27365 = state_27359;
                    statearr_27365[9] = inst_27307__$1;
                    return statearr_27365;
                  }();
                  if (cljs.core.truth_(inst_27308)) {
                    var statearr_27366_27451 = state_27359__$1;
                    statearr_27366_27451[1] = 30;
                  } else {
                    var statearr_27367_27452 = state_27359__$1;
                    statearr_27367_27452[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_27360 === 1) {
                    var state_27359__$1 = state_27359;
                    var statearr_27368_27453 = state_27359__$1;
                    statearr_27368_27453[2] = null;
                    statearr_27368_27453[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27360 === 24) {
                      var inst_27260 = state_27359[7];
                      var inst_27277 = state_27359[2];
                      var inst_27278 = cljs.core.next.call(null, inst_27260);
                      var inst_27240 = inst_27278;
                      var inst_27241 = null;
                      var inst_27242 = 0;
                      var inst_27243 = 0;
                      var state_27359__$1 = function() {
                        var statearr_27369 = state_27359;
                        statearr_27369[13] = inst_27277;
                        statearr_27369[14] = inst_27241;
                        statearr_27369[15] = inst_27243;
                        statearr_27369[16] = inst_27242;
                        statearr_27369[17] = inst_27240;
                        return statearr_27369;
                      }();
                      var statearr_27370_27454 = state_27359__$1;
                      statearr_27370_27454[2] = null;
                      statearr_27370_27454[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27360 === 39) {
                        var state_27359__$1 = state_27359;
                        var statearr_27374_27455 = state_27359__$1;
                        statearr_27374_27455[2] = null;
                        statearr_27374_27455[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_27360 === 4) {
                          var inst_27231 = state_27359[12];
                          var inst_27231__$1 = state_27359[2];
                          var inst_27232 = inst_27231__$1 == null;
                          var state_27359__$1 = function() {
                            var statearr_27375 = state_27359;
                            statearr_27375[12] = inst_27231__$1;
                            return statearr_27375;
                          }();
                          if (cljs.core.truth_(inst_27232)) {
                            var statearr_27376_27456 = state_27359__$1;
                            statearr_27376_27456[1] = 5;
                          } else {
                            var statearr_27377_27457 = state_27359__$1;
                            statearr_27377_27457[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_27360 === 15) {
                            var inst_27241 = state_27359[14];
                            var inst_27243 = state_27359[15];
                            var inst_27242 = state_27359[16];
                            var inst_27240 = state_27359[17];
                            var inst_27256 = state_27359[2];
                            var inst_27257 = inst_27243 + 1;
                            var tmp27371 = inst_27241;
                            var tmp27372 = inst_27242;
                            var tmp27373 = inst_27240;
                            var inst_27240__$1 = tmp27373;
                            var inst_27241__$1 = tmp27371;
                            var inst_27242__$1 = tmp27372;
                            var inst_27243__$1 = inst_27257;
                            var state_27359__$1 = function() {
                              var statearr_27378 = state_27359;
                              statearr_27378[14] = inst_27241__$1;
                              statearr_27378[15] = inst_27243__$1;
                              statearr_27378[18] = inst_27256;
                              statearr_27378[16] = inst_27242__$1;
                              statearr_27378[17] = inst_27240__$1;
                              return statearr_27378;
                            }();
                            var statearr_27379_27458 = state_27359__$1;
                            statearr_27379_27458[2] = null;
                            statearr_27379_27458[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_27360 === 21) {
                              var inst_27281 = state_27359[2];
                              var state_27359__$1 = state_27359;
                              var statearr_27383_27459 = state_27359__$1;
                              statearr_27383_27459[2] = inst_27281;
                              statearr_27383_27459[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27360 === 31) {
                                var inst_27307 = state_27359[9];
                                var inst_27311 = done.call(null, null);
                                var inst_27312 = cljs.core.async.untap_STAR_.call(null, m, inst_27307);
                                var state_27359__$1 = function() {
                                  var statearr_27384 = state_27359;
                                  statearr_27384[19] = inst_27311;
                                  return statearr_27384;
                                }();
                                var statearr_27385_27460 = state_27359__$1;
                                statearr_27385_27460[2] = inst_27312;
                                statearr_27385_27460[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_27360 === 32) {
                                  var inst_27302 = state_27359[10];
                                  var inst_27300 = state_27359[11];
                                  var inst_27299 = state_27359[20];
                                  var inst_27301 = state_27359[21];
                                  var inst_27314 = state_27359[2];
                                  var inst_27315 = inst_27302 + 1;
                                  var tmp27380 = inst_27300;
                                  var tmp27381 = inst_27299;
                                  var tmp27382 = inst_27301;
                                  var inst_27299__$1 = tmp27381;
                                  var inst_27300__$1 = tmp27380;
                                  var inst_27301__$1 = tmp27382;
                                  var inst_27302__$1 = inst_27315;
                                  var state_27359__$1 = function() {
                                    var statearr_27386 = state_27359;
                                    statearr_27386[10] = inst_27302__$1;
                                    statearr_27386[11] = inst_27300__$1;
                                    statearr_27386[22] = inst_27314;
                                    statearr_27386[20] = inst_27299__$1;
                                    statearr_27386[21] = inst_27301__$1;
                                    return statearr_27386;
                                  }();
                                  var statearr_27387_27461 = state_27359__$1;
                                  statearr_27387_27461[2] = null;
                                  statearr_27387_27461[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27360 === 40) {
                                    var inst_27327 = state_27359[23];
                                    var inst_27331 = done.call(null, null);
                                    var inst_27332 = cljs.core.async.untap_STAR_.call(null, m, inst_27327);
                                    var state_27359__$1 = function() {
                                      var statearr_27388 = state_27359;
                                      statearr_27388[24] = inst_27331;
                                      return statearr_27388;
                                    }();
                                    var statearr_27389_27462 = state_27359__$1;
                                    statearr_27389_27462[2] = inst_27332;
                                    statearr_27389_27462[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_27360 === 33) {
                                      var inst_27318 = state_27359[25];
                                      var inst_27320 = cljs.core.chunked_seq_QMARK_.call(null, inst_27318);
                                      var state_27359__$1 = state_27359;
                                      if (inst_27320) {
                                        var statearr_27390_27463 = state_27359__$1;
                                        statearr_27390_27463[1] = 36;
                                      } else {
                                        var statearr_27391_27464 = state_27359__$1;
                                        statearr_27391_27464[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_27360 === 13) {
                                        var inst_27250 = state_27359[26];
                                        var inst_27253 = cljs.core.async.close_BANG_.call(null, inst_27250);
                                        var state_27359__$1 = state_27359;
                                        var statearr_27392_27465 = state_27359__$1;
                                        statearr_27392_27465[2] = inst_27253;
                                        statearr_27392_27465[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_27360 === 22) {
                                          var inst_27271 = state_27359[8];
                                          var inst_27274 = cljs.core.async.close_BANG_.call(null, inst_27271);
                                          var state_27359__$1 = state_27359;
                                          var statearr_27393_27466 = state_27359__$1;
                                          statearr_27393_27466[2] = inst_27274;
                                          statearr_27393_27466[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_27360 === 36) {
                                            var inst_27318 = state_27359[25];
                                            var inst_27322 = cljs.core.chunk_first.call(null, inst_27318);
                                            var inst_27323 = cljs.core.chunk_rest.call(null, inst_27318);
                                            var inst_27324 = cljs.core.count.call(null, inst_27322);
                                            var inst_27299 = inst_27323;
                                            var inst_27300 = inst_27322;
                                            var inst_27301 = inst_27324;
                                            var inst_27302 = 0;
                                            var state_27359__$1 = function() {
                                              var statearr_27394 = state_27359;
                                              statearr_27394[10] = inst_27302;
                                              statearr_27394[11] = inst_27300;
                                              statearr_27394[20] = inst_27299;
                                              statearr_27394[21] = inst_27301;
                                              return statearr_27394;
                                            }();
                                            var statearr_27395_27467 = state_27359__$1;
                                            statearr_27395_27467[2] = null;
                                            statearr_27395_27467[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_27360 === 41) {
                                              var inst_27318 = state_27359[25];
                                              var inst_27334 = state_27359[2];
                                              var inst_27335 = cljs.core.next.call(null, inst_27318);
                                              var inst_27299 = inst_27335;
                                              var inst_27300 = null;
                                              var inst_27301 = 0;
                                              var inst_27302 = 0;
                                              var state_27359__$1 = function() {
                                                var statearr_27396 = state_27359;
                                                statearr_27396[10] = inst_27302;
                                                statearr_27396[11] = inst_27300;
                                                statearr_27396[27] = inst_27334;
                                                statearr_27396[20] = inst_27299;
                                                statearr_27396[21] = inst_27301;
                                                return statearr_27396;
                                              }();
                                              var statearr_27397_27468 = state_27359__$1;
                                              statearr_27397_27468[2] = null;
                                              statearr_27397_27468[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_27360 === 43) {
                                                var state_27359__$1 = state_27359;
                                                var statearr_27398_27469 = state_27359__$1;
                                                statearr_27398_27469[2] = null;
                                                statearr_27398_27469[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_27360 === 29) {
                                                  var inst_27343 = state_27359[2];
                                                  var state_27359__$1 = state_27359;
                                                  var statearr_27399_27470 = state_27359__$1;
                                                  statearr_27399_27470[2] = inst_27343;
                                                  statearr_27399_27470[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_27360 === 44) {
                                                    var inst_27352 = state_27359[2];
                                                    var state_27359__$1 = function() {
                                                      var statearr_27400 = state_27359;
                                                      statearr_27400[28] = inst_27352;
                                                      return statearr_27400;
                                                    }();
                                                    var statearr_27401_27471 = state_27359__$1;
                                                    statearr_27401_27471[2] = null;
                                                    statearr_27401_27471[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_27360 === 6) {
                                                      var inst_27291 = state_27359[29];
                                                      var inst_27290 = cljs.core.deref.call(null, cs);
                                                      var inst_27291__$1 = cljs.core.keys.call(null, inst_27290);
                                                      var inst_27292 = cljs.core.count.call(null, inst_27291__$1);
                                                      var inst_27293 = cljs.core.reset_BANG_.call(null, dctr, inst_27292);
                                                      var inst_27298 = cljs.core.seq.call(null, inst_27291__$1);
                                                      var inst_27299 = inst_27298;
                                                      var inst_27300 = null;
                                                      var inst_27301 = 0;
                                                      var inst_27302 = 0;
                                                      var state_27359__$1 = function() {
                                                        var statearr_27402 = state_27359;
                                                        statearr_27402[29] = inst_27291__$1;
                                                        statearr_27402[10] = inst_27302;
                                                        statearr_27402[11] = inst_27300;
                                                        statearr_27402[30] = inst_27293;
                                                        statearr_27402[20] = inst_27299;
                                                        statearr_27402[21] = inst_27301;
                                                        return statearr_27402;
                                                      }();
                                                      var statearr_27403_27472 = state_27359__$1;
                                                      statearr_27403_27472[2] = null;
                                                      statearr_27403_27472[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_27360 === 28) {
                                                        var inst_27318 = state_27359[25];
                                                        var inst_27299 = state_27359[20];
                                                        var inst_27318__$1 = cljs.core.seq.call(null, inst_27299);
                                                        var state_27359__$1 = function() {
                                                          var statearr_27404 = state_27359;
                                                          statearr_27404[25] = inst_27318__$1;
                                                          return statearr_27404;
                                                        }();
                                                        if (inst_27318__$1) {
                                                          var statearr_27405_27473 = state_27359__$1;
                                                          statearr_27405_27473[1] = 33;
                                                        } else {
                                                          var statearr_27406_27474 = state_27359__$1;
                                                          statearr_27406_27474[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_27360 === 25) {
                                                          var inst_27302 = state_27359[10];
                                                          var inst_27301 = state_27359[21];
                                                          var inst_27304 = inst_27302 < inst_27301;
                                                          var inst_27305 = inst_27304;
                                                          var state_27359__$1 = state_27359;
                                                          if (cljs.core.truth_(inst_27305)) {
                                                            var statearr_27407_27475 = state_27359__$1;
                                                            statearr_27407_27475[1] = 27;
                                                          } else {
                                                            var statearr_27408_27476 = state_27359__$1;
                                                            statearr_27408_27476[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_27360 === 34) {
                                                            var state_27359__$1 = state_27359;
                                                            var statearr_27409_27477 = state_27359__$1;
                                                            statearr_27409_27477[2] = null;
                                                            statearr_27409_27477[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_27360 === 17) {
                                                              var state_27359__$1 = state_27359;
                                                              var statearr_27410_27478 = state_27359__$1;
                                                              statearr_27410_27478[2] = null;
                                                              statearr_27410_27478[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_27360 === 3) {
                                                                var inst_27357 = state_27359[2];
                                                                var state_27359__$1 = state_27359;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27359__$1, inst_27357);
                                                              } else {
                                                                if (state_val_27360 === 12) {
                                                                  var inst_27286 = state_27359[2];
                                                                  var state_27359__$1 = state_27359;
                                                                  var statearr_27411_27479 = state_27359__$1;
                                                                  statearr_27411_27479[2] = inst_27286;
                                                                  statearr_27411_27479[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_27360 === 2) {
                                                                    var state_27359__$1 = state_27359;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27359__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_27360 === 23) {
                                                                      var state_27359__$1 = state_27359;
                                                                      var statearr_27412_27480 = state_27359__$1;
                                                                      statearr_27412_27480[2] = null;
                                                                      statearr_27412_27480[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_27360 === 35) {
                                                                        var inst_27341 = state_27359[2];
                                                                        var state_27359__$1 = state_27359;
                                                                        var statearr_27413_27481 = state_27359__$1;
                                                                        statearr_27413_27481[2] = inst_27341;
                                                                        statearr_27413_27481[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_27360 === 19) {
                                                                          var inst_27260 = state_27359[7];
                                                                          var inst_27264 = cljs.core.chunk_first.call(null, inst_27260);
                                                                          var inst_27265 = cljs.core.chunk_rest.call(null, inst_27260);
                                                                          var inst_27266 = cljs.core.count.call(null, inst_27264);
                                                                          var inst_27240 = inst_27265;
                                                                          var inst_27241 = inst_27264;
                                                                          var inst_27242 = inst_27266;
                                                                          var inst_27243 = 0;
                                                                          var state_27359__$1 = function() {
                                                                            var statearr_27414 = state_27359;
                                                                            statearr_27414[14] = inst_27241;
                                                                            statearr_27414[15] = inst_27243;
                                                                            statearr_27414[16] = inst_27242;
                                                                            statearr_27414[17] = inst_27240;
                                                                            return statearr_27414;
                                                                          }();
                                                                          var statearr_27415_27482 = state_27359__$1;
                                                                          statearr_27415_27482[2] = null;
                                                                          statearr_27415_27482[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_27360 === 11) {
                                                                            var inst_27260 = state_27359[7];
                                                                            var inst_27240 = state_27359[17];
                                                                            var inst_27260__$1 = cljs.core.seq.call(null, inst_27240);
                                                                            var state_27359__$1 = function() {
                                                                              var statearr_27416 = state_27359;
                                                                              statearr_27416[7] = inst_27260__$1;
                                                                              return statearr_27416;
                                                                            }();
                                                                            if (inst_27260__$1) {
                                                                              var statearr_27417_27483 = state_27359__$1;
                                                                              statearr_27417_27483[1] = 16;
                                                                            } else {
                                                                              var statearr_27418_27484 = state_27359__$1;
                                                                              statearr_27418_27484[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_27360 === 9) {
                                                                              var inst_27288 = state_27359[2];
                                                                              var state_27359__$1 = state_27359;
                                                                              var statearr_27419_27485 = state_27359__$1;
                                                                              statearr_27419_27485[2] = inst_27288;
                                                                              statearr_27419_27485[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_27360 === 5) {
                                                                                var inst_27238 = cljs.core.deref.call(null, cs);
                                                                                var inst_27239 = cljs.core.seq.call(null, inst_27238);
                                                                                var inst_27240 = inst_27239;
                                                                                var inst_27241 = null;
                                                                                var inst_27242 = 0;
                                                                                var inst_27243 = 0;
                                                                                var state_27359__$1 = function() {
                                                                                  var statearr_27420 = state_27359;
                                                                                  statearr_27420[14] = inst_27241;
                                                                                  statearr_27420[15] = inst_27243;
                                                                                  statearr_27420[16] = inst_27242;
                                                                                  statearr_27420[17] = inst_27240;
                                                                                  return statearr_27420;
                                                                                }();
                                                                                var statearr_27421_27486 = state_27359__$1;
                                                                                statearr_27421_27486[2] = null;
                                                                                statearr_27421_27486[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_27360 === 14) {
                                                                                  var state_27359__$1 = state_27359;
                                                                                  var statearr_27422_27487 = state_27359__$1;
                                                                                  statearr_27422_27487[2] = null;
                                                                                  statearr_27422_27487[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_27360 === 45) {
                                                                                    var inst_27349 = state_27359[2];
                                                                                    var state_27359__$1 = state_27359;
                                                                                    var statearr_27423_27488 = state_27359__$1;
                                                                                    statearr_27423_27488[2] = inst_27349;
                                                                                    statearr_27423_27488[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_27360 === 26) {
                                                                                      var inst_27291 = state_27359[29];
                                                                                      var inst_27345 = state_27359[2];
                                                                                      var inst_27346 = cljs.core.seq.call(null, inst_27291);
                                                                                      var state_27359__$1 = function() {
                                                                                        var statearr_27424 = state_27359;
                                                                                        statearr_27424[31] = inst_27345;
                                                                                        return statearr_27424;
                                                                                      }();
                                                                                      if (inst_27346) {
                                                                                        var statearr_27425_27489 = state_27359__$1;
                                                                                        statearr_27425_27489[1] = 42;
                                                                                      } else {
                                                                                        var statearr_27426_27490 = state_27359__$1;
                                                                                        statearr_27426_27490[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_27360 === 16) {
                                                                                        var inst_27260 = state_27359[7];
                                                                                        var inst_27262 = cljs.core.chunked_seq_QMARK_.call(null, inst_27260);
                                                                                        var state_27359__$1 = state_27359;
                                                                                        if (inst_27262) {
                                                                                          var statearr_27427_27491 = state_27359__$1;
                                                                                          statearr_27427_27491[1] = 19;
                                                                                        } else {
                                                                                          var statearr_27428_27492 = state_27359__$1;
                                                                                          statearr_27428_27492[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_27360 === 38) {
                                                                                          var inst_27338 = state_27359[2];
                                                                                          var state_27359__$1 = state_27359;
                                                                                          var statearr_27429_27493 = state_27359__$1;
                                                                                          statearr_27429_27493[2] = inst_27338;
                                                                                          statearr_27429_27493[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_27360 === 30) {
                                                                                            var state_27359__$1 = state_27359;
                                                                                            var statearr_27430_27494 = state_27359__$1;
                                                                                            statearr_27430_27494[2] = null;
                                                                                            statearr_27430_27494[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_27360 === 10) {
                                                                                              var inst_27241 = state_27359[14];
                                                                                              var inst_27243 = state_27359[15];
                                                                                              var inst_27249 = cljs.core._nth.call(null, inst_27241, inst_27243);
                                                                                              var inst_27250 = cljs.core.nth.call(null, inst_27249, 0, null);
                                                                                              var inst_27251 = cljs.core.nth.call(null, inst_27249, 1, null);
                                                                                              var state_27359__$1 = function() {
                                                                                                var statearr_27431 = state_27359;
                                                                                                statearr_27431[26] = inst_27250;
                                                                                                return statearr_27431;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_27251)) {
                                                                                                var statearr_27432_27495 = state_27359__$1;
                                                                                                statearr_27432_27495[1] = 13;
                                                                                              } else {
                                                                                                var statearr_27433_27496 = state_27359__$1;
                                                                                                statearr_27433_27496[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_27360 === 18) {
                                                                                                var inst_27284 = state_27359[2];
                                                                                                var state_27359__$1 = state_27359;
                                                                                                var statearr_27434_27497 = state_27359__$1;
                                                                                                statearr_27434_27497[2] = inst_27284;
                                                                                                statearr_27434_27497[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_27360 === 42) {
                                                                                                  var state_27359__$1 = state_27359;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27359__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_27360 === 37) {
                                                                                                    var inst_27327 = state_27359[23];
                                                                                                    var inst_27318 = state_27359[25];
                                                                                                    var inst_27231 = state_27359[12];
                                                                                                    var inst_27327__$1 = cljs.core.first.call(null, inst_27318);
                                                                                                    var inst_27328 = cljs.core.async.put_BANG_.call(null, inst_27327__$1, inst_27231, done);
                                                                                                    var state_27359__$1 = function() {
                                                                                                      var statearr_27435 = state_27359;
                                                                                                      statearr_27435[23] = inst_27327__$1;
                                                                                                      return statearr_27435;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_27328)) {
                                                                                                      var statearr_27436_27498 = state_27359__$1;
                                                                                                      statearr_27436_27498[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_27437_27499 = state_27359__$1;
                                                                                                      statearr_27437_27499[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_27360 === 8) {
                                                                                                      var inst_27243 = state_27359[15];
                                                                                                      var inst_27242 = state_27359[16];
                                                                                                      var inst_27245 = inst_27243 < inst_27242;
                                                                                                      var inst_27246 = inst_27245;
                                                                                                      var state_27359__$1 = state_27359;
                                                                                                      if (cljs.core.truth_(inst_27246)) {
                                                                                                        var statearr_27438_27500 = state_27359__$1;
                                                                                                        statearr_27438_27500[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_27439_27501 = state_27359__$1;
                                                                                                        statearr_27439_27501[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___27447, cs, m, dchan, dctr, done);
        return function(switch__26028__auto__, c__26140__auto___27447, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__26029__auto__ = null;
            var cljs$core$async$mult_$_state_machine__26029__auto____0 = function() {
              var statearr_27443 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_27443[0] = cljs$core$async$mult_$_state_machine__26029__auto__;
              statearr_27443[1] = 1;
              return statearr_27443;
            };
            var cljs$core$async$mult_$_state_machine__26029__auto____1 = function(state_27359) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_27359);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e27444) {
                    if (e27444 instanceof Object) {
                      var ex__26032__auto__ = e27444;
                      var statearr_27445_27502 = state_27359;
                      statearr_27445_27502[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27359);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e27444;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__27503 = state_27359;
                  state_27359 = G__27503;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__26029__auto__ = function(state_27359) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__26029__auto____1.call(this, state_27359);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__26029__auto____0;
            cljs$core$async$mult_$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__26029__auto____1;
            return cljs$core$async$mult_$_state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___27447, cs, m, dchan, dctr, done);
      }();
      var state__26142__auto__ = function() {
        var statearr_27446 = f__26141__auto__.call(null);
        statearr_27446[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___27447;
        return statearr_27446;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___27447, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var args27504 = [];
  var len__5743__auto___27507 = arguments.length;
  var i__5744__auto___27508 = 0;
  while (true) {
    if (i__5744__auto___27508 < len__5743__auto___27507) {
      args27504.push(arguments[i__5744__auto___27508]);
      var G__27509 = i__5744__auto___27508 + 1;
      i__5744__auto___27508 = G__27509;
      continue;
    } else {
    }
    break;
  }
  var G__27506 = args27504.length;
  switch(G__27506) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27504.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__5340__auto__ = m == null ? null : m;
    var m__5341__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, m, ch);
    } else {
      var m__5341__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__5340__auto__ = m == null ? null : m;
    var m__5341__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, m, ch);
    } else {
      var m__5341__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__5340__auto__ = m == null ? null : m;
    var m__5341__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, m);
    } else {
      var m__5341__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__5340__auto__ = m == null ? null : m;
    var m__5341__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, m, state_map);
    } else {
      var m__5341__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__5340__auto__ = m == null ? null : m;
    var m__5341__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, m, mode);
    } else {
      var m__5341__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___27521 = arguments.length;
  var i__5744__auto___27522 = 0;
  while (true) {
    if (i__5744__auto___27522 < len__5743__auto___27521) {
      args__5750__auto__.push(arguments[i__5744__auto___27522]);
      var G__27523 = i__5744__auto___27522 + 1;
      i__5744__auto___27522 = G__27523;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 3 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(3), 0) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5751__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__27515) {
  var map__27516 = p__27515;
  var map__27516__$1 = (!(map__27516 == null) ? map__27516.cljs$lang$protocol_mask$partition0$ & 64 || map__27516.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27516) : map__27516;
  var opts = map__27516__$1;
  var statearr_27518_27524 = state;
  statearr_27518_27524[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4657__auto__ = cljs.core.async.do_alts.call(null, function(map__27516, map__27516__$1, opts) {
    return function(val) {
      var statearr_27519_27525 = state;
      statearr_27519_27525[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__27516, map__27516__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var cb = temp__4657__auto__;
    var statearr_27520_27526 = state;
    statearr_27520_27526[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq27511) {
  var G__27512 = cljs.core.first.call(null, seq27511);
  var seq27511__$1 = cljs.core.next.call(null, seq27511);
  var G__27513 = cljs.core.first.call(null, seq27511__$1);
  var seq27511__$2 = cljs.core.next.call(null, seq27511__$1);
  var G__27514 = cljs.core.first.call(null, seq27511__$2);
  var seq27511__$3 = cljs.core.next.call(null, seq27511__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__27512, G__27513, G__27514, seq27511__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async27690 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async27690 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta27691) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta27691 = meta27691;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_27692, meta27691__$1) {
          var self__ = this;
          var _27692__$1 = this;
          return new cljs.core.async.t_cljs$core$async27690(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta27691__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_27692) {
          var self__ = this;
          var _27692__$1 = this;
          return self__.meta27691;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
          null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
          "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta27691", "meta27691", -2087157279, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27690.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async27690.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async27690";
      cljs.core.async.t_cljs$core$async27690.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
          return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async27690");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async27690 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async27690(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta27691) {
          return new cljs.core.async.t_cljs$core$async27690(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta27691);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async27690(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__26140__auto___27853 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___27853, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___27853, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_27790) {
            var state_val_27791 = state_27790[1];
            if (state_val_27791 === 7) {
              var inst_27708 = state_27790[2];
              var state_27790__$1 = state_27790;
              var statearr_27792_27854 = state_27790__$1;
              statearr_27792_27854[2] = inst_27708;
              statearr_27792_27854[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27791 === 20) {
                var inst_27720 = state_27790[7];
                var state_27790__$1 = state_27790;
                var statearr_27793_27855 = state_27790__$1;
                statearr_27793_27855[2] = inst_27720;
                statearr_27793_27855[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27791 === 27) {
                  var state_27790__$1 = state_27790;
                  var statearr_27794_27856 = state_27790__$1;
                  statearr_27794_27856[2] = null;
                  statearr_27794_27856[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_27791 === 1) {
                    var inst_27696 = state_27790[8];
                    var inst_27696__$1 = calc_state.call(null);
                    var inst_27698 = inst_27696__$1 == null;
                    var inst_27699 = cljs.core.not.call(null, inst_27698);
                    var state_27790__$1 = function() {
                      var statearr_27795 = state_27790;
                      statearr_27795[8] = inst_27696__$1;
                      return statearr_27795;
                    }();
                    if (inst_27699) {
                      var statearr_27796_27857 = state_27790__$1;
                      statearr_27796_27857[1] = 2;
                    } else {
                      var statearr_27797_27858 = state_27790__$1;
                      statearr_27797_27858[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27791 === 24) {
                      var inst_27764 = state_27790[9];
                      var inst_27750 = state_27790[10];
                      var inst_27743 = state_27790[11];
                      var inst_27764__$1 = inst_27743.call(null, inst_27750);
                      var state_27790__$1 = function() {
                        var statearr_27798 = state_27790;
                        statearr_27798[9] = inst_27764__$1;
                        return statearr_27798;
                      }();
                      if (cljs.core.truth_(inst_27764__$1)) {
                        var statearr_27799_27859 = state_27790__$1;
                        statearr_27799_27859[1] = 29;
                      } else {
                        var statearr_27800_27860 = state_27790__$1;
                        statearr_27800_27860[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27791 === 4) {
                        var inst_27711 = state_27790[2];
                        var state_27790__$1 = state_27790;
                        if (cljs.core.truth_(inst_27711)) {
                          var statearr_27801_27861 = state_27790__$1;
                          statearr_27801_27861[1] = 8;
                        } else {
                          var statearr_27802_27862 = state_27790__$1;
                          statearr_27802_27862[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_27791 === 15) {
                          var inst_27737 = state_27790[2];
                          var state_27790__$1 = state_27790;
                          if (cljs.core.truth_(inst_27737)) {
                            var statearr_27803_27863 = state_27790__$1;
                            statearr_27803_27863[1] = 19;
                          } else {
                            var statearr_27804_27864 = state_27790__$1;
                            statearr_27804_27864[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_27791 === 21) {
                            var inst_27742 = state_27790[12];
                            var inst_27742__$1 = state_27790[2];
                            var inst_27743 = cljs.core.get.call(null, inst_27742__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_27744 = cljs.core.get.call(null, inst_27742__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_27745 = cljs.core.get.call(null, inst_27742__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_27790__$1 = function() {
                              var statearr_27805 = state_27790;
                              statearr_27805[13] = inst_27744;
                              statearr_27805[11] = inst_27743;
                              statearr_27805[12] = inst_27742__$1;
                              return statearr_27805;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_27790__$1, 22, inst_27745);
                          } else {
                            if (state_val_27791 === 31) {
                              var inst_27772 = state_27790[2];
                              var state_27790__$1 = state_27790;
                              if (cljs.core.truth_(inst_27772)) {
                                var statearr_27806_27865 = state_27790__$1;
                                statearr_27806_27865[1] = 32;
                              } else {
                                var statearr_27807_27866 = state_27790__$1;
                                statearr_27807_27866[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27791 === 32) {
                                var inst_27749 = state_27790[14];
                                var state_27790__$1 = state_27790;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27790__$1, 35, out, inst_27749);
                              } else {
                                if (state_val_27791 === 33) {
                                  var inst_27742 = state_27790[12];
                                  var inst_27720 = inst_27742;
                                  var state_27790__$1 = function() {
                                    var statearr_27808 = state_27790;
                                    statearr_27808[7] = inst_27720;
                                    return statearr_27808;
                                  }();
                                  var statearr_27809_27867 = state_27790__$1;
                                  statearr_27809_27867[2] = null;
                                  statearr_27809_27867[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27791 === 13) {
                                    var inst_27720 = state_27790[7];
                                    var inst_27727 = inst_27720.cljs$lang$protocol_mask$partition0$;
                                    var inst_27728 = inst_27727 & 64;
                                    var inst_27729 = inst_27720.cljs$core$ISeq$;
                                    var inst_27730 = inst_27728 || inst_27729;
                                    var state_27790__$1 = state_27790;
                                    if (cljs.core.truth_(inst_27730)) {
                                      var statearr_27810_27868 = state_27790__$1;
                                      statearr_27810_27868[1] = 16;
                                    } else {
                                      var statearr_27811_27869 = state_27790__$1;
                                      statearr_27811_27869[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_27791 === 22) {
                                      var inst_27750 = state_27790[10];
                                      var inst_27749 = state_27790[14];
                                      var inst_27748 = state_27790[2];
                                      var inst_27749__$1 = cljs.core.nth.call(null, inst_27748, 0, null);
                                      var inst_27750__$1 = cljs.core.nth.call(null, inst_27748, 1, null);
                                      var inst_27751 = inst_27749__$1 == null;
                                      var inst_27752 = cljs.core._EQ_.call(null, inst_27750__$1, change);
                                      var inst_27753 = inst_27751 || inst_27752;
                                      var state_27790__$1 = function() {
                                        var statearr_27812 = state_27790;
                                        statearr_27812[10] = inst_27750__$1;
                                        statearr_27812[14] = inst_27749__$1;
                                        return statearr_27812;
                                      }();
                                      if (cljs.core.truth_(inst_27753)) {
                                        var statearr_27813_27870 = state_27790__$1;
                                        statearr_27813_27870[1] = 23;
                                      } else {
                                        var statearr_27814_27871 = state_27790__$1;
                                        statearr_27814_27871[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_27791 === 36) {
                                        var inst_27742 = state_27790[12];
                                        var inst_27720 = inst_27742;
                                        var state_27790__$1 = function() {
                                          var statearr_27815 = state_27790;
                                          statearr_27815[7] = inst_27720;
                                          return statearr_27815;
                                        }();
                                        var statearr_27816_27872 = state_27790__$1;
                                        statearr_27816_27872[2] = null;
                                        statearr_27816_27872[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_27791 === 29) {
                                          var inst_27764 = state_27790[9];
                                          var state_27790__$1 = state_27790;
                                          var statearr_27817_27873 = state_27790__$1;
                                          statearr_27817_27873[2] = inst_27764;
                                          statearr_27817_27873[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_27791 === 6) {
                                            var state_27790__$1 = state_27790;
                                            var statearr_27818_27874 = state_27790__$1;
                                            statearr_27818_27874[2] = false;
                                            statearr_27818_27874[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_27791 === 28) {
                                              var inst_27760 = state_27790[2];
                                              var inst_27761 = calc_state.call(null);
                                              var inst_27720 = inst_27761;
                                              var state_27790__$1 = function() {
                                                var statearr_27819 = state_27790;
                                                statearr_27819[15] = inst_27760;
                                                statearr_27819[7] = inst_27720;
                                                return statearr_27819;
                                              }();
                                              var statearr_27820_27875 = state_27790__$1;
                                              statearr_27820_27875[2] = null;
                                              statearr_27820_27875[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_27791 === 25) {
                                                var inst_27786 = state_27790[2];
                                                var state_27790__$1 = state_27790;
                                                var statearr_27821_27876 = state_27790__$1;
                                                statearr_27821_27876[2] = inst_27786;
                                                statearr_27821_27876[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_27791 === 34) {
                                                  var inst_27784 = state_27790[2];
                                                  var state_27790__$1 = state_27790;
                                                  var statearr_27822_27877 = state_27790__$1;
                                                  statearr_27822_27877[2] = inst_27784;
                                                  statearr_27822_27877[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_27791 === 17) {
                                                    var state_27790__$1 = state_27790;
                                                    var statearr_27823_27878 = state_27790__$1;
                                                    statearr_27823_27878[2] = false;
                                                    statearr_27823_27878[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_27791 === 3) {
                                                      var state_27790__$1 = state_27790;
                                                      var statearr_27824_27879 = state_27790__$1;
                                                      statearr_27824_27879[2] = false;
                                                      statearr_27824_27879[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_27791 === 12) {
                                                        var inst_27788 = state_27790[2];
                                                        var state_27790__$1 = state_27790;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27790__$1, inst_27788);
                                                      } else {
                                                        if (state_val_27791 === 2) {
                                                          var inst_27696 = state_27790[8];
                                                          var inst_27701 = inst_27696.cljs$lang$protocol_mask$partition0$;
                                                          var inst_27702 = inst_27701 & 64;
                                                          var inst_27703 = inst_27696.cljs$core$ISeq$;
                                                          var inst_27704 = inst_27702 || inst_27703;
                                                          var state_27790__$1 = state_27790;
                                                          if (cljs.core.truth_(inst_27704)) {
                                                            var statearr_27825_27880 = state_27790__$1;
                                                            statearr_27825_27880[1] = 5;
                                                          } else {
                                                            var statearr_27826_27881 = state_27790__$1;
                                                            statearr_27826_27881[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_27791 === 23) {
                                                            var inst_27749 = state_27790[14];
                                                            var inst_27755 = inst_27749 == null;
                                                            var state_27790__$1 = state_27790;
                                                            if (cljs.core.truth_(inst_27755)) {
                                                              var statearr_27827_27882 = state_27790__$1;
                                                              statearr_27827_27882[1] = 26;
                                                            } else {
                                                              var statearr_27828_27883 = state_27790__$1;
                                                              statearr_27828_27883[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_27791 === 35) {
                                                              var inst_27775 = state_27790[2];
                                                              var state_27790__$1 = state_27790;
                                                              if (cljs.core.truth_(inst_27775)) {
                                                                var statearr_27829_27884 = state_27790__$1;
                                                                statearr_27829_27884[1] = 36;
                                                              } else {
                                                                var statearr_27830_27885 = state_27790__$1;
                                                                statearr_27830_27885[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_27791 === 19) {
                                                                var inst_27720 = state_27790[7];
                                                                var inst_27739 = cljs.core.apply.call(null, cljs.core.hash_map, inst_27720);
                                                                var state_27790__$1 = state_27790;
                                                                var statearr_27831_27886 = state_27790__$1;
                                                                statearr_27831_27886[2] = inst_27739;
                                                                statearr_27831_27886[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_27791 === 11) {
                                                                  var inst_27720 = state_27790[7];
                                                                  var inst_27724 = inst_27720 == null;
                                                                  var inst_27725 = cljs.core.not.call(null, inst_27724);
                                                                  var state_27790__$1 = state_27790;
                                                                  if (inst_27725) {
                                                                    var statearr_27832_27887 = state_27790__$1;
                                                                    statearr_27832_27887[1] = 13;
                                                                  } else {
                                                                    var statearr_27833_27888 = state_27790__$1;
                                                                    statearr_27833_27888[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_27791 === 9) {
                                                                    var inst_27696 = state_27790[8];
                                                                    var state_27790__$1 = state_27790;
                                                                    var statearr_27834_27889 = state_27790__$1;
                                                                    statearr_27834_27889[2] = inst_27696;
                                                                    statearr_27834_27889[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_27791 === 5) {
                                                                      var state_27790__$1 = state_27790;
                                                                      var statearr_27835_27890 = state_27790__$1;
                                                                      statearr_27835_27890[2] = true;
                                                                      statearr_27835_27890[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_27791 === 14) {
                                                                        var state_27790__$1 = state_27790;
                                                                        var statearr_27836_27891 = state_27790__$1;
                                                                        statearr_27836_27891[2] = false;
                                                                        statearr_27836_27891[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_27791 === 26) {
                                                                          var inst_27750 = state_27790[10];
                                                                          var inst_27757 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_27750);
                                                                          var state_27790__$1 = state_27790;
                                                                          var statearr_27837_27892 = state_27790__$1;
                                                                          statearr_27837_27892[2] = inst_27757;
                                                                          statearr_27837_27892[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_27791 === 16) {
                                                                            var state_27790__$1 = state_27790;
                                                                            var statearr_27838_27893 = state_27790__$1;
                                                                            statearr_27838_27893[2] = true;
                                                                            statearr_27838_27893[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_27791 === 38) {
                                                                              var inst_27780 = state_27790[2];
                                                                              var state_27790__$1 = state_27790;
                                                                              var statearr_27839_27894 = state_27790__$1;
                                                                              statearr_27839_27894[2] = inst_27780;
                                                                              statearr_27839_27894[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_27791 === 30) {
                                                                                var inst_27744 = state_27790[13];
                                                                                var inst_27750 = state_27790[10];
                                                                                var inst_27743 = state_27790[11];
                                                                                var inst_27767 = cljs.core.empty_QMARK_.call(null, inst_27743);
                                                                                var inst_27768 = inst_27744.call(null, inst_27750);
                                                                                var inst_27769 = cljs.core.not.call(null, inst_27768);
                                                                                var inst_27770 = inst_27767 && inst_27769;
                                                                                var state_27790__$1 = state_27790;
                                                                                var statearr_27840_27895 = state_27790__$1;
                                                                                statearr_27840_27895[2] = inst_27770;
                                                                                statearr_27840_27895[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_27791 === 10) {
                                                                                  var inst_27696 = state_27790[8];
                                                                                  var inst_27716 = state_27790[2];
                                                                                  var inst_27717 = cljs.core.get.call(null, inst_27716, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_27718 = cljs.core.get.call(null, inst_27716, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_27719 = cljs.core.get.call(null, inst_27716, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_27720 = inst_27696;
                                                                                  var state_27790__$1 = function() {
                                                                                    var statearr_27841 = state_27790;
                                                                                    statearr_27841[7] = inst_27720;
                                                                                    statearr_27841[16] = inst_27718;
                                                                                    statearr_27841[17] = inst_27719;
                                                                                    statearr_27841[18] = inst_27717;
                                                                                    return statearr_27841;
                                                                                  }();
                                                                                  var statearr_27842_27896 = state_27790__$1;
                                                                                  statearr_27842_27896[2] = null;
                                                                                  statearr_27842_27896[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_27791 === 18) {
                                                                                    var inst_27734 = state_27790[2];
                                                                                    var state_27790__$1 = state_27790;
                                                                                    var statearr_27843_27897 = state_27790__$1;
                                                                                    statearr_27843_27897[2] = inst_27734;
                                                                                    statearr_27843_27897[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_27791 === 37) {
                                                                                      var state_27790__$1 = state_27790;
                                                                                      var statearr_27844_27898 = state_27790__$1;
                                                                                      statearr_27844_27898[2] = null;
                                                                                      statearr_27844_27898[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_27791 === 8) {
                                                                                        var inst_27696 = state_27790[8];
                                                                                        var inst_27713 = cljs.core.apply.call(null, cljs.core.hash_map, inst_27696);
                                                                                        var state_27790__$1 = state_27790;
                                                                                        var statearr_27845_27899 = state_27790__$1;
                                                                                        statearr_27845_27899[2] = inst_27713;
                                                                                        statearr_27845_27899[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___27853, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__26028__auto__, c__26140__auto___27853, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__26029__auto__ = null;
            var cljs$core$async$mix_$_state_machine__26029__auto____0 = function() {
              var statearr_27849 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_27849[0] = cljs$core$async$mix_$_state_machine__26029__auto__;
              statearr_27849[1] = 1;
              return statearr_27849;
            };
            var cljs$core$async$mix_$_state_machine__26029__auto____1 = function(state_27790) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_27790);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e27850) {
                    if (e27850 instanceof Object) {
                      var ex__26032__auto__ = e27850;
                      var statearr_27851_27900 = state_27790;
                      statearr_27851_27900[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27790);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e27850;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__27901 = state_27790;
                  state_27790 = G__27901;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__26029__auto__ = function(state_27790) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__26029__auto____1.call(this, state_27790);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__26029__auto____0;
            cljs$core$async$mix_$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__26029__auto____1;
            return cljs$core$async$mix_$_state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___27853, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__26142__auto__ = function() {
        var statearr_27852 = f__26141__auto__.call(null);
        statearr_27852[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___27853;
        return statearr_27852;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___27853, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__5340__auto__ = p == null ? null : p;
    var m__5341__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__5341__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__5340__auto__ = p == null ? null : p;
    var m__5341__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, p, v, ch);
    } else {
      var m__5341__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var args27902 = [];
  var len__5743__auto___27905 = arguments.length;
  var i__5744__auto___27906 = 0;
  while (true) {
    if (i__5744__auto___27906 < len__5743__auto___27905) {
      args27902.push(arguments[i__5744__auto___27906]);
      var G__27907 = i__5744__auto___27906 + 1;
      i__5744__auto___27906 = G__27907;
      continue;
    } else {
    }
    break;
  }
  var G__27904 = args27902.length;
  switch(G__27904) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27902.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__5340__auto__ = p == null ? null : p;
    var m__5341__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, p);
    } else {
      var m__5341__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__5340__auto__ = p == null ? null : p;
    var m__5341__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, p, v);
    } else {
      var m__5341__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var args27910 = [];
  var len__5743__auto___28035 = arguments.length;
  var i__5744__auto___28036 = 0;
  while (true) {
    if (i__5744__auto___28036 < len__5743__auto___28035) {
      args27910.push(arguments[i__5744__auto___28036]);
      var G__28037 = i__5744__auto___28036 + 1;
      i__5744__auto___28036 = G__28037;
      continue;
    } else {
    }
    break;
  }
  var G__27912 = args27910.length;
  switch(G__27912) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27910.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__4685__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__4685__auto__, mults) {
          return function(p1__27909_SHARP_) {
            if (cljs.core.truth_(p1__27909_SHARP_.call(null, topic))) {
              return p1__27909_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__27909_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__4685__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t_cljs$core$async27913 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async27913 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta27914) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta27914 = meta27914;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_27915, meta27914__$1) {
          var self__ = this;
          var _27915__$1 = this;
          return new cljs.core.async.t_cljs$core$async27913(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta27914__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_27915) {
          var self__ = this;
          var _27915__$1 = this;
          return self__.meta27914;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4657__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4657__auto__)) {
            var m = temp__4657__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async27913.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async27913.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta27914", "meta27914", -209101705, null)], 
          null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async27913.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async27913.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async27913";
      cljs.core.async.t_cljs$core$async27913.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
          return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async27913");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async27913 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async27913(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta27914) {
          return new cljs.core.async.t_cljs$core$async27913(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta27914);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async27913(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__26140__auto___28039 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___28039, mults, ensure_mult, p) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___28039, mults, ensure_mult, p) {
          return function(state_27987) {
            var state_val_27988 = state_27987[1];
            if (state_val_27988 === 7) {
              var inst_27983 = state_27987[2];
              var state_27987__$1 = state_27987;
              var statearr_27989_28040 = state_27987__$1;
              statearr_27989_28040[2] = inst_27983;
              statearr_27989_28040[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27988 === 20) {
                var state_27987__$1 = state_27987;
                var statearr_27990_28041 = state_27987__$1;
                statearr_27990_28041[2] = null;
                statearr_27990_28041[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27988 === 1) {
                  var state_27987__$1 = state_27987;
                  var statearr_27991_28042 = state_27987__$1;
                  statearr_27991_28042[2] = null;
                  statearr_27991_28042[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_27988 === 24) {
                    var inst_27966 = state_27987[7];
                    var inst_27975 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_27966);
                    var state_27987__$1 = state_27987;
                    var statearr_27992_28043 = state_27987__$1;
                    statearr_27992_28043[2] = inst_27975;
                    statearr_27992_28043[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27988 === 4) {
                      var inst_27918 = state_27987[8];
                      var inst_27918__$1 = state_27987[2];
                      var inst_27919 = inst_27918__$1 == null;
                      var state_27987__$1 = function() {
                        var statearr_27993 = state_27987;
                        statearr_27993[8] = inst_27918__$1;
                        return statearr_27993;
                      }();
                      if (cljs.core.truth_(inst_27919)) {
                        var statearr_27994_28044 = state_27987__$1;
                        statearr_27994_28044[1] = 5;
                      } else {
                        var statearr_27995_28045 = state_27987__$1;
                        statearr_27995_28045[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27988 === 15) {
                        var inst_27960 = state_27987[2];
                        var state_27987__$1 = state_27987;
                        var statearr_27996_28046 = state_27987__$1;
                        statearr_27996_28046[2] = inst_27960;
                        statearr_27996_28046[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_27988 === 21) {
                          var inst_27980 = state_27987[2];
                          var state_27987__$1 = function() {
                            var statearr_27997 = state_27987;
                            statearr_27997[9] = inst_27980;
                            return statearr_27997;
                          }();
                          var statearr_27998_28047 = state_27987__$1;
                          statearr_27998_28047[2] = null;
                          statearr_27998_28047[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_27988 === 13) {
                            var inst_27942 = state_27987[10];
                            var inst_27944 = cljs.core.chunked_seq_QMARK_.call(null, inst_27942);
                            var state_27987__$1 = state_27987;
                            if (inst_27944) {
                              var statearr_27999_28048 = state_27987__$1;
                              statearr_27999_28048[1] = 16;
                            } else {
                              var statearr_28000_28049 = state_27987__$1;
                              statearr_28000_28049[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_27988 === 22) {
                              var inst_27972 = state_27987[2];
                              var state_27987__$1 = state_27987;
                              if (cljs.core.truth_(inst_27972)) {
                                var statearr_28001_28050 = state_27987__$1;
                                statearr_28001_28050[1] = 23;
                              } else {
                                var statearr_28002_28051 = state_27987__$1;
                                statearr_28002_28051[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27988 === 6) {
                                var inst_27966 = state_27987[7];
                                var inst_27968 = state_27987[11];
                                var inst_27918 = state_27987[8];
                                var inst_27966__$1 = topic_fn.call(null, inst_27918);
                                var inst_27967 = cljs.core.deref.call(null, mults);
                                var inst_27968__$1 = cljs.core.get.call(null, inst_27967, inst_27966__$1);
                                var state_27987__$1 = function() {
                                  var statearr_28003 = state_27987;
                                  statearr_28003[7] = inst_27966__$1;
                                  statearr_28003[11] = inst_27968__$1;
                                  return statearr_28003;
                                }();
                                if (cljs.core.truth_(inst_27968__$1)) {
                                  var statearr_28004_28052 = state_27987__$1;
                                  statearr_28004_28052[1] = 19;
                                } else {
                                  var statearr_28005_28053 = state_27987__$1;
                                  statearr_28005_28053[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_27988 === 25) {
                                  var inst_27977 = state_27987[2];
                                  var state_27987__$1 = state_27987;
                                  var statearr_28006_28054 = state_27987__$1;
                                  statearr_28006_28054[2] = inst_27977;
                                  statearr_28006_28054[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27988 === 17) {
                                    var inst_27942 = state_27987[10];
                                    var inst_27951 = cljs.core.first.call(null, inst_27942);
                                    var inst_27952 = cljs.core.async.muxch_STAR_.call(null, inst_27951);
                                    var inst_27953 = cljs.core.async.close_BANG_.call(null, inst_27952);
                                    var inst_27954 = cljs.core.next.call(null, inst_27942);
                                    var inst_27928 = inst_27954;
                                    var inst_27929 = null;
                                    var inst_27930 = 0;
                                    var inst_27931 = 0;
                                    var state_27987__$1 = function() {
                                      var statearr_28007 = state_27987;
                                      statearr_28007[12] = inst_27929;
                                      statearr_28007[13] = inst_27928;
                                      statearr_28007[14] = inst_27931;
                                      statearr_28007[15] = inst_27953;
                                      statearr_28007[16] = inst_27930;
                                      return statearr_28007;
                                    }();
                                    var statearr_28008_28055 = state_27987__$1;
                                    statearr_28008_28055[2] = null;
                                    statearr_28008_28055[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_27988 === 3) {
                                      var inst_27985 = state_27987[2];
                                      var state_27987__$1 = state_27987;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27987__$1, inst_27985);
                                    } else {
                                      if (state_val_27988 === 12) {
                                        var inst_27962 = state_27987[2];
                                        var state_27987__$1 = state_27987;
                                        var statearr_28009_28056 = state_27987__$1;
                                        statearr_28009_28056[2] = inst_27962;
                                        statearr_28009_28056[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_27988 === 2) {
                                          var state_27987__$1 = state_27987;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27987__$1, 4, ch);
                                        } else {
                                          if (state_val_27988 === 23) {
                                            var state_27987__$1 = state_27987;
                                            var statearr_28010_28057 = state_27987__$1;
                                            statearr_28010_28057[2] = null;
                                            statearr_28010_28057[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_27988 === 19) {
                                              var inst_27968 = state_27987[11];
                                              var inst_27918 = state_27987[8];
                                              var inst_27970 = cljs.core.async.muxch_STAR_.call(null, inst_27968);
                                              var state_27987__$1 = state_27987;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27987__$1, 22, inst_27970, inst_27918);
                                            } else {
                                              if (state_val_27988 === 11) {
                                                var inst_27928 = state_27987[13];
                                                var inst_27942 = state_27987[10];
                                                var inst_27942__$1 = cljs.core.seq.call(null, inst_27928);
                                                var state_27987__$1 = function() {
                                                  var statearr_28011 = state_27987;
                                                  statearr_28011[10] = inst_27942__$1;
                                                  return statearr_28011;
                                                }();
                                                if (inst_27942__$1) {
                                                  var statearr_28012_28058 = state_27987__$1;
                                                  statearr_28012_28058[1] = 13;
                                                } else {
                                                  var statearr_28013_28059 = state_27987__$1;
                                                  statearr_28013_28059[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_27988 === 9) {
                                                  var inst_27964 = state_27987[2];
                                                  var state_27987__$1 = state_27987;
                                                  var statearr_28014_28060 = state_27987__$1;
                                                  statearr_28014_28060[2] = inst_27964;
                                                  statearr_28014_28060[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_27988 === 5) {
                                                    var inst_27925 = cljs.core.deref.call(null, mults);
                                                    var inst_27926 = cljs.core.vals.call(null, inst_27925);
                                                    var inst_27927 = cljs.core.seq.call(null, inst_27926);
                                                    var inst_27928 = inst_27927;
                                                    var inst_27929 = null;
                                                    var inst_27930 = 0;
                                                    var inst_27931 = 0;
                                                    var state_27987__$1 = function() {
                                                      var statearr_28015 = state_27987;
                                                      statearr_28015[12] = inst_27929;
                                                      statearr_28015[13] = inst_27928;
                                                      statearr_28015[14] = inst_27931;
                                                      statearr_28015[16] = inst_27930;
                                                      return statearr_28015;
                                                    }();
                                                    var statearr_28016_28061 = state_27987__$1;
                                                    statearr_28016_28061[2] = null;
                                                    statearr_28016_28061[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_27988 === 14) {
                                                      var state_27987__$1 = state_27987;
                                                      var statearr_28020_28062 = state_27987__$1;
                                                      statearr_28020_28062[2] = null;
                                                      statearr_28020_28062[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_27988 === 16) {
                                                        var inst_27942 = state_27987[10];
                                                        var inst_27946 = cljs.core.chunk_first.call(null, inst_27942);
                                                        var inst_27947 = cljs.core.chunk_rest.call(null, inst_27942);
                                                        var inst_27948 = cljs.core.count.call(null, inst_27946);
                                                        var inst_27928 = inst_27947;
                                                        var inst_27929 = inst_27946;
                                                        var inst_27930 = inst_27948;
                                                        var inst_27931 = 0;
                                                        var state_27987__$1 = function() {
                                                          var statearr_28021 = state_27987;
                                                          statearr_28021[12] = inst_27929;
                                                          statearr_28021[13] = inst_27928;
                                                          statearr_28021[14] = inst_27931;
                                                          statearr_28021[16] = inst_27930;
                                                          return statearr_28021;
                                                        }();
                                                        var statearr_28022_28063 = state_27987__$1;
                                                        statearr_28022_28063[2] = null;
                                                        statearr_28022_28063[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_27988 === 10) {
                                                          var inst_27929 = state_27987[12];
                                                          var inst_27928 = state_27987[13];
                                                          var inst_27931 = state_27987[14];
                                                          var inst_27930 = state_27987[16];
                                                          var inst_27936 = cljs.core._nth.call(null, inst_27929, inst_27931);
                                                          var inst_27937 = cljs.core.async.muxch_STAR_.call(null, inst_27936);
                                                          var inst_27938 = cljs.core.async.close_BANG_.call(null, inst_27937);
                                                          var inst_27939 = inst_27931 + 1;
                                                          var tmp28017 = inst_27929;
                                                          var tmp28018 = inst_27928;
                                                          var tmp28019 = inst_27930;
                                                          var inst_27928__$1 = tmp28018;
                                                          var inst_27929__$1 = tmp28017;
                                                          var inst_27930__$1 = tmp28019;
                                                          var inst_27931__$1 = inst_27939;
                                                          var state_27987__$1 = function() {
                                                            var statearr_28023 = state_27987;
                                                            statearr_28023[12] = inst_27929__$1;
                                                            statearr_28023[13] = inst_27928__$1;
                                                            statearr_28023[14] = inst_27931__$1;
                                                            statearr_28023[17] = inst_27938;
                                                            statearr_28023[16] = inst_27930__$1;
                                                            return statearr_28023;
                                                          }();
                                                          var statearr_28024_28064 = state_27987__$1;
                                                          statearr_28024_28064[2] = null;
                                                          statearr_28024_28064[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_27988 === 18) {
                                                            var inst_27957 = state_27987[2];
                                                            var state_27987__$1 = state_27987;
                                                            var statearr_28025_28065 = state_27987__$1;
                                                            statearr_28025_28065[2] = inst_27957;
                                                            statearr_28025_28065[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_27988 === 8) {
                                                              var inst_27931 = state_27987[14];
                                                              var inst_27930 = state_27987[16];
                                                              var inst_27933 = inst_27931 < inst_27930;
                                                              var inst_27934 = inst_27933;
                                                              var state_27987__$1 = state_27987;
                                                              if (cljs.core.truth_(inst_27934)) {
                                                                var statearr_28026_28066 = state_27987__$1;
                                                                statearr_28026_28066[1] = 10;
                                                              } else {
                                                                var statearr_28027_28067 = state_27987__$1;
                                                                statearr_28027_28067[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___28039, mults, ensure_mult, p);
        return function(switch__26028__auto__, c__26140__auto___28039, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_28031 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28031[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_28031[1] = 1;
              return statearr_28031;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_27987) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_27987);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28032) {
                    if (e28032 instanceof Object) {
                      var ex__26032__auto__ = e28032;
                      var statearr_28033_28068 = state_27987;
                      statearr_28033_28068[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27987);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28032;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28069 = state_27987;
                  state_27987 = G__28069;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_27987) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_27987);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___28039, mults, ensure_mult, p);
      }();
      var state__26142__auto__ = function() {
        var statearr_28034 = f__26141__auto__.call(null);
        statearr_28034[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___28039;
        return statearr_28034;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___28039, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var args28070 = [];
  var len__5743__auto___28073 = arguments.length;
  var i__5744__auto___28074 = 0;
  while (true) {
    if (i__5744__auto___28074 < len__5743__auto___28073) {
      args28070.push(arguments[i__5744__auto___28074]);
      var G__28075 = i__5744__auto___28074 + 1;
      i__5744__auto___28074 = G__28075;
      continue;
    } else {
    }
    break;
  }
  var G__28072 = args28070.length;
  switch(G__28072) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28070.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var args28077 = [];
  var len__5743__auto___28080 = arguments.length;
  var i__5744__auto___28081 = 0;
  while (true) {
    if (i__5744__auto___28081 < len__5743__auto___28080) {
      args28077.push(arguments[i__5744__auto___28081]);
      var G__28082 = i__5744__auto___28081 + 1;
      i__5744__auto___28081 = G__28082;
      continue;
    } else {
    }
    break;
  }
  var G__28079 = args28077.length;
  switch(G__28079) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28077.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var args28084 = [];
  var len__5743__auto___28155 = arguments.length;
  var i__5744__auto___28156 = 0;
  while (true) {
    if (i__5744__auto___28156 < len__5743__auto___28155) {
      args28084.push(arguments[i__5744__auto___28156]);
      var G__28157 = i__5744__auto___28156 + 1;
      i__5744__auto___28156 = G__28157;
      continue;
    } else {
    }
    break;
  }
  var G__28086 = args28084.length;
  switch(G__28086) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28084.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__26140__auto___28159 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___28159, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___28159, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_28125) {
            var state_val_28126 = state_28125[1];
            if (state_val_28126 === 7) {
              var state_28125__$1 = state_28125;
              var statearr_28127_28160 = state_28125__$1;
              statearr_28127_28160[2] = null;
              statearr_28127_28160[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28126 === 1) {
                var state_28125__$1 = state_28125;
                var statearr_28128_28161 = state_28125__$1;
                statearr_28128_28161[2] = null;
                statearr_28128_28161[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28126 === 4) {
                  var inst_28089 = state_28125[7];
                  var inst_28091 = inst_28089 < cnt;
                  var state_28125__$1 = state_28125;
                  if (cljs.core.truth_(inst_28091)) {
                    var statearr_28129_28162 = state_28125__$1;
                    statearr_28129_28162[1] = 6;
                  } else {
                    var statearr_28130_28163 = state_28125__$1;
                    statearr_28130_28163[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28126 === 15) {
                    var inst_28121 = state_28125[2];
                    var state_28125__$1 = state_28125;
                    var statearr_28131_28164 = state_28125__$1;
                    statearr_28131_28164[2] = inst_28121;
                    statearr_28131_28164[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28126 === 13) {
                      var inst_28114 = cljs.core.async.close_BANG_.call(null, out);
                      var state_28125__$1 = state_28125;
                      var statearr_28132_28165 = state_28125__$1;
                      statearr_28132_28165[2] = inst_28114;
                      statearr_28132_28165[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_28126 === 6) {
                        var state_28125__$1 = state_28125;
                        var statearr_28133_28166 = state_28125__$1;
                        statearr_28133_28166[2] = null;
                        statearr_28133_28166[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28126 === 3) {
                          var inst_28123 = state_28125[2];
                          var state_28125__$1 = state_28125;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28125__$1, inst_28123);
                        } else {
                          if (state_val_28126 === 12) {
                            var inst_28111 = state_28125[8];
                            var inst_28111__$1 = state_28125[2];
                            var inst_28112 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_28111__$1);
                            var state_28125__$1 = function() {
                              var statearr_28134 = state_28125;
                              statearr_28134[8] = inst_28111__$1;
                              return statearr_28134;
                            }();
                            if (cljs.core.truth_(inst_28112)) {
                              var statearr_28135_28167 = state_28125__$1;
                              statearr_28135_28167[1] = 13;
                            } else {
                              var statearr_28136_28168 = state_28125__$1;
                              statearr_28136_28168[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28126 === 2) {
                              var inst_28088 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_28089 = 0;
                              var state_28125__$1 = function() {
                                var statearr_28137 = state_28125;
                                statearr_28137[7] = inst_28089;
                                statearr_28137[9] = inst_28088;
                                return statearr_28137;
                              }();
                              var statearr_28138_28169 = state_28125__$1;
                              statearr_28138_28169[2] = null;
                              statearr_28138_28169[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28126 === 11) {
                                var inst_28089 = state_28125[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_28125, 10, Object, null, 9);
                                var inst_28098 = chs__$1.call(null, inst_28089);
                                var inst_28099 = done.call(null, inst_28089);
                                var inst_28100 = cljs.core.async.take_BANG_.call(null, inst_28098, inst_28099);
                                var state_28125__$1 = state_28125;
                                var statearr_28139_28170 = state_28125__$1;
                                statearr_28139_28170[2] = inst_28100;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28125__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28126 === 9) {
                                  var inst_28089 = state_28125[7];
                                  var inst_28102 = state_28125[2];
                                  var inst_28103 = inst_28089 + 1;
                                  var inst_28089__$1 = inst_28103;
                                  var state_28125__$1 = function() {
                                    var statearr_28140 = state_28125;
                                    statearr_28140[10] = inst_28102;
                                    statearr_28140[7] = inst_28089__$1;
                                    return statearr_28140;
                                  }();
                                  var statearr_28141_28171 = state_28125__$1;
                                  statearr_28141_28171[2] = null;
                                  statearr_28141_28171[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_28126 === 5) {
                                    var inst_28109 = state_28125[2];
                                    var state_28125__$1 = function() {
                                      var statearr_28142 = state_28125;
                                      statearr_28142[11] = inst_28109;
                                      return statearr_28142;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28125__$1, 12, dchan);
                                  } else {
                                    if (state_val_28126 === 14) {
                                      var inst_28111 = state_28125[8];
                                      var inst_28116 = cljs.core.apply.call(null, f, inst_28111);
                                      var state_28125__$1 = state_28125;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28125__$1, 16, out, inst_28116);
                                    } else {
                                      if (state_val_28126 === 16) {
                                        var inst_28118 = state_28125[2];
                                        var state_28125__$1 = function() {
                                          var statearr_28143 = state_28125;
                                          statearr_28143[12] = inst_28118;
                                          return statearr_28143;
                                        }();
                                        var statearr_28144_28172 = state_28125__$1;
                                        statearr_28144_28172[2] = null;
                                        statearr_28144_28172[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_28126 === 10) {
                                          var inst_28093 = state_28125[2];
                                          var inst_28094 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_28125__$1 = function() {
                                            var statearr_28145 = state_28125;
                                            statearr_28145[13] = inst_28093;
                                            return statearr_28145;
                                          }();
                                          var statearr_28146_28173 = state_28125__$1;
                                          statearr_28146_28173[2] = inst_28094;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28125__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_28126 === 8) {
                                            var inst_28107 = state_28125[2];
                                            var state_28125__$1 = state_28125;
                                            var statearr_28147_28174 = state_28125__$1;
                                            statearr_28147_28174[2] = inst_28107;
                                            statearr_28147_28174[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___28159, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__26028__auto__, c__26140__auto___28159, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_28151 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28151[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_28151[1] = 1;
              return statearr_28151;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_28125) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_28125);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28152) {
                    if (e28152 instanceof Object) {
                      var ex__26032__auto__ = e28152;
                      var statearr_28153_28175 = state_28125;
                      statearr_28153_28175[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28125);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28152;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28176 = state_28125;
                  state_28125 = G__28176;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_28125) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_28125);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___28159, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__26142__auto__ = function() {
        var statearr_28154 = f__26141__auto__.call(null);
        statearr_28154[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___28159;
        return statearr_28154;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___28159, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var args28178 = [];
  var len__5743__auto___28234 = arguments.length;
  var i__5744__auto___28235 = 0;
  while (true) {
    if (i__5744__auto___28235 < len__5743__auto___28234) {
      args28178.push(arguments[i__5744__auto___28235]);
      var G__28236 = i__5744__auto___28235 + 1;
      i__5744__auto___28235 = G__28236;
      continue;
    } else {
    }
    break;
  }
  var G__28180 = args28178.length;
  switch(G__28180) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28178.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26140__auto___28238 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___28238, out) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___28238, out) {
          return function(state_28210) {
            var state_val_28211 = state_28210[1];
            if (state_val_28211 === 7) {
              var inst_28189 = state_28210[7];
              var inst_28190 = state_28210[8];
              var inst_28189__$1 = state_28210[2];
              var inst_28190__$1 = cljs.core.nth.call(null, inst_28189__$1, 0, null);
              var inst_28191 = cljs.core.nth.call(null, inst_28189__$1, 1, null);
              var inst_28192 = inst_28190__$1 == null;
              var state_28210__$1 = function() {
                var statearr_28212 = state_28210;
                statearr_28212[7] = inst_28189__$1;
                statearr_28212[9] = inst_28191;
                statearr_28212[8] = inst_28190__$1;
                return statearr_28212;
              }();
              if (cljs.core.truth_(inst_28192)) {
                var statearr_28213_28239 = state_28210__$1;
                statearr_28213_28239[1] = 8;
              } else {
                var statearr_28214_28240 = state_28210__$1;
                statearr_28214_28240[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28211 === 1) {
                var inst_28181 = cljs.core.vec.call(null, chs);
                var inst_28182 = inst_28181;
                var state_28210__$1 = function() {
                  var statearr_28215 = state_28210;
                  statearr_28215[10] = inst_28182;
                  return statearr_28215;
                }();
                var statearr_28216_28241 = state_28210__$1;
                statearr_28216_28241[2] = null;
                statearr_28216_28241[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28211 === 4) {
                  var inst_28182 = state_28210[10];
                  var state_28210__$1 = state_28210;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_28210__$1, 7, inst_28182);
                } else {
                  if (state_val_28211 === 6) {
                    var inst_28206 = state_28210[2];
                    var state_28210__$1 = state_28210;
                    var statearr_28217_28242 = state_28210__$1;
                    statearr_28217_28242[2] = inst_28206;
                    statearr_28217_28242[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28211 === 3) {
                      var inst_28208 = state_28210[2];
                      var state_28210__$1 = state_28210;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28210__$1, inst_28208);
                    } else {
                      if (state_val_28211 === 2) {
                        var inst_28182 = state_28210[10];
                        var inst_28184 = cljs.core.count.call(null, inst_28182);
                        var inst_28185 = inst_28184 > 0;
                        var state_28210__$1 = state_28210;
                        if (cljs.core.truth_(inst_28185)) {
                          var statearr_28219_28243 = state_28210__$1;
                          statearr_28219_28243[1] = 4;
                        } else {
                          var statearr_28220_28244 = state_28210__$1;
                          statearr_28220_28244[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28211 === 11) {
                          var inst_28182 = state_28210[10];
                          var inst_28199 = state_28210[2];
                          var tmp28218 = inst_28182;
                          var inst_28182__$1 = tmp28218;
                          var state_28210__$1 = function() {
                            var statearr_28221 = state_28210;
                            statearr_28221[11] = inst_28199;
                            statearr_28221[10] = inst_28182__$1;
                            return statearr_28221;
                          }();
                          var statearr_28222_28245 = state_28210__$1;
                          statearr_28222_28245[2] = null;
                          statearr_28222_28245[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28211 === 9) {
                            var inst_28190 = state_28210[8];
                            var state_28210__$1 = state_28210;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28210__$1, 11, out, inst_28190);
                          } else {
                            if (state_val_28211 === 5) {
                              var inst_28204 = cljs.core.async.close_BANG_.call(null, out);
                              var state_28210__$1 = state_28210;
                              var statearr_28223_28246 = state_28210__$1;
                              statearr_28223_28246[2] = inst_28204;
                              statearr_28223_28246[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28211 === 10) {
                                var inst_28202 = state_28210[2];
                                var state_28210__$1 = state_28210;
                                var statearr_28224_28247 = state_28210__$1;
                                statearr_28224_28247[2] = inst_28202;
                                statearr_28224_28247[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28211 === 8) {
                                  var inst_28189 = state_28210[7];
                                  var inst_28191 = state_28210[9];
                                  var inst_28190 = state_28210[8];
                                  var inst_28182 = state_28210[10];
                                  var inst_28194 = function() {
                                    var cs = inst_28182;
                                    var vec__28187 = inst_28189;
                                    var v = inst_28190;
                                    var c = inst_28191;
                                    return function(cs, vec__28187, v, c, inst_28189, inst_28191, inst_28190, inst_28182, state_val_28211, c__26140__auto___28238, out) {
                                      return function(p1__28177_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__28177_SHARP_);
                                      };
                                    }(cs, vec__28187, v, c, inst_28189, inst_28191, inst_28190, inst_28182, state_val_28211, c__26140__auto___28238, out);
                                  }();
                                  var inst_28195 = cljs.core.filterv.call(null, inst_28194, inst_28182);
                                  var inst_28182__$1 = inst_28195;
                                  var state_28210__$1 = function() {
                                    var statearr_28225 = state_28210;
                                    statearr_28225[10] = inst_28182__$1;
                                    return statearr_28225;
                                  }();
                                  var statearr_28226_28248 = state_28210__$1;
                                  statearr_28226_28248[2] = null;
                                  statearr_28226_28248[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___28238, out);
        return function(switch__26028__auto__, c__26140__auto___28238, out) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_28230 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28230[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_28230[1] = 1;
              return statearr_28230;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_28210) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_28210);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28231) {
                    if (e28231 instanceof Object) {
                      var ex__26032__auto__ = e28231;
                      var statearr_28232_28249 = state_28210;
                      statearr_28232_28249[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28210);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28231;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28250 = state_28210;
                  state_28210 = G__28250;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_28210) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_28210);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___28238, out);
      }();
      var state__26142__auto__ = function() {
        var statearr_28233 = f__26141__auto__.call(null);
        statearr_28233[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___28238;
        return statearr_28233;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___28238, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var args28251 = [];
  var len__5743__auto___28300 = arguments.length;
  var i__5744__auto___28301 = 0;
  while (true) {
    if (i__5744__auto___28301 < len__5743__auto___28300) {
      args28251.push(arguments[i__5744__auto___28301]);
      var G__28302 = i__5744__auto___28301 + 1;
      i__5744__auto___28301 = G__28302;
      continue;
    } else {
    }
    break;
  }
  var G__28253 = args28251.length;
  switch(G__28253) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28251.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26140__auto___28304 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___28304, out) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___28304, out) {
          return function(state_28277) {
            var state_val_28278 = state_28277[1];
            if (state_val_28278 === 7) {
              var inst_28259 = state_28277[7];
              var inst_28259__$1 = state_28277[2];
              var inst_28260 = inst_28259__$1 == null;
              var inst_28261 = cljs.core.not.call(null, inst_28260);
              var state_28277__$1 = function() {
                var statearr_28279 = state_28277;
                statearr_28279[7] = inst_28259__$1;
                return statearr_28279;
              }();
              if (inst_28261) {
                var statearr_28280_28305 = state_28277__$1;
                statearr_28280_28305[1] = 8;
              } else {
                var statearr_28281_28306 = state_28277__$1;
                statearr_28281_28306[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28278 === 1) {
                var inst_28254 = 0;
                var state_28277__$1 = function() {
                  var statearr_28282 = state_28277;
                  statearr_28282[8] = inst_28254;
                  return statearr_28282;
                }();
                var statearr_28283_28307 = state_28277__$1;
                statearr_28283_28307[2] = null;
                statearr_28283_28307[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28278 === 4) {
                  var state_28277__$1 = state_28277;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28277__$1, 7, ch);
                } else {
                  if (state_val_28278 === 6) {
                    var inst_28272 = state_28277[2];
                    var state_28277__$1 = state_28277;
                    var statearr_28284_28308 = state_28277__$1;
                    statearr_28284_28308[2] = inst_28272;
                    statearr_28284_28308[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28278 === 3) {
                      var inst_28274 = state_28277[2];
                      var inst_28275 = cljs.core.async.close_BANG_.call(null, out);
                      var state_28277__$1 = function() {
                        var statearr_28285 = state_28277;
                        statearr_28285[9] = inst_28274;
                        return statearr_28285;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28277__$1, inst_28275);
                    } else {
                      if (state_val_28278 === 2) {
                        var inst_28254 = state_28277[8];
                        var inst_28256 = inst_28254 < n;
                        var state_28277__$1 = state_28277;
                        if (cljs.core.truth_(inst_28256)) {
                          var statearr_28286_28309 = state_28277__$1;
                          statearr_28286_28309[1] = 4;
                        } else {
                          var statearr_28287_28310 = state_28277__$1;
                          statearr_28287_28310[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28278 === 11) {
                          var inst_28254 = state_28277[8];
                          var inst_28264 = state_28277[2];
                          var inst_28265 = inst_28254 + 1;
                          var inst_28254__$1 = inst_28265;
                          var state_28277__$1 = function() {
                            var statearr_28288 = state_28277;
                            statearr_28288[8] = inst_28254__$1;
                            statearr_28288[10] = inst_28264;
                            return statearr_28288;
                          }();
                          var statearr_28289_28311 = state_28277__$1;
                          statearr_28289_28311[2] = null;
                          statearr_28289_28311[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28278 === 9) {
                            var state_28277__$1 = state_28277;
                            var statearr_28290_28312 = state_28277__$1;
                            statearr_28290_28312[2] = null;
                            statearr_28290_28312[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28278 === 5) {
                              var state_28277__$1 = state_28277;
                              var statearr_28291_28313 = state_28277__$1;
                              statearr_28291_28313[2] = null;
                              statearr_28291_28313[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28278 === 10) {
                                var inst_28269 = state_28277[2];
                                var state_28277__$1 = state_28277;
                                var statearr_28292_28314 = state_28277__$1;
                                statearr_28292_28314[2] = inst_28269;
                                statearr_28292_28314[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28278 === 8) {
                                  var inst_28259 = state_28277[7];
                                  var state_28277__$1 = state_28277;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28277__$1, 11, out, inst_28259);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___28304, out);
        return function(switch__26028__auto__, c__26140__auto___28304, out) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_28296 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_28296[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_28296[1] = 1;
              return statearr_28296;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_28277) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_28277);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28297) {
                    if (e28297 instanceof Object) {
                      var ex__26032__auto__ = e28297;
                      var statearr_28298_28315 = state_28277;
                      statearr_28298_28315[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28277);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28297;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28316 = state_28277;
                  state_28277 = G__28316;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_28277) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_28277);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___28304, out);
      }();
      var state__26142__auto__ = function() {
        var statearr_28299 = f__26141__auto__.call(null);
        statearr_28299[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___28304;
        return statearr_28299;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___28304, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async28324 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async28324 = function(map_LT_, f, ch, meta28325) {
      this.map_LT_ = map_LT_;
      this.f = f;
      this.ch = ch;
      this.meta28325 = meta28325;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28326, meta28325__$1) {
      var self__ = this;
      var _28326__$1 = this;
      return new cljs.core.async.t_cljs$core$async28324(self__.map_LT_, self__.f, self__.ch, meta28325__$1);
    };
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28326) {
      var self__ = this;
      var _28326__$1 = this;
      return self__.meta28325;
    };
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t_cljs$core$async28327 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async28327 = function(map_LT_, f, ch, meta28325, _, fn1, meta28328) {
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta28325 = meta28325;
            this._ = _;
            this.fn1 = fn1;
            this.meta28328 = meta28328;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async28327.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_28329, meta28328__$1) {
              var self__ = this;
              var _28329__$1 = this;
              return new cljs.core.async.t_cljs$core$async28327(self__.map_LT_, self__.f, self__.ch, self__.meta28325, self__._, self__.fn1, meta28328__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28327.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_28329) {
              var self__ = this;
              var _28329__$1 = this;
              return self__.meta28328;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28327.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t_cljs$core$async28327.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28327.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return true;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28327.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__28317_SHARP_) {
                  return f1.call(null, p1__28317_SHARP_ == null ? null : self__.f.call(null, p1__28317_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28327.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta28325", "meta28325", 909657396, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), 
              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t_cljs$core$async28324", "cljs.core.async/t_cljs$core$async28324", -185147359, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta28328", "meta28328", -1769633692, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28327.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async28327.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28327";
          cljs.core.async.t_cljs$core$async28327.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
              return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async28327");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async28327 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async28327(map_LT___$1, f__$1, ch__$1, meta28325__$1, ___$2, fn1__$1, meta28328) {
              return new cljs.core.async.t_cljs$core$async28327(map_LT___$1, f__$1, ch__$1, meta28325__$1, ___$2, fn1__$1, meta28328);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async28327(self__.map_LT_, self__.f, self__.ch, self__.meta28325, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__4673__auto__ = ret;
        if (cljs.core.truth_(and__4673__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__4673__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async28324.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async28324.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta28325", "meta28325", 909657396, null)], null);
    };
    cljs.core.async.t_cljs$core$async28324.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async28324.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28324";
    cljs.core.async.t_cljs$core$async28324.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async28324");
    };
    cljs.core.async.__GT_t_cljs$core$async28324 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async28324(map_LT___$1, f__$1, ch__$1, meta28325) {
      return new cljs.core.async.t_cljs$core$async28324(map_LT___$1, f__$1, ch__$1, meta28325);
    };
  }
  return new cljs.core.async.t_cljs$core$async28324(cljs$core$async$map_LT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async28333 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async28333 = function(map_GT_, f, ch, meta28334) {
      this.map_GT_ = map_GT_;
      this.f = f;
      this.ch = ch;
      this.meta28334 = meta28334;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async28333.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28335, meta28334__$1) {
      var self__ = this;
      var _28335__$1 = this;
      return new cljs.core.async.t_cljs$core$async28333(self__.map_GT_, self__.f, self__.ch, meta28334__$1);
    };
    cljs.core.async.t_cljs$core$async28333.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28335) {
      var self__ = this;
      var _28335__$1 = this;
      return self__.meta28334;
    };
    cljs.core.async.t_cljs$core$async28333.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async28333.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28333.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async28333.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async28333.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async28333.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async28333.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta28334", "meta28334", 537453292, null)], null);
    };
    cljs.core.async.t_cljs$core$async28333.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async28333.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28333";
    cljs.core.async.t_cljs$core$async28333.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async28333");
    };
    cljs.core.async.__GT_t_cljs$core$async28333 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async28333(map_GT___$1, f__$1, ch__$1, meta28334) {
      return new cljs.core.async.t_cljs$core$async28333(map_GT___$1, f__$1, ch__$1, meta28334);
    };
  }
  return new cljs.core.async.t_cljs$core$async28333(cljs$core$async$map_GT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t_cljs$core$async28339 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async28339 = function(filter_GT_, p, ch, meta28340) {
      this.filter_GT_ = filter_GT_;
      this.p = p;
      this.ch = ch;
      this.meta28340 = meta28340;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28341, meta28340__$1) {
      var self__ = this;
      var _28341__$1 = this;
      return new cljs.core.async.t_cljs$core$async28339(self__.filter_GT_, self__.p, self__.ch, meta28340__$1);
    };
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28341) {
      var self__ = this;
      var _28341__$1 = this;
      return self__.meta28340;
    };
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async28339.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async28339.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta28340", "meta28340", -1992544855, null)], null);
    };
    cljs.core.async.t_cljs$core$async28339.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async28339.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28339";
    cljs.core.async.t_cljs$core$async28339.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write.call(null, writer__5284__auto__, "cljs.core.async/t_cljs$core$async28339");
    };
    cljs.core.async.__GT_t_cljs$core$async28339 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async28339(filter_GT___$1, p__$1, ch__$1, meta28340) {
      return new cljs.core.async.t_cljs$core$async28339(filter_GT___$1, p__$1, ch__$1, meta28340);
    };
  }
  return new cljs.core.async.t_cljs$core$async28339(cljs$core$async$filter_GT_, p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var args28342 = [];
  var len__5743__auto___28386 = arguments.length;
  var i__5744__auto___28387 = 0;
  while (true) {
    if (i__5744__auto___28387 < len__5743__auto___28386) {
      args28342.push(arguments[i__5744__auto___28387]);
      var G__28388 = i__5744__auto___28387 + 1;
      i__5744__auto___28387 = G__28388;
      continue;
    } else {
    }
    break;
  }
  var G__28344 = args28342.length;
  switch(G__28344) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28342.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26140__auto___28390 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___28390, out) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___28390, out) {
          return function(state_28365) {
            var state_val_28366 = state_28365[1];
            if (state_val_28366 === 7) {
              var inst_28361 = state_28365[2];
              var state_28365__$1 = state_28365;
              var statearr_28367_28391 = state_28365__$1;
              statearr_28367_28391[2] = inst_28361;
              statearr_28367_28391[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28366 === 1) {
                var state_28365__$1 = state_28365;
                var statearr_28368_28392 = state_28365__$1;
                statearr_28368_28392[2] = null;
                statearr_28368_28392[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28366 === 4) {
                  var inst_28347 = state_28365[7];
                  var inst_28347__$1 = state_28365[2];
                  var inst_28348 = inst_28347__$1 == null;
                  var state_28365__$1 = function() {
                    var statearr_28369 = state_28365;
                    statearr_28369[7] = inst_28347__$1;
                    return statearr_28369;
                  }();
                  if (cljs.core.truth_(inst_28348)) {
                    var statearr_28370_28393 = state_28365__$1;
                    statearr_28370_28393[1] = 5;
                  } else {
                    var statearr_28371_28394 = state_28365__$1;
                    statearr_28371_28394[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28366 === 6) {
                    var inst_28347 = state_28365[7];
                    var inst_28352 = p.call(null, inst_28347);
                    var state_28365__$1 = state_28365;
                    if (cljs.core.truth_(inst_28352)) {
                      var statearr_28372_28395 = state_28365__$1;
                      statearr_28372_28395[1] = 8;
                    } else {
                      var statearr_28373_28396 = state_28365__$1;
                      statearr_28373_28396[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28366 === 3) {
                      var inst_28363 = state_28365[2];
                      var state_28365__$1 = state_28365;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28365__$1, inst_28363);
                    } else {
                      if (state_val_28366 === 2) {
                        var state_28365__$1 = state_28365;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28365__$1, 4, ch);
                      } else {
                        if (state_val_28366 === 11) {
                          var inst_28355 = state_28365[2];
                          var state_28365__$1 = state_28365;
                          var statearr_28374_28397 = state_28365__$1;
                          statearr_28374_28397[2] = inst_28355;
                          statearr_28374_28397[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28366 === 9) {
                            var state_28365__$1 = state_28365;
                            var statearr_28375_28398 = state_28365__$1;
                            statearr_28375_28398[2] = null;
                            statearr_28375_28398[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28366 === 5) {
                              var inst_28350 = cljs.core.async.close_BANG_.call(null, out);
                              var state_28365__$1 = state_28365;
                              var statearr_28376_28399 = state_28365__$1;
                              statearr_28376_28399[2] = inst_28350;
                              statearr_28376_28399[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28366 === 10) {
                                var inst_28358 = state_28365[2];
                                var state_28365__$1 = function() {
                                  var statearr_28377 = state_28365;
                                  statearr_28377[8] = inst_28358;
                                  return statearr_28377;
                                }();
                                var statearr_28378_28400 = state_28365__$1;
                                statearr_28378_28400[2] = null;
                                statearr_28378_28400[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28366 === 8) {
                                  var inst_28347 = state_28365[7];
                                  var state_28365__$1 = state_28365;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28365__$1, 11, out, inst_28347);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___28390, out);
        return function(switch__26028__auto__, c__26140__auto___28390, out) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_28382 = [null, null, null, null, null, null, null, null, null];
              statearr_28382[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_28382[1] = 1;
              return statearr_28382;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_28365) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_28365);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28383) {
                    if (e28383 instanceof Object) {
                      var ex__26032__auto__ = e28383;
                      var statearr_28384_28401 = state_28365;
                      statearr_28384_28401[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28365);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28383;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28402 = state_28365;
                  state_28365 = G__28402;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_28365) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_28365);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___28390, out);
      }();
      var state__26142__auto__ = function() {
        var statearr_28385 = f__26141__auto__.call(null);
        statearr_28385[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___28390;
        return statearr_28385;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___28390, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var args28403 = [];
  var len__5743__auto___28406 = arguments.length;
  var i__5744__auto___28407 = 0;
  while (true) {
    if (i__5744__auto___28407 < len__5743__auto___28406) {
      args28403.push(arguments[i__5744__auto___28407]);
      var G__28408 = i__5744__auto___28407 + 1;
      i__5744__auto___28407 = G__28408;
      continue;
    } else {
    }
    break;
  }
  var G__28405 = args28403.length;
  switch(G__28405) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28403.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__26140__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto__) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto__) {
          return function(state_28575) {
            var state_val_28576 = state_28575[1];
            if (state_val_28576 === 7) {
              var inst_28571 = state_28575[2];
              var state_28575__$1 = state_28575;
              var statearr_28577_28618 = state_28575__$1;
              statearr_28577_28618[2] = inst_28571;
              statearr_28577_28618[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28576 === 20) {
                var inst_28541 = state_28575[7];
                var inst_28552 = state_28575[2];
                var inst_28553 = cljs.core.next.call(null, inst_28541);
                var inst_28527 = inst_28553;
                var inst_28528 = null;
                var inst_28529 = 0;
                var inst_28530 = 0;
                var state_28575__$1 = function() {
                  var statearr_28578 = state_28575;
                  statearr_28578[8] = inst_28552;
                  statearr_28578[9] = inst_28529;
                  statearr_28578[10] = inst_28530;
                  statearr_28578[11] = inst_28527;
                  statearr_28578[12] = inst_28528;
                  return statearr_28578;
                }();
                var statearr_28579_28619 = state_28575__$1;
                statearr_28579_28619[2] = null;
                statearr_28579_28619[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28576 === 1) {
                  var state_28575__$1 = state_28575;
                  var statearr_28580_28620 = state_28575__$1;
                  statearr_28580_28620[2] = null;
                  statearr_28580_28620[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28576 === 4) {
                    var inst_28516 = state_28575[13];
                    var inst_28516__$1 = state_28575[2];
                    var inst_28517 = inst_28516__$1 == null;
                    var state_28575__$1 = function() {
                      var statearr_28581 = state_28575;
                      statearr_28581[13] = inst_28516__$1;
                      return statearr_28581;
                    }();
                    if (cljs.core.truth_(inst_28517)) {
                      var statearr_28582_28621 = state_28575__$1;
                      statearr_28582_28621[1] = 5;
                    } else {
                      var statearr_28583_28622 = state_28575__$1;
                      statearr_28583_28622[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28576 === 15) {
                      var state_28575__$1 = state_28575;
                      var statearr_28587_28623 = state_28575__$1;
                      statearr_28587_28623[2] = null;
                      statearr_28587_28623[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_28576 === 21) {
                        var state_28575__$1 = state_28575;
                        var statearr_28588_28624 = state_28575__$1;
                        statearr_28588_28624[2] = null;
                        statearr_28588_28624[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28576 === 13) {
                          var inst_28529 = state_28575[9];
                          var inst_28530 = state_28575[10];
                          var inst_28527 = state_28575[11];
                          var inst_28528 = state_28575[12];
                          var inst_28537 = state_28575[2];
                          var inst_28538 = inst_28530 + 1;
                          var tmp28584 = inst_28529;
                          var tmp28585 = inst_28527;
                          var tmp28586 = inst_28528;
                          var inst_28527__$1 = tmp28585;
                          var inst_28528__$1 = tmp28586;
                          var inst_28529__$1 = tmp28584;
                          var inst_28530__$1 = inst_28538;
                          var state_28575__$1 = function() {
                            var statearr_28589 = state_28575;
                            statearr_28589[9] = inst_28529__$1;
                            statearr_28589[10] = inst_28530__$1;
                            statearr_28589[11] = inst_28527__$1;
                            statearr_28589[14] = inst_28537;
                            statearr_28589[12] = inst_28528__$1;
                            return statearr_28589;
                          }();
                          var statearr_28590_28625 = state_28575__$1;
                          statearr_28590_28625[2] = null;
                          statearr_28590_28625[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28576 === 22) {
                            var state_28575__$1 = state_28575;
                            var statearr_28591_28626 = state_28575__$1;
                            statearr_28591_28626[2] = null;
                            statearr_28591_28626[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28576 === 6) {
                              var inst_28516 = state_28575[13];
                              var inst_28525 = f.call(null, inst_28516);
                              var inst_28526 = cljs.core.seq.call(null, inst_28525);
                              var inst_28527 = inst_28526;
                              var inst_28528 = null;
                              var inst_28529 = 0;
                              var inst_28530 = 0;
                              var state_28575__$1 = function() {
                                var statearr_28592 = state_28575;
                                statearr_28592[9] = inst_28529;
                                statearr_28592[10] = inst_28530;
                                statearr_28592[11] = inst_28527;
                                statearr_28592[12] = inst_28528;
                                return statearr_28592;
                              }();
                              var statearr_28593_28627 = state_28575__$1;
                              statearr_28593_28627[2] = null;
                              statearr_28593_28627[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28576 === 17) {
                                var inst_28541 = state_28575[7];
                                var inst_28545 = cljs.core.chunk_first.call(null, inst_28541);
                                var inst_28546 = cljs.core.chunk_rest.call(null, inst_28541);
                                var inst_28547 = cljs.core.count.call(null, inst_28545);
                                var inst_28527 = inst_28546;
                                var inst_28528 = inst_28545;
                                var inst_28529 = inst_28547;
                                var inst_28530 = 0;
                                var state_28575__$1 = function() {
                                  var statearr_28594 = state_28575;
                                  statearr_28594[9] = inst_28529;
                                  statearr_28594[10] = inst_28530;
                                  statearr_28594[11] = inst_28527;
                                  statearr_28594[12] = inst_28528;
                                  return statearr_28594;
                                }();
                                var statearr_28595_28628 = state_28575__$1;
                                statearr_28595_28628[2] = null;
                                statearr_28595_28628[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28576 === 3) {
                                  var inst_28573 = state_28575[2];
                                  var state_28575__$1 = state_28575;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28575__$1, inst_28573);
                                } else {
                                  if (state_val_28576 === 12) {
                                    var inst_28561 = state_28575[2];
                                    var state_28575__$1 = state_28575;
                                    var statearr_28596_28629 = state_28575__$1;
                                    statearr_28596_28629[2] = inst_28561;
                                    statearr_28596_28629[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_28576 === 2) {
                                      var state_28575__$1 = state_28575;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28575__$1, 4, in$);
                                    } else {
                                      if (state_val_28576 === 23) {
                                        var inst_28569 = state_28575[2];
                                        var state_28575__$1 = state_28575;
                                        var statearr_28597_28630 = state_28575__$1;
                                        statearr_28597_28630[2] = inst_28569;
                                        statearr_28597_28630[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_28576 === 19) {
                                          var inst_28556 = state_28575[2];
                                          var state_28575__$1 = state_28575;
                                          var statearr_28598_28631 = state_28575__$1;
                                          statearr_28598_28631[2] = inst_28556;
                                          statearr_28598_28631[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_28576 === 11) {
                                            var inst_28527 = state_28575[11];
                                            var inst_28541 = state_28575[7];
                                            var inst_28541__$1 = cljs.core.seq.call(null, inst_28527);
                                            var state_28575__$1 = function() {
                                              var statearr_28599 = state_28575;
                                              statearr_28599[7] = inst_28541__$1;
                                              return statearr_28599;
                                            }();
                                            if (inst_28541__$1) {
                                              var statearr_28600_28632 = state_28575__$1;
                                              statearr_28600_28632[1] = 14;
                                            } else {
                                              var statearr_28601_28633 = state_28575__$1;
                                              statearr_28601_28633[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_28576 === 9) {
                                              var inst_28563 = state_28575[2];
                                              var inst_28564 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_28575__$1 = function() {
                                                var statearr_28602 = state_28575;
                                                statearr_28602[15] = inst_28563;
                                                return statearr_28602;
                                              }();
                                              if (cljs.core.truth_(inst_28564)) {
                                                var statearr_28603_28634 = state_28575__$1;
                                                statearr_28603_28634[1] = 21;
                                              } else {
                                                var statearr_28604_28635 = state_28575__$1;
                                                statearr_28604_28635[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_28576 === 5) {
                                                var inst_28519 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_28575__$1 = state_28575;
                                                var statearr_28605_28636 = state_28575__$1;
                                                statearr_28605_28636[2] = inst_28519;
                                                statearr_28605_28636[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_28576 === 14) {
                                                  var inst_28541 = state_28575[7];
                                                  var inst_28543 = cljs.core.chunked_seq_QMARK_.call(null, inst_28541);
                                                  var state_28575__$1 = state_28575;
                                                  if (inst_28543) {
                                                    var statearr_28606_28637 = state_28575__$1;
                                                    statearr_28606_28637[1] = 17;
                                                  } else {
                                                    var statearr_28607_28638 = state_28575__$1;
                                                    statearr_28607_28638[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_28576 === 16) {
                                                    var inst_28559 = state_28575[2];
                                                    var state_28575__$1 = state_28575;
                                                    var statearr_28608_28639 = state_28575__$1;
                                                    statearr_28608_28639[2] = inst_28559;
                                                    statearr_28608_28639[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_28576 === 10) {
                                                      var inst_28530 = state_28575[10];
                                                      var inst_28528 = state_28575[12];
                                                      var inst_28535 = cljs.core._nth.call(null, inst_28528, inst_28530);
                                                      var state_28575__$1 = state_28575;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28575__$1, 13, out, inst_28535);
                                                    } else {
                                                      if (state_val_28576 === 18) {
                                                        var inst_28541 = state_28575[7];
                                                        var inst_28550 = cljs.core.first.call(null, inst_28541);
                                                        var state_28575__$1 = state_28575;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28575__$1, 20, out, inst_28550);
                                                      } else {
                                                        if (state_val_28576 === 8) {
                                                          var inst_28529 = state_28575[9];
                                                          var inst_28530 = state_28575[10];
                                                          var inst_28532 = inst_28530 < inst_28529;
                                                          var inst_28533 = inst_28532;
                                                          var state_28575__$1 = state_28575;
                                                          if (cljs.core.truth_(inst_28533)) {
                                                            var statearr_28609_28640 = state_28575__$1;
                                                            statearr_28609_28640[1] = 10;
                                                          } else {
                                                            var statearr_28610_28641 = state_28575__$1;
                                                            statearr_28610_28641[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto__);
        return function(switch__26028__auto__, c__26140__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__26029__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__26029__auto____0 = function() {
              var statearr_28614 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28614[0] = cljs$core$async$mapcat_STAR__$_state_machine__26029__auto__;
              statearr_28614[1] = 1;
              return statearr_28614;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__26029__auto____1 = function(state_28575) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_28575);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28615) {
                    if (e28615 instanceof Object) {
                      var ex__26032__auto__ = e28615;
                      var statearr_28616_28642 = state_28575;
                      statearr_28616_28642[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28575);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28615;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28643 = state_28575;
                  state_28575 = G__28643;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__26029__auto__ = function(state_28575) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__26029__auto____1.call(this, state_28575);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__26029__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__26029__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto__);
      }();
      var state__26142__auto__ = function() {
        var statearr_28617 = f__26141__auto__.call(null);
        statearr_28617[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto__;
        return statearr_28617;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto__));
  return c__26140__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var args28644 = [];
  var len__5743__auto___28647 = arguments.length;
  var i__5744__auto___28648 = 0;
  while (true) {
    if (i__5744__auto___28648 < len__5743__auto___28647) {
      args28644.push(arguments[i__5744__auto___28648]);
      var G__28649 = i__5744__auto___28648 + 1;
      i__5744__auto___28648 = G__28649;
      continue;
    } else {
    }
    break;
  }
  var G__28646 = args28644.length;
  switch(G__28646) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28644.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var args28651 = [];
  var len__5743__auto___28654 = arguments.length;
  var i__5744__auto___28655 = 0;
  while (true) {
    if (i__5744__auto___28655 < len__5743__auto___28654) {
      args28651.push(arguments[i__5744__auto___28655]);
      var G__28656 = i__5744__auto___28655 + 1;
      i__5744__auto___28655 = G__28656;
      continue;
    } else {
    }
    break;
  }
  var G__28653 = args28651.length;
  switch(G__28653) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28651.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var args28658 = [];
  var len__5743__auto___28709 = arguments.length;
  var i__5744__auto___28710 = 0;
  while (true) {
    if (i__5744__auto___28710 < len__5743__auto___28709) {
      args28658.push(arguments[i__5744__auto___28710]);
      var G__28711 = i__5744__auto___28710 + 1;
      i__5744__auto___28710 = G__28711;
      continue;
    } else {
    }
    break;
  }
  var G__28660 = args28658.length;
  switch(G__28660) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28658.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26140__auto___28713 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___28713, out) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___28713, out) {
          return function(state_28684) {
            var state_val_28685 = state_28684[1];
            if (state_val_28685 === 7) {
              var inst_28679 = state_28684[2];
              var state_28684__$1 = state_28684;
              var statearr_28686_28714 = state_28684__$1;
              statearr_28686_28714[2] = inst_28679;
              statearr_28686_28714[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28685 === 1) {
                var inst_28661 = null;
                var state_28684__$1 = function() {
                  var statearr_28687 = state_28684;
                  statearr_28687[7] = inst_28661;
                  return statearr_28687;
                }();
                var statearr_28688_28715 = state_28684__$1;
                statearr_28688_28715[2] = null;
                statearr_28688_28715[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28685 === 4) {
                  var inst_28664 = state_28684[8];
                  var inst_28664__$1 = state_28684[2];
                  var inst_28665 = inst_28664__$1 == null;
                  var inst_28666 = cljs.core.not.call(null, inst_28665);
                  var state_28684__$1 = function() {
                    var statearr_28689 = state_28684;
                    statearr_28689[8] = inst_28664__$1;
                    return statearr_28689;
                  }();
                  if (inst_28666) {
                    var statearr_28690_28716 = state_28684__$1;
                    statearr_28690_28716[1] = 5;
                  } else {
                    var statearr_28691_28717 = state_28684__$1;
                    statearr_28691_28717[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28685 === 6) {
                    var state_28684__$1 = state_28684;
                    var statearr_28692_28718 = state_28684__$1;
                    statearr_28692_28718[2] = null;
                    statearr_28692_28718[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28685 === 3) {
                      var inst_28681 = state_28684[2];
                      var inst_28682 = cljs.core.async.close_BANG_.call(null, out);
                      var state_28684__$1 = function() {
                        var statearr_28693 = state_28684;
                        statearr_28693[9] = inst_28681;
                        return statearr_28693;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28684__$1, inst_28682);
                    } else {
                      if (state_val_28685 === 2) {
                        var state_28684__$1 = state_28684;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28684__$1, 4, ch);
                      } else {
                        if (state_val_28685 === 11) {
                          var inst_28664 = state_28684[8];
                          var inst_28673 = state_28684[2];
                          var inst_28661 = inst_28664;
                          var state_28684__$1 = function() {
                            var statearr_28694 = state_28684;
                            statearr_28694[10] = inst_28673;
                            statearr_28694[7] = inst_28661;
                            return statearr_28694;
                          }();
                          var statearr_28695_28719 = state_28684__$1;
                          statearr_28695_28719[2] = null;
                          statearr_28695_28719[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28685 === 9) {
                            var inst_28664 = state_28684[8];
                            var state_28684__$1 = state_28684;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28684__$1, 11, out, inst_28664);
                          } else {
                            if (state_val_28685 === 5) {
                              var inst_28664 = state_28684[8];
                              var inst_28661 = state_28684[7];
                              var inst_28668 = cljs.core._EQ_.call(null, inst_28664, inst_28661);
                              var state_28684__$1 = state_28684;
                              if (inst_28668) {
                                var statearr_28697_28720 = state_28684__$1;
                                statearr_28697_28720[1] = 8;
                              } else {
                                var statearr_28698_28721 = state_28684__$1;
                                statearr_28698_28721[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28685 === 10) {
                                var inst_28676 = state_28684[2];
                                var state_28684__$1 = state_28684;
                                var statearr_28699_28722 = state_28684__$1;
                                statearr_28699_28722[2] = inst_28676;
                                statearr_28699_28722[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28685 === 8) {
                                  var inst_28661 = state_28684[7];
                                  var tmp28696 = inst_28661;
                                  var inst_28661__$1 = tmp28696;
                                  var state_28684__$1 = function() {
                                    var statearr_28700 = state_28684;
                                    statearr_28700[7] = inst_28661__$1;
                                    return statearr_28700;
                                  }();
                                  var statearr_28701_28723 = state_28684__$1;
                                  statearr_28701_28723[2] = null;
                                  statearr_28701_28723[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___28713, out);
        return function(switch__26028__auto__, c__26140__auto___28713, out) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_28705 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_28705[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_28705[1] = 1;
              return statearr_28705;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_28684) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_28684);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28706) {
                    if (e28706 instanceof Object) {
                      var ex__26032__auto__ = e28706;
                      var statearr_28707_28724 = state_28684;
                      statearr_28707_28724[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28684);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28706;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28725 = state_28684;
                  state_28684 = G__28725;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_28684) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_28684);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___28713, out);
      }();
      var state__26142__auto__ = function() {
        var statearr_28708 = f__26141__auto__.call(null);
        statearr_28708[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___28713;
        return statearr_28708;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___28713, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var args28726 = [];
  var len__5743__auto___28796 = arguments.length;
  var i__5744__auto___28797 = 0;
  while (true) {
    if (i__5744__auto___28797 < len__5743__auto___28796) {
      args28726.push(arguments[i__5744__auto___28797]);
      var G__28798 = i__5744__auto___28797 + 1;
      i__5744__auto___28797 = G__28798;
      continue;
    } else {
    }
    break;
  }
  var G__28728 = args28726.length;
  switch(G__28728) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28726.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26140__auto___28800 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___28800, out) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___28800, out) {
          return function(state_28766) {
            var state_val_28767 = state_28766[1];
            if (state_val_28767 === 7) {
              var inst_28762 = state_28766[2];
              var state_28766__$1 = state_28766;
              var statearr_28768_28801 = state_28766__$1;
              statearr_28768_28801[2] = inst_28762;
              statearr_28768_28801[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28767 === 1) {
                var inst_28729 = new Array(n);
                var inst_28730 = inst_28729;
                var inst_28731 = 0;
                var state_28766__$1 = function() {
                  var statearr_28769 = state_28766;
                  statearr_28769[7] = inst_28731;
                  statearr_28769[8] = inst_28730;
                  return statearr_28769;
                }();
                var statearr_28770_28802 = state_28766__$1;
                statearr_28770_28802[2] = null;
                statearr_28770_28802[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28767 === 4) {
                  var inst_28734 = state_28766[9];
                  var inst_28734__$1 = state_28766[2];
                  var inst_28735 = inst_28734__$1 == null;
                  var inst_28736 = cljs.core.not.call(null, inst_28735);
                  var state_28766__$1 = function() {
                    var statearr_28771 = state_28766;
                    statearr_28771[9] = inst_28734__$1;
                    return statearr_28771;
                  }();
                  if (inst_28736) {
                    var statearr_28772_28803 = state_28766__$1;
                    statearr_28772_28803[1] = 5;
                  } else {
                    var statearr_28773_28804 = state_28766__$1;
                    statearr_28773_28804[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28767 === 15) {
                    var inst_28756 = state_28766[2];
                    var state_28766__$1 = state_28766;
                    var statearr_28774_28805 = state_28766__$1;
                    statearr_28774_28805[2] = inst_28756;
                    statearr_28774_28805[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28767 === 13) {
                      var state_28766__$1 = state_28766;
                      var statearr_28775_28806 = state_28766__$1;
                      statearr_28775_28806[2] = null;
                      statearr_28775_28806[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_28767 === 6) {
                        var inst_28731 = state_28766[7];
                        var inst_28752 = inst_28731 > 0;
                        var state_28766__$1 = state_28766;
                        if (cljs.core.truth_(inst_28752)) {
                          var statearr_28776_28807 = state_28766__$1;
                          statearr_28776_28807[1] = 12;
                        } else {
                          var statearr_28777_28808 = state_28766__$1;
                          statearr_28777_28808[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28767 === 3) {
                          var inst_28764 = state_28766[2];
                          var state_28766__$1 = state_28766;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28766__$1, inst_28764);
                        } else {
                          if (state_val_28767 === 12) {
                            var inst_28730 = state_28766[8];
                            var inst_28754 = cljs.core.vec.call(null, inst_28730);
                            var state_28766__$1 = state_28766;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28766__$1, 15, out, inst_28754);
                          } else {
                            if (state_val_28767 === 2) {
                              var state_28766__$1 = state_28766;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28766__$1, 4, ch);
                            } else {
                              if (state_val_28767 === 11) {
                                var inst_28746 = state_28766[2];
                                var inst_28747 = new Array(n);
                                var inst_28730 = inst_28747;
                                var inst_28731 = 0;
                                var state_28766__$1 = function() {
                                  var statearr_28778 = state_28766;
                                  statearr_28778[7] = inst_28731;
                                  statearr_28778[10] = inst_28746;
                                  statearr_28778[8] = inst_28730;
                                  return statearr_28778;
                                }();
                                var statearr_28779_28809 = state_28766__$1;
                                statearr_28779_28809[2] = null;
                                statearr_28779_28809[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28767 === 9) {
                                  var inst_28730 = state_28766[8];
                                  var inst_28744 = cljs.core.vec.call(null, inst_28730);
                                  var state_28766__$1 = state_28766;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28766__$1, 11, out, inst_28744);
                                } else {
                                  if (state_val_28767 === 5) {
                                    var inst_28739 = state_28766[11];
                                    var inst_28731 = state_28766[7];
                                    var inst_28730 = state_28766[8];
                                    var inst_28734 = state_28766[9];
                                    var inst_28738 = inst_28730[inst_28731] = inst_28734;
                                    var inst_28739__$1 = inst_28731 + 1;
                                    var inst_28740 = inst_28739__$1 < n;
                                    var state_28766__$1 = function() {
                                      var statearr_28780 = state_28766;
                                      statearr_28780[11] = inst_28739__$1;
                                      statearr_28780[12] = inst_28738;
                                      return statearr_28780;
                                    }();
                                    if (cljs.core.truth_(inst_28740)) {
                                      var statearr_28781_28810 = state_28766__$1;
                                      statearr_28781_28810[1] = 8;
                                    } else {
                                      var statearr_28782_28811 = state_28766__$1;
                                      statearr_28782_28811[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_28767 === 14) {
                                      var inst_28759 = state_28766[2];
                                      var inst_28760 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_28766__$1 = function() {
                                        var statearr_28784 = state_28766;
                                        statearr_28784[13] = inst_28759;
                                        return statearr_28784;
                                      }();
                                      var statearr_28785_28812 = state_28766__$1;
                                      statearr_28785_28812[2] = inst_28760;
                                      statearr_28785_28812[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_28767 === 10) {
                                        var inst_28750 = state_28766[2];
                                        var state_28766__$1 = state_28766;
                                        var statearr_28786_28813 = state_28766__$1;
                                        statearr_28786_28813[2] = inst_28750;
                                        statearr_28786_28813[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_28767 === 8) {
                                          var inst_28739 = state_28766[11];
                                          var inst_28730 = state_28766[8];
                                          var tmp28783 = inst_28730;
                                          var inst_28730__$1 = tmp28783;
                                          var inst_28731 = inst_28739;
                                          var state_28766__$1 = function() {
                                            var statearr_28787 = state_28766;
                                            statearr_28787[7] = inst_28731;
                                            statearr_28787[8] = inst_28730__$1;
                                            return statearr_28787;
                                          }();
                                          var statearr_28788_28814 = state_28766__$1;
                                          statearr_28788_28814[2] = null;
                                          statearr_28788_28814[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___28800, out);
        return function(switch__26028__auto__, c__26140__auto___28800, out) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_28792 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28792[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_28792[1] = 1;
              return statearr_28792;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_28766) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_28766);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28793) {
                    if (e28793 instanceof Object) {
                      var ex__26032__auto__ = e28793;
                      var statearr_28794_28815 = state_28766;
                      statearr_28794_28815[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28766);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28793;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28816 = state_28766;
                  state_28766 = G__28816;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_28766) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_28766);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___28800, out);
      }();
      var state__26142__auto__ = function() {
        var statearr_28795 = f__26141__auto__.call(null);
        statearr_28795[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___28800;
        return statearr_28795;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___28800, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var args28817 = [];
  var len__5743__auto___28891 = arguments.length;
  var i__5744__auto___28892 = 0;
  while (true) {
    if (i__5744__auto___28892 < len__5743__auto___28891) {
      args28817.push(arguments[i__5744__auto___28892]);
      var G__28893 = i__5744__auto___28892 + 1;
      i__5744__auto___28892 = G__28893;
      continue;
    } else {
    }
    break;
  }
  var G__28819 = args28817.length;
  switch(G__28819) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28817.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26140__auto___28895 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___28895, out) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___28895, out) {
          return function(state_28861) {
            var state_val_28862 = state_28861[1];
            if (state_val_28862 === 7) {
              var inst_28857 = state_28861[2];
              var state_28861__$1 = state_28861;
              var statearr_28863_28896 = state_28861__$1;
              statearr_28863_28896[2] = inst_28857;
              statearr_28863_28896[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28862 === 1) {
                var inst_28820 = [];
                var inst_28821 = inst_28820;
                var inst_28822 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_28861__$1 = function() {
                  var statearr_28864 = state_28861;
                  statearr_28864[7] = inst_28822;
                  statearr_28864[8] = inst_28821;
                  return statearr_28864;
                }();
                var statearr_28865_28897 = state_28861__$1;
                statearr_28865_28897[2] = null;
                statearr_28865_28897[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28862 === 4) {
                  var inst_28825 = state_28861[9];
                  var inst_28825__$1 = state_28861[2];
                  var inst_28826 = inst_28825__$1 == null;
                  var inst_28827 = cljs.core.not.call(null, inst_28826);
                  var state_28861__$1 = function() {
                    var statearr_28866 = state_28861;
                    statearr_28866[9] = inst_28825__$1;
                    return statearr_28866;
                  }();
                  if (inst_28827) {
                    var statearr_28867_28898 = state_28861__$1;
                    statearr_28867_28898[1] = 5;
                  } else {
                    var statearr_28868_28899 = state_28861__$1;
                    statearr_28868_28899[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28862 === 15) {
                    var inst_28851 = state_28861[2];
                    var state_28861__$1 = state_28861;
                    var statearr_28869_28900 = state_28861__$1;
                    statearr_28869_28900[2] = inst_28851;
                    statearr_28869_28900[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28862 === 13) {
                      var state_28861__$1 = state_28861;
                      var statearr_28870_28901 = state_28861__$1;
                      statearr_28870_28901[2] = null;
                      statearr_28870_28901[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_28862 === 6) {
                        var inst_28821 = state_28861[8];
                        var inst_28846 = inst_28821.length;
                        var inst_28847 = inst_28846 > 0;
                        var state_28861__$1 = state_28861;
                        if (cljs.core.truth_(inst_28847)) {
                          var statearr_28871_28902 = state_28861__$1;
                          statearr_28871_28902[1] = 12;
                        } else {
                          var statearr_28872_28903 = state_28861__$1;
                          statearr_28872_28903[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28862 === 3) {
                          var inst_28859 = state_28861[2];
                          var state_28861__$1 = state_28861;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28861__$1, inst_28859);
                        } else {
                          if (state_val_28862 === 12) {
                            var inst_28821 = state_28861[8];
                            var inst_28849 = cljs.core.vec.call(null, inst_28821);
                            var state_28861__$1 = state_28861;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28861__$1, 15, out, inst_28849);
                          } else {
                            if (state_val_28862 === 2) {
                              var state_28861__$1 = state_28861;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28861__$1, 4, ch);
                            } else {
                              if (state_val_28862 === 11) {
                                var inst_28825 = state_28861[9];
                                var inst_28829 = state_28861[10];
                                var inst_28839 = state_28861[2];
                                var inst_28840 = [];
                                var inst_28841 = inst_28840.push(inst_28825);
                                var inst_28821 = inst_28840;
                                var inst_28822 = inst_28829;
                                var state_28861__$1 = function() {
                                  var statearr_28873 = state_28861;
                                  statearr_28873[11] = inst_28839;
                                  statearr_28873[7] = inst_28822;
                                  statearr_28873[12] = inst_28841;
                                  statearr_28873[8] = inst_28821;
                                  return statearr_28873;
                                }();
                                var statearr_28874_28904 = state_28861__$1;
                                statearr_28874_28904[2] = null;
                                statearr_28874_28904[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28862 === 9) {
                                  var inst_28821 = state_28861[8];
                                  var inst_28837 = cljs.core.vec.call(null, inst_28821);
                                  var state_28861__$1 = state_28861;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28861__$1, 11, out, inst_28837);
                                } else {
                                  if (state_val_28862 === 5) {
                                    var inst_28822 = state_28861[7];
                                    var inst_28825 = state_28861[9];
                                    var inst_28829 = state_28861[10];
                                    var inst_28829__$1 = f.call(null, inst_28825);
                                    var inst_28830 = cljs.core._EQ_.call(null, inst_28829__$1, inst_28822);
                                    var inst_28831 = cljs.core.keyword_identical_QMARK_.call(null, inst_28822, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_28832 = inst_28830 || inst_28831;
                                    var state_28861__$1 = function() {
                                      var statearr_28875 = state_28861;
                                      statearr_28875[10] = inst_28829__$1;
                                      return statearr_28875;
                                    }();
                                    if (cljs.core.truth_(inst_28832)) {
                                      var statearr_28876_28905 = state_28861__$1;
                                      statearr_28876_28905[1] = 8;
                                    } else {
                                      var statearr_28877_28906 = state_28861__$1;
                                      statearr_28877_28906[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_28862 === 14) {
                                      var inst_28854 = state_28861[2];
                                      var inst_28855 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_28861__$1 = function() {
                                        var statearr_28879 = state_28861;
                                        statearr_28879[13] = inst_28854;
                                        return statearr_28879;
                                      }();
                                      var statearr_28880_28907 = state_28861__$1;
                                      statearr_28880_28907[2] = inst_28855;
                                      statearr_28880_28907[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_28862 === 10) {
                                        var inst_28844 = state_28861[2];
                                        var state_28861__$1 = state_28861;
                                        var statearr_28881_28908 = state_28861__$1;
                                        statearr_28881_28908[2] = inst_28844;
                                        statearr_28881_28908[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_28862 === 8) {
                                          var inst_28825 = state_28861[9];
                                          var inst_28829 = state_28861[10];
                                          var inst_28821 = state_28861[8];
                                          var inst_28834 = inst_28821.push(inst_28825);
                                          var tmp28878 = inst_28821;
                                          var inst_28821__$1 = tmp28878;
                                          var inst_28822 = inst_28829;
                                          var state_28861__$1 = function() {
                                            var statearr_28882 = state_28861;
                                            statearr_28882[7] = inst_28822;
                                            statearr_28882[14] = inst_28834;
                                            statearr_28882[8] = inst_28821__$1;
                                            return statearr_28882;
                                          }();
                                          var statearr_28883_28909 = state_28861__$1;
                                          statearr_28883_28909[2] = null;
                                          statearr_28883_28909[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___28895, out);
        return function(switch__26028__auto__, c__26140__auto___28895, out) {
          return function() {
            var cljs$core$async$state_machine__26029__auto__ = null;
            var cljs$core$async$state_machine__26029__auto____0 = function() {
              var statearr_28887 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28887[0] = cljs$core$async$state_machine__26029__auto__;
              statearr_28887[1] = 1;
              return statearr_28887;
            };
            var cljs$core$async$state_machine__26029__auto____1 = function(state_28861) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_28861);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e28888) {
                    if (e28888 instanceof Object) {
                      var ex__26032__auto__ = e28888;
                      var statearr_28889_28910 = state_28861;
                      statearr_28889_28910[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28861);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28888;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28911 = state_28861;
                  state_28861 = G__28911;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26029__auto__ = function(state_28861) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26029__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26029__auto____1.call(this, state_28861);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26029__auto____0;
            cljs$core$async$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26029__auto____1;
            return cljs$core$async$state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___28895, out);
      }();
      var state__26142__auto__ = function() {
        var statearr_28890 = f__26141__auto__.call(null);
        statearr_28890[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___28895;
        return statearr_28890;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___28895, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return !!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.FreeList");
goog.async.FreeList = goog.defineClass(null, {constructor:function(create, reset, limit) {
  this.limit_ = limit;
  this.create_ = create;
  this.reset_ = reset;
  this.occupants_ = 0;
  this.head_ = null;
}, get:function() {
  var item;
  if (this.occupants_ > 0) {
    this.occupants_--;
    item = this.head_;
    this.head_ = item.next;
    item.next = null;
  } else {
    item = this.create_();
  }
  return item;
}, put:function(item) {
  this.reset_(item);
  if (this.occupants_ < this.limit_) {
    this.occupants_++;
    item.next = this.head_;
    this.head_ = item;
  }
}, occupants:function() {
  return this.occupants_;
}});
goog.provide("goog.async.WorkItem");
goog.provide("goog.async.WorkQueue");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.async.WorkQueue = function() {
  this.workHead_ = null;
  this.workTail_ = null;
};
goog.define("goog.async.WorkQueue.DEFAULT_MAX_UNUSED", 100);
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(item) {
  item.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(fn, scope) {
  var item = this.getUnusedItem_();
  item.set(fn, scope);
  if (this.workTail_) {
    this.workTail_.next = item;
    this.workTail_ = item;
  } else {
    goog.asserts.assert(!this.workHead_);
    this.workHead_ = item;
    this.workTail_ = item;
  }
};
goog.async.WorkQueue.prototype.remove = function() {
  var item = null;
  if (this.workHead_) {
    item = this.workHead_;
    this.workHead_ = this.workHead_.next;
    if (!this.workHead_) {
      this.workTail_ = null;
    }
    item.next = null;
  }
  return item;
};
goog.async.WorkQueue.prototype.returnUnused = function(item) {
  goog.async.WorkQueue.freelist_.put(item);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.WorkItem.prototype.set = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.provide("goog.async.run");
goog.require("goog.async.WorkQueue");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.add(callback, opt_context);
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve(undefined);
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(opt_realSetTimeout) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    if (opt_realSetTimeout) {
      opt_realSetTimeout(goog.async.run.processWorkQueue);
    }
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
if (goog.DEBUG) {
  goog.async.run.resetQueue = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = new goog.async.WorkQueue;
  };
}
goog.async.run.processWorkQueue = function() {
  var item = null;
  while (item = goog.async.run.workQueue_.remove()) {
    try {
      item.fn.call(item.scope);
    } catch (e) {
      goog.async.throwException(e);
    }
    goog.async.run.workQueue_.returnUnused(item);
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.callbackEntriesTail_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  if (resolver != goog.nullFunction) {
    try {
      var self = this;
      resolver.call(opt_context, function(value) {
        self.resolve_(goog.Promise.State_.FULFILLED, value);
      }, function(reason) {
        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {
          try {
            if (reason instanceof Error) {
              throw reason;
            } else {
              throw new Error("Promise rejected.");
            }
          } catch (e) {
          }
        }
        self.resolve_(goog.Promise.State_.REJECTED, reason);
      });
    } catch (e) {
      this.resolve_(goog.Promise.State_.REJECTED, e);
    }
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.next = null;
  this.always = false;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.always = false;
};
goog.define("goog.Promise.DEFAULT_MAX_UNUSED", 100);
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(item) {
  item.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {
  var entry = goog.Promise.freelist_.get();
  entry.onFulfilled = onFulfilled;
  entry.onRejected = onRejected;
  entry.context = context;
  return entry;
};
goog.Promise.returnEntry_ = function(entry) {
  goog.Promise.freelist_.put(entry);
};
goog.Promise.resolve = function(opt_value) {
  if (opt_value instanceof goog.Promise) {
    return opt_value;
  }
  var promise = new goog.Promise(goog.nullFunction);
  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);
  return promise;
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {
  var isThenable = goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);
  if (!isThenable) {
    goog.async.run(goog.partial(onFulfilled, value));
  }
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.allSettled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toSettle = promises.length;
    var results = [];
    if (!toSettle) {
      resolve(results);
      return;
    }
    var onSettled = function(index, fulfilled, result) {
      toSettle--;
      results[index] = fulfilled ? {fulfilled:true, value:result} : {fulfilled:false, reason:result};
      if (toSettle == 0) {
        resolve(results);
      }
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, true), goog.partial(onSettled, i, false));
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));
};
goog.Promise.prototype.thenAlways = function(onSettled, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);
  entry.always = true;
  this.addCallbackEntry_(entry);
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
      this.parent_ = null;
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childEntry = null;
  var beforeChildEntry = null;
  for (var entry = this.callbackEntries_;entry;entry = entry.next) {
    if (!entry.always) {
      childCount++;
      if (entry.child == childPromise) {
        childEntry = entry;
      }
      if (childEntry && childCount > 1) {
        break;
      }
    }
    if (!childEntry) {
      beforeChildEntry = entry;
    }
  }
  if (childEntry) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      if (beforeChildEntry) {
        this.removeEntryAfter_(beforeChildEntry);
      } else {
        this.popEntry_();
      }
      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  this.queueEntry_(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_(callbackEntry);
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  }
  this.state_ = goog.Promise.State_.BLOCKED;
  var isThenable = goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);
  if (isThenable) {
    return;
  }
  this.result_ = x;
  this.state_ = state;
  this.parent_ = null;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {
  if (value instanceof goog.Promise) {
    value.thenVoid(onFulfilled, onRejected, context);
    return true;
  } else {
    if (goog.Thenable.isImplementedBy(value)) {
      value = (value);
      value.then(onFulfilled, onRejected, context);
      return true;
    } else {
      if (goog.isObject(value)) {
        try {
          var then = value["then"];
          if (goog.isFunction(then)) {
            goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context);
            return true;
          }
        } catch (e) {
          onRejected.call(context, e);
          return true;
        }
      }
    }
  }
  return false;
};
goog.Promise.tryThen_ = function(thenable, then, onFulfilled, onRejected, context) {
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      onFulfilled.call(context, value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      onRejected.call(context, reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(entry) {
  goog.asserts.assert(entry.onFulfilled != null);
  if (this.callbackEntriesTail_) {
    this.callbackEntriesTail_.next = entry;
    this.callbackEntriesTail_ = entry;
  } else {
    this.callbackEntries_ = entry;
    this.callbackEntriesTail_ = entry;
  }
};
goog.Promise.prototype.popEntry_ = function() {
  var entry = null;
  if (this.callbackEntries_) {
    entry = this.callbackEntries_;
    this.callbackEntries_ = entry.next;
    entry.next = null;
  }
  if (!this.callbackEntries_) {
    this.callbackEntriesTail_ = null;
  }
  if (entry != null) {
    goog.asserts.assert(entry.onFulfilled != null);
  }
  return entry;
};
goog.Promise.prototype.removeEntryAfter_ = function(previous) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(previous != null);
  if (previous.next == this.callbackEntriesTail_) {
    this.callbackEntriesTail_ = previous;
  }
  previous.next = previous.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  var entry = null;
  while (entry = this.popEntry_()) {
    if (goog.Promise.LONG_STACK_TRACES) {
      this.currentStep_++;
    }
    this.executeCallback_(entry, this.state_, this.result_);
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always) {
    this.removeUnhandledRejection_();
  }
  if (callbackEntry.child) {
    callbackEntry.child.parent_ = null;
    goog.Promise.invokeCallback_(callbackEntry, state, result);
  } else {
    try {
      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  }
  goog.Promise.returnEntry_(callbackEntry);
};
goog.Promise.invokeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled.call(callbackEntry.context, result);
  } else {
    if (callbackEntry.onRejected) {
      callbackEntry.onRejected.call(callbackEntry.context, result);
    }
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    callback.call(opt_scope);
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.operaVersion_ = function() {
  var version = goog.global.opera.version;
  try {
    return version();
  } catch (e) {
    return version;
  }
};
goog.userAgent.determineVersion_ = function() {
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    return goog.userAgent.operaVersion_();
  }
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", 
CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", 
LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", 
TEXTINPUT:"textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", 
DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  if (!goog.isNull(relevantTouch)) {
    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX : relevantTouch.pageX;
    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY : relevantTouch.pageY;
    this.screenX = relevantTouch.screenX || 0;
    this.screenY = relevantTouch.screenY || 0;
  } else {
    this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
    this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
    this.screenX = e.screenX || 0;
    this.screenY = e.screenY || 0;
  }
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.Promise");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return goog.Timer.INVALID_TIMEOUT_ID_;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.Timer.promise = function(delay, opt_result) {
  var timerKey = null;
  return (new goog.Promise(function(resolve, reject) {
    timerKey = goog.Timer.callOnce(function() {
      resolve(opt_result);
    }, delay);
    if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {
      reject(new Error("Failed to schedule timer."));
    }
  })).thenCatch(function(error) {
    goog.Timer.clear(timerKey);
    throw error;
  });
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return (eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return (eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return (new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  if (object == null) {
    sb.push("null");
    return;
  }
  if (typeof object == "object") {
    if (goog.isArray(object)) {
      this.serializeArray(object, sb);
      return;
    } else {
      if (object instanceof String || object instanceof Number || object instanceof Boolean) {
        object = object.valueOf();
      } else {
        this.serializeObject_((object), sb);
        return;
      }
    }
  }
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(String(object));
      break;
    case "function":
      sb.push("null");
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    var rv = goog.json.Serializer.charToJsonCharCache_[c];
    if (!rv) {
      rv = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1);
      goog.json.Serializer.charToJsonCharCache_[c] = rv;
    }
    return rv;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? String(n) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-,.\"'%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
          goog.asserts.fail("String value requires balanced quotes, got: " + value);
          value = goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0;i < value.length;i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_RE_ = /^[-,."'%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "'");
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return (goog.global.URL);
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return (goog.global.webkitURL);
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return (goog.global);
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u06ef\u06fa-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm))$/i;
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "'");
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, opt_attributes, opt_content);
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0;i < styleSheet.length;i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (goog.isString(value)) {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string,' + ' value "' + value + '" given.');
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.html.SafeScript");
goog.require("goog.asserts");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = true;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  if (scriptString.length === 0) {
    return goog.html.SafeScript.EMPTY;
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeScript.prototype.toString = function() {
    return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
  };
}
goog.html.SafeScript.unwrap = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "'");
    return "type_error:SafeScript";
  }
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.html.uncheckedconversions");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmpty(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = Math.sign || function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return (goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return (this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push((key));
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.string.Const");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  var html = goog.debug.exposeExceptionAsHtml(err, opt_fn);
  return goog.html.SafeHtml.unwrap(html);
};
goog.debug.exposeExceptionAsHtml = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var viewSourceUrl = goog.debug.createViewSourceUrl_(e.fileName);
    var error = goog.html.SafeHtml.concat(goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("Message: " + e.message + "\nUrl: "), goog.html.SafeHtml.create("a", {href:viewSourceUrl, target:"_new"}, e.fileName), goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + e.stack + "-\x3e " + "[end]\n\nJS stack traversal:\n" + goog.debug.getStacktrace(opt_fn) + "-\x3e "));
    return error;
  } catch (e2) {
    return goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces("Exception trying to expose exception! You win, we lose. " + e2);
  }
};
goog.debug.createViewSourceUrl_ = function(opt_fileName) {
  if (!goog.isDefAndNotNull(opt_fileName)) {
    opt_fileName = "";
  }
  if (!/^https?:\/\//i.test(opt_fileName)) {
    return goog.html.SafeUrl.fromConstant(goog.string.Const.from("sanitizedviewsrc"));
  }
  var sanitizedFileName = goog.html.SafeUrl.sanitize(opt_fileName);
  return goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("view-source scheme plus HTTP/HTTPS URL"), "view-source:" + goog.html.SafeUrl.unwrap(sanitizedFileName));
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return {"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return {"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.runtimeType = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return !!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return (goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress", DOWNLOAD_PROGRESS:"downloadprogress", UPLOAD_PROGRESS:"uploadprogress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return (this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return (uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0;i < pairs.length;i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.progressEventsEnabled_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {
  this.progressEventsEnabled_ = enabled;
};
goog.net.XhrIo.prototype.getProgressEventsEnabled = function() {
  return this.progressEventsEnabled_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  if (this.getProgressEventsEnabled() && "onprogress" in this.xhr_) {
    this.xhr_.onprogress = goog.bind(function(e) {
      this.onProgressHandler_(e, true);
    }, this);
    if (this.xhr_.upload) {
      this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);
    }
  }
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {
  goog.asserts.assert(e.type === goog.net.EventType.PROGRESS, "goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));
};
goog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {
  return ({type:eventType, lengthComputable:e.lengthComputable, loaded:e.loaded, total:e.total});
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return !!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return -1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmptyOrWhitespace(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.structs.Queue");
goog.require("goog.array");
goog.structs.Queue = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.maybeFlip_ = function() {
  if (goog.array.isEmpty(this.front_)) {
    this.front_ = this.back_;
    this.front_.reverse();
    this.back_ = [];
  }
};
goog.structs.Queue.prototype.enqueue = function(element) {
  this.back_.push(element);
};
goog.structs.Queue.prototype.dequeue = function() {
  this.maybeFlip_();
  return this.front_.pop();
};
goog.structs.Queue.prototype.peek = function() {
  this.maybeFlip_();
  return goog.array.peek(this.front_);
};
goog.structs.Queue.prototype.getCount = function() {
  return this.front_.length + this.back_.length;
};
goog.structs.Queue.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.front_) && goog.array.isEmpty(this.back_);
};
goog.structs.Queue.prototype.clear = function() {
  this.front_ = [];
  this.back_ = [];
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.front_, obj) || goog.array.contains(this.back_, obj);
};
goog.structs.Queue.prototype.remove = function(obj) {
  var index = goog.array.lastIndexOf(this.front_, obj);
  if (index < 0) {
    return goog.array.remove(this.back_, obj);
  }
  goog.array.removeAt(this.front_, index);
  return true;
};
goog.structs.Queue.prototype.getValues = function() {
  var res = [];
  for (var i = this.front_.length - 1;i >= 0;--i) {
    res.push(this.front_[i]);
  }
  var len = this.back_.length;
  for (var i = 0;i < len;++i) {
    res.push(this.back_[i]);
  }
  return res;
};
goog.provide("goog.structs.Pool");
goog.require("goog.Disposable");
goog.require("goog.structs.Queue");
goog.require("goog.structs.Set");
goog.structs.Pool = function(opt_minCount, opt_maxCount) {
  goog.Disposable.call(this);
  this.minCount_ = opt_minCount || 0;
  this.maxCount_ = opt_maxCount || 10;
  if (this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.delay = 0;
  this.lastAccess = null;
  this.adjustForMinMax();
  var magicProps = {canBeReused:0};
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(min) {
  if (min > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = min;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setMaximumCount = function(max) {
  if (max < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = max;
  this.adjustForMinMax();
};
goog.structs.Pool.prototype.setDelay = function(delay) {
  this.delay = delay;
};
goog.structs.Pool.prototype.getObject = function() {
  var time = goog.now();
  if (goog.isDefAndNotNull(this.lastAccess) && time - this.lastAccess < this.delay) {
    return undefined;
  }
  var obj = this.removeFreeObject_();
  if (obj) {
    this.lastAccess = time;
    this.inUseSet_.add(obj);
  }
  return obj;
};
goog.structs.Pool.prototype.releaseObject = function(obj) {
  if (this.inUseSet_.remove(obj)) {
    this.addFreeObject(obj);
    return true;
  }
  return false;
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  var obj;
  while (this.getFreeCount() > 0) {
    obj = this.freeQueue_.dequeue();
    if (!this.objectCanBeReused(obj)) {
      this.adjustForMinMax();
    } else {
      break;
    }
  }
  if (!obj && this.getCount() < this.maxCount_) {
    obj = this.createObject();
  }
  return obj;
};
goog.structs.Pool.prototype.addFreeObject = function(obj) {
  this.inUseSet_.remove(obj);
  if (this.objectCanBeReused(obj) && this.getCount() < this.maxCount_) {
    this.freeQueue_.enqueue(obj);
  } else {
    this.disposeObject(obj);
  }
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  var freeQueue = this.freeQueue_;
  while (this.getCount() < this.minCount_) {
    freeQueue.enqueue(this.createObject());
  }
  while (this.getCount() > this.maxCount_ && this.getFreeCount() > 0) {
    this.disposeObject(freeQueue.dequeue());
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return {};
};
goog.structs.Pool.prototype.disposeObject = function(obj) {
  if (typeof obj.dispose == "function") {
    obj.dispose();
  } else {
    for (var i in obj) {
      obj[i] = null;
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(obj) {
  if (typeof obj.canBeReused == "function") {
    return obj.canBeReused();
  }
  return true;
};
goog.structs.Pool.prototype.contains = function(obj) {
  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj);
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount();
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount();
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty();
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if (this.getInUseCount() > 0) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  var freeQueue = this.freeQueue_;
  while (!freeQueue.isEmpty()) {
    this.disposeObject(freeQueue.dequeue());
  }
  delete this.freeQueue_;
};
goog.provide("goog.structs.Node");
goog.structs.Node = function(key, value) {
  this.key_ = key;
  this.value_ = value;
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_;
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_;
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_);
};
goog.provide("goog.structs.Heap");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.structs.Node");
goog.structs.Heap = function(opt_heap) {
  this.nodes_ = [];
  if (opt_heap) {
    this.insertAll(opt_heap);
  }
};
goog.structs.Heap.prototype.insert = function(key, value) {
  var node = new goog.structs.Node(key, value);
  var nodes = this.nodes_;
  nodes.push(node);
  this.moveUp_(nodes.length - 1);
};
goog.structs.Heap.prototype.insertAll = function(heap) {
  var keys, values;
  if (heap instanceof goog.structs.Heap) {
    keys = heap.getKeys();
    values = heap.getValues();
    if (heap.getCount() <= 0) {
      var nodes = this.nodes_;
      for (var i = 0;i < keys.length;i++) {
        nodes.push(new goog.structs.Node(keys[i], values[i]));
      }
      return;
    }
  } else {
    keys = goog.object.getKeys(heap);
    values = goog.object.getValues(heap);
  }
  for (var i = 0;i < keys.length;i++) {
    this.insert(keys[i], values[i]);
  }
};
goog.structs.Heap.prototype.remove = function() {
  var nodes = this.nodes_;
  var count = nodes.length;
  var rootNode = nodes[0];
  if (count <= 0) {
    return undefined;
  } else {
    if (count == 1) {
      goog.array.clear(nodes);
    } else {
      nodes[0] = nodes.pop();
      this.moveDown_(0);
    }
  }
  return rootNode.getValue();
};
goog.structs.Heap.prototype.peek = function() {
  var nodes = this.nodes_;
  if (nodes.length == 0) {
    return undefined;
  }
  return nodes[0].getValue();
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey();
};
goog.structs.Heap.prototype.moveDown_ = function(index) {
  var nodes = this.nodes_;
  var count = nodes.length;
  var node = nodes[index];
  while (index < count >> 1) {
    var leftChildIndex = this.getLeftChildIndex_(index);
    var rightChildIndex = this.getRightChildIndex_(index);
    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;
    if (nodes[smallerChildIndex].getKey() > node.getKey()) {
      break;
    }
    nodes[index] = nodes[smallerChildIndex];
    index = smallerChildIndex;
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.moveUp_ = function(index) {
  var nodes = this.nodes_;
  var node = nodes[index];
  while (index > 0) {
    var parentIndex = this.getParentIndex_(index);
    if (nodes[parentIndex].getKey() > node.getKey()) {
      nodes[index] = nodes[parentIndex];
      index = parentIndex;
    } else {
      break;
    }
  }
  nodes[index] = node;
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {
  return index * 2 + 1;
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(index) {
  return index * 2 + 2;
};
goog.structs.Heap.prototype.getParentIndex_ = function(index) {
  return index - 1 >> 1;
};
goog.structs.Heap.prototype.getValues = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getValue());
  }
  return rv;
};
goog.structs.Heap.prototype.getKeys = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for (var i = 0;i < l;i++) {
    rv.push(nodes[i].getKey());
  }
  return rv;
};
goog.structs.Heap.prototype.containsValue = function(val) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getValue() == val;
  });
};
goog.structs.Heap.prototype.containsKey = function(key) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getKey() == key;
  });
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this);
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length;
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_);
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_);
};
goog.provide("goog.structs.PriorityQueue");
goog.require("goog.structs.Heap");
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this);
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {
  this.insert(priority, value);
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove();
};
goog.provide("goog.structs.PriorityPool");
goog.require("goog.structs.Pool");
goog.require("goog.structs.PriorityQueue");
goog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {
  this.delayTimeout_ = undefined;
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, opt_minCount, opt_maxCount);
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.setDelay = function(delay) {
  goog.structs.PriorityPool.base(this, "setDelay", delay);
  if (!goog.isDefAndNotNull(this.lastAccess)) {
    return;
  }
  goog.global.clearTimeout(this.delayTimeout_);
  this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - goog.now());
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {
  if (!opt_callback) {
    var result = goog.structs.PriorityPool.base(this, "getObject");
    if (result && this.delay) {
      this.delayTimeout_ = goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay);
    }
    return result;
  }
  var priority = goog.isDef(opt_priority) ? opt_priority : goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(priority, opt_callback);
  this.handleQueueRequests_();
  return undefined;
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  var requestQueue = this.requestQueue_;
  while (requestQueue.getCount() > 0) {
    var obj = this.getObject();
    if (!obj) {
      return;
    } else {
      var requestCallback = requestQueue.dequeue();
      requestCallback.apply(this, [obj]);
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(obj) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_();
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  goog.global.clearTimeout(this.delayTimeout_);
  this.requestQueue_.clear();
  this.requestQueue_ = null;
};
goog.provide("goog.net.XhrIoPool");
goog.require("goog.net.XhrIo");
goog.require("goog.structs.PriorityPool");
goog.net.XhrIoPool = function(opt_headers, opt_minCount, opt_maxCount) {
  this.headers_ = opt_headers;
  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var xhrIo = new goog.net.XhrIo;
  var headers = this.headers_;
  if (headers) {
    headers.forEach(function(value, key) {
      xhrIo.headers.set(key, value);
    });
  }
  return xhrIo;
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(obj) {
  var xhr = (obj);
  return !xhr.isDisposed() && !xhr.isActive();
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__23940__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__23940 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__23941__i = 0, G__23941__a = new Array(arguments.length - 0);
        while (G__23941__i < G__23941__a.length) {
          G__23941__a[G__23941__i] = arguments[G__23941__i + 0];
          ++G__23941__i;
        }
        args = new cljs.core.IndexedSeq(G__23941__a, 0);
      }
      return G__23940__delegate.call(this, args);
    };
    G__23940.cljs$lang$maxFixedArity = 0;
    G__23940.cljs$lang$applyTo = function(arglist__23942) {
      var args = cljs.core.seq(arglist__23942);
      return G__23940__delegate(args);
    };
    G__23940.cljs$core$IFn$_invoke$arity$variadic = G__23940__delegate;
    return G__23940;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args23943 = [];
  var len__5743__auto___23946 = arguments.length;
  var i__5744__auto___23947 = 0;
  while (true) {
    if (i__5744__auto___23947 < len__5743__auto___23946) {
      args23943.push(arguments[i__5744__auto___23947]);
      var G__23948 = i__5744__auto___23947 + 1;
      i__5744__auto___23947 = G__23948;
      continue;
    } else {
    }
    break;
  }
  var G__23945 = args23943.length;
  switch(G__23945) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23943.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__23950 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__23951 = cljs.core.next.call(null, coll__$1);
      sb = G__23950;
      coll__$1 = G__23951;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__23952 = sb;
      var G__23953 = coll__$2;
      sb = G__23952;
      coll__$1 = G__23953;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__23954 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__23954;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__23958 = cljs.core._EQ__EQ_;
    var expr__23959 = limit;
    if (cljs.core.truth_(pred__23958.call(null, 1, expr__23959))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__23958.call(null, 2, expr__23959))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args23961 = [];
  var len__5743__auto___23964 = arguments.length;
  var i__5744__auto___23965 = 0;
  while (true) {
    if (i__5744__auto___23965 < len__5743__auto___23964) {
      args23961.push(arguments[i__5744__auto___23965]);
      var G__23966 = i__5744__auto___23965 + 1;
      i__5744__auto___23965 = G__23966;
      continue;
    } else {
    }
    break;
  }
  var G__23963 = args23961.length;
  switch(G__23963) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23961.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__23968 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__23969 = limit__$1 - 1;
          var G__23970 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__23968;
          limit__$1 = G__23969;
          parts = G__23970;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__23971 = index - 1;
        index = G__23971;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__23972 = index + 1;
      index = G__23972;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args23973 = [];
  var len__5743__auto___23976 = arguments.length;
  var i__5744__auto___23977 = 0;
  while (true) {
    if (i__5744__auto___23977 < len__5743__auto___23976) {
      args23973.push(arguments[i__5744__auto___23977]);
      var G__23978 = i__5744__auto___23977 + 1;
      i__5744__auto___23977 = G__23978;
      continue;
    } else {
    }
    break;
  }
  var G__23975 = args23973.length;
  switch(G__23975) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23973.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args23980 = [];
  var len__5743__auto___23983 = arguments.length;
  var i__5744__auto___23984 = 0;
  while (true) {
    if (i__5744__auto___23984 < len__5743__auto___23983) {
      args23980.push(arguments[i__5744__auto___23984]);
      var G__23985 = i__5744__auto___23984 + 1;
      i__5744__auto___23984 = G__23985;
      continue;
    } else {
    }
    break;
  }
  var G__23982 = args23980.length;
  switch(G__23982) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23980.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.tools.reader.impl.utils");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
cljs.tools.reader.impl.utils.char$ = function cljs$tools$reader$impl$utils$char(x) {
  if (x == null) {
    return null;
  } else {
    return cljs.core.char$.call(null, x);
  }
};
cljs.tools.reader.impl.utils.ex_info_QMARK_ = function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex) {
  return ex instanceof cljs.core.ExceptionInfo;
};
cljs.tools.reader.impl.utils.ReaderConditional = function(splicing_QMARK_, form, __meta, __extmap, __hash) {
  this.splicing_QMARK_ = splicing_QMARK_;
  this.form = form;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5299__auto__, k__5300__auto__) {
  var self__ = this;
  var this__5299__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5299__auto____$1, k__5300__auto__, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5301__auto__, k23990, else__5302__auto__) {
  var self__ = this;
  var this__5301__auto____$1 = this;
  var G__23992 = k23990 instanceof cljs.core.Keyword ? k23990.fqn : null;
  switch(G__23992) {
    case "splicing?":
      return self__.splicing_QMARK_;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23990, else__5302__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5313__auto__, writer__5314__auto__, opts__5315__auto__) {
  var self__ = this;
  var this__5313__auto____$1 = this;
  var pr_pair__5316__auto__ = function(this__5313__auto____$1) {
    return function(keyval__5317__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, cljs.core.pr_writer, "", " ", "", opts__5315__auto__, keyval__5317__auto__);
    };
  }(this__5313__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, pr_pair__5316__auto__, "#cljs.tools.reader.impl.utils.ReaderConditional{", ", ", "}", opts__5315__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$ = true;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__23989) {
  var self__ = this;
  var G__23989__$1 = this;
  return new cljs.core.RecordIter(0, G__23989__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5297__auto__) {
  var self__ = this;
  var this__5297__auto____$1 = this;
  return self__.__meta;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5293__auto__) {
  var self__ = this;
  var this__5293__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5303__auto__) {
  var self__ = this;
  var this__5303__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5294__auto__) {
  var self__ = this;
  var this__5294__auto____$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_imap.call(null, this__5294__auto____$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5295__auto__, other__5296__auto__) {
  var self__ = this;
  var this__5295__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = other__5296__auto__;
    if (cljs.core.truth_(and__4673__auto__)) {
      var and__4673__auto____$1 = this__5295__auto____$1.constructor === other__5296__auto__.constructor;
      if (and__4673__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5295__auto____$1, other__5296__auto__);
      } else {
        return and__4673__auto____$1;
      }
    } else {
      return and__4673__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5308__auto__, k__5309__auto__) {
  var self__ = this;
  var this__5308__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), null, new cljs.core.Keyword(null, "form", "form", -1624062471), null], null), null), k__5309__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5308__auto____$1), self__.__meta), k__5309__auto__);
  } else {
    return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5309__auto__)), null);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5306__auto__, k__5307__auto__, G__23989) {
  var self__ = this;
  var this__5306__auto____$1 = this;
  var pred__23993 = cljs.core.keyword_identical_QMARK_;
  var expr__23994 = k__5307__auto__;
  if (cljs.core.truth_(pred__23993.call(null, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), expr__23994))) {
    return new cljs.tools.reader.impl.utils.ReaderConditional(G__23989, self__.form, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23993.call(null, new cljs.core.Keyword(null, "form", "form", -1624062471), expr__23994))) {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, G__23989, self__.__meta, self__.__extmap, null);
    } else {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5307__auto__, G__23989), null);
    }
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5311__auto__) {
  var self__ = this;
  var this__5311__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5298__auto__, G__23989) {
  var self__ = this;
  var this__5298__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, G__23989, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5304__auto__, entry__5305__auto__) {
  var self__ = this;
  var this__5304__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5305__auto__)) {
    return cljs.core._assoc.call(null, this__5304__auto____$1, cljs.core._nth.call(null, entry__5305__auto__, 0), cljs.core._nth.call(null, entry__5305__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5304__auto____$1, entry__5305__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "splicing?", "splicing?", 1211935161, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = true;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = function(this__5333__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = function(this__5333__auto__, writer__5334__auto__) {
  return cljs.core._write.call(null, writer__5334__auto__, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.__GT_ReaderConditional = function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_, form) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional = function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__23991) {
  return new cljs.tools.reader.impl.utils.ReaderConditional((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(G__23991), (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(G__23991), null, cljs.core.dissoc.call(null, G__23991, new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366), new cljs.core.Keyword(null, "form", "form", -1624062471)), null);
};
cljs.tools.reader.impl.utils.reader_conditional_QMARK_ = function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value) {
  return value instanceof cljs.tools.reader.impl.utils.ReaderConditional;
};
cljs.tools.reader.impl.utils.reader_conditional = function cljs$tools$reader$impl$utils$reader_conditional(form, splicing_QMARK_) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#?"), cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366)).cljs$core$IFn$_invoke$arity$1(coll__$1)) ? "@" : null)].join(""));
  return cljs.core.pr_writer.call(null, (new cljs.core.Keyword(null, "form", "form", -1624062471)).cljs$core$IFn$_invoke$arity$1(coll__$1), writer, opts);
};
cljs.tools.reader.impl.utils.ws_rx = /[\s]/;
cljs.tools.reader.impl.utils.whitespace_QMARK_ = function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    if (ch === ",") {
      return true;
    } else {
      return cljs.tools.reader.impl.utils.ws_rx.test(ch);
    }
  }
};
cljs.tools.reader.impl.utils.numeric_QMARK_ = function cljs$tools$reader$impl$utils$numeric_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    return goog.string.isNumeric(ch);
  }
};
cljs.tools.reader.impl.utils.newline_QMARK_ = function cljs$tools$reader$impl$utils$newline_QMARK_(c) {
  return "\n" === c || "\n" === c || c == null;
};
cljs.tools.reader.impl.utils.desugar_meta = function cljs$tools$reader$impl$utils$desugar_meta(f) {
  if (f instanceof cljs.core.Keyword) {
    return cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
  } else {
    if (f instanceof cljs.core.Symbol) {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (typeof f === "string") {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
      } else {
        return f;
      }
    }
  }
};
cljs.tools.reader.impl.utils.last_id = cljs.core.atom.call(null, 0);
cljs.tools.reader.impl.utils.next_id = function cljs$tools$reader$impl$utils$next_id() {
  return cljs.core.swap_BANG_.call(null, cljs.tools.reader.impl.utils.last_id, cljs.core.inc);
};
goog.provide("cljs.tools.reader.reader_types");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.utils");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.reader_types.Reader = function() {
};
cljs.tools.reader.reader_types.read_char = function cljs$tools$reader$reader_types$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(reader);
  } else {
    var x__5340__auto__ = reader == null ? null : reader;
    var m__5341__auto__ = cljs.tools.reader.reader_types.read_char[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, reader);
    } else {
      var m__5341__auto____$1 = cljs.tools.reader.reader_types.read_char["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "Reader.read-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.peek_char = function cljs$tools$reader$reader_types$peek_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(reader);
  } else {
    var x__5340__auto__ = reader == null ? null : reader;
    var m__5341__auto__ = cljs.tools.reader.reader_types.peek_char[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, reader);
    } else {
      var m__5341__auto____$1 = cljs.tools.reader.reader_types.peek_char["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "Reader.peek-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IPushbackReader = function() {
};
cljs.tools.reader.reader_types.unread = function cljs$tools$reader$reader_types$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 == null)) {
    return reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__5340__auto__ = reader == null ? null : reader;
    var m__5341__auto__ = cljs.tools.reader.reader_types.unread[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, reader, ch);
    } else {
      var m__5341__auto____$1 = cljs.tools.reader.reader_types.unread["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPushbackReader.unread", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IndexingReader = function() {
};
cljs.tools.reader.reader_types.get_line_number = function cljs$tools$reader$reader_types$get_line_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(reader);
  } else {
    var x__5340__auto__ = reader == null ? null : reader;
    var m__5341__auto__ = cljs.tools.reader.reader_types.get_line_number[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, reader);
    } else {
      var m__5341__auto____$1 = cljs.tools.reader.reader_types.get_line_number["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-line-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_column_number = function cljs$tools$reader$reader_types$get_column_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(reader);
  } else {
    var x__5340__auto__ = reader == null ? null : reader;
    var m__5341__auto__ = cljs.tools.reader.reader_types.get_column_number[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, reader);
    } else {
      var m__5341__auto____$1 = cljs.tools.reader.reader_types.get_column_number["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-column-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_file_name = function cljs$tools$reader$reader_types$get_file_name(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(reader);
  } else {
    var x__5340__auto__ = reader == null ? null : reader;
    var m__5341__auto__ = cljs.tools.reader.reader_types.get_file_name[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, reader);
    } else {
      var m__5341__auto____$1 = cljs.tools.reader.reader_types.get_file_name["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "IndexingReader.get-file-name", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.StringReader = function(s, s_len, s_pos) {
  this.s = s;
  this.s_len = s_len;
  this.s_pos = s_pos;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    var r = self__.s.charAt(self__.s_pos);
    self__.s_pos = self__.s_pos + 1;
    return r;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    return self__.s.charAt(self__.s_pos);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "s-len", "s-len", 1869978331, null), cljs.core.with_meta(new cljs.core.Symbol(null, "s-pos", "s-pos", -540562492, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/StringReader";
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.tools.reader.reader-types/StringReader");
};
cljs.tools.reader.reader_types.__GT_StringReader = function cljs$tools$reader$reader_types$__GT_StringReader(s, s_len, s_pos) {
  return new cljs.tools.reader.reader_types.StringReader(s, s_len, s_pos);
};
cljs.tools.reader.reader_types.NodeReadableReader = function(readable, buf) {
  this.readable = readable;
  this.buf = buf;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
    var c = self__.buf[0];
    self__.buf = null;
    return cljs.tools.reader.impl.utils.char$.call(null, c);
  } else {
    var c = [cljs.core.str(self__.readable.read(1))].join("");
    if (cljs.core.truth_(c)) {
      return cljs.tools.reader.impl.utils.char$.call(null, c);
    } else {
      return null;
    }
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
  } else {
    self__.buf = [cljs.core.str(self__.readable.read(1))].join("");
  }
  if (cljs.core.truth_(self__.buf)) {
    return cljs.tools.reader.impl.utils.char$.call(null, self__.buf[0]);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "readable", "readable", 2113054478, null), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/NodeReadableReader";
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.tools.reader.reader-types/NodeReadableReader");
};
cljs.tools.reader.reader_types.__GT_NodeReadableReader = function cljs$tools$reader$reader_types$__GT_NodeReadableReader(readable, buf) {
  return new cljs.tools.reader.reader_types.NodeReadableReader(readable, buf);
};
cljs.tools.reader.reader_types.PushbackReader = function(rdr, buf, buf_len, buf_pos) {
  this.rdr = rdr;
  this.buf = buf;
  this.buf_len = buf_len;
  this.buf_pos = buf_pos;
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (self__.buf_pos < self__.buf_len) {
    self__.buf_pos = self__.buf_pos + 1;
  } else {
  }
  return cljs.tools.reader.impl.utils.char$.call(null, c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
  return cljs.tools.reader.impl.utils.char$.call(null, c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(ch)) {
    if (self__.buf_pos === 0) {
      throw new Error("Pushback buffer is full");
    } else {
    }
    self__.buf_pos = self__.buf_pos - 1;
    return self__.buf[self__.buf_pos] = ch;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.PushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "buf-len", "buf-len", 404510846, null), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "buf-pos", "buf-pos", -807229033, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.tools.reader.reader-types/PushbackReader");
};
cljs.tools.reader.reader_types.__GT_PushbackReader = function cljs$tools$reader$reader_types$__GT_PushbackReader(rdr, buf, buf_len, buf_pos) {
  return new cljs.tools.reader.reader_types.PushbackReader(rdr, buf, buf_len, buf_pos);
};
cljs.tools.reader.reader_types.normalize_newline = function cljs$tools$reader$reader_types$normalize_newline(rdr, ch) {
  if ("\r" === ch) {
    var c = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
    if ("\f" === c || "\n" === c) {
      cljs.tools.reader.reader_types.read_char.call(null, rdr);
    } else {
    }
    return "\n";
  } else {
    return ch;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4657__auto__ = cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var ch = temp__4657__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline.call(null, self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  return cljs.tools.reader.reader_types.unread.call(null, self__.rdr, ch);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null)], null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/IndexingPushbackReader";
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.tools.reader.reader-types/IndexingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader = function cljs$tools$reader$reader_types$__GT_IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name);
};
cljs.tools.reader.reader_types.merge_meta = function cljs$tools$reader$reader_types$merge_meta(obj, m) {
  var orig_meta = cljs.core.meta.call(null, obj);
  return cljs.core.with_meta.call(null, obj, cljs.core.merge.call(null, m, cljs.core.dissoc.call(null, orig_meta, new cljs.core.Keyword(null, "source", "source", -433931539))));
};
cljs.tools.reader.reader_types.peek_source_log = function cljs$tools$reader$reader_types$peek_source_log(frames) {
  return cljs.core.subs.call(null, [cljs.core.str((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames))].join(""), cljs.core.first.call(null, (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(frames)));
};
cljs.tools.reader.reader_types.log_source_char = function cljs$tools$reader$reader_types$log_source_char(frames, char$) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var buffer = temp__4657__auto__;
    return buffer.append(char$);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.drop_last_logged_char = function cljs$tools$reader$reader_types$drop_last_logged_char(frames) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var buffer = temp__4657__auto__;
    return buffer.set(cljs.core.subs.call(null, [cljs.core.str(buffer)].join(""), 0, buffer.getLength() - 1));
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
  this.frames = frames;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4657__auto__ = cljs.tools.reader.reader_types.read_char.call(null, self__.rdr);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var ch = temp__4657__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline.call(null, self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_.call(null, ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    cljs.tools.reader.reader_types.log_source_char.call(null, cljs.core.deref.call(null, self__.frames), ch__$1);
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return cljs.tools.reader.reader_types.peek_char.call(null, self__.rdr);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  if (cljs.core.truth_(ch)) {
    cljs.tools.reader.reader_types.drop_last_logged_char.call(null, cljs.core.deref.call(null, self__.frames));
  } else {
  }
  return cljs.tools.reader.reader_types.unread.call(null, self__.rdr, ch);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line", "line", 1852876762, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "column", "column", -576213674, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "prev", "prev", 43462301, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null), new cljs.core.Symbol(null, "frames", "frames", -888748272, null)], 
  null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/SourceLoggingPushbackReader";
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.tools.reader.reader-types/SourceLoggingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader = function cljs$tools$reader$reader_types$__GT_SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames);
};
cljs.tools.reader.reader_types.indexing_reader_QMARK_ = function cljs$tools$reader$reader_types$indexing_reader_QMARK_(rdr) {
  if (!(rdr == null)) {
    if (false || rdr.cljs$tools$reader$reader_types$IndexingReader$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.tools.reader.reader_types.string_reader = function cljs$tools$reader$reader_types$string_reader(s) {
  return new cljs.tools.reader.reader_types.StringReader(s, cljs.core.count.call(null, s), 0);
};
cljs.tools.reader.reader_types.string_push_back_reader = function cljs$tools$reader$reader_types$string_push_back_reader(var_args) {
  var args24001 = [];
  var len__5743__auto___24004 = arguments.length;
  var i__5744__auto___24005 = 0;
  while (true) {
    if (i__5744__auto___24005 < len__5743__auto___24004) {
      args24001.push(arguments[i__5744__auto___24005]);
      var G__24006 = i__5744__auto___24005 + 1;
      i__5744__auto___24005 = G__24006;
      continue;
    } else {
    }
    break;
  }
  var G__24003 = args24001.length;
  switch(G__24003) {
    case 1:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24001.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.reader_types.string_push_back_reader.call(null, s, 1);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s, buf_len) {
  return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader.call(null, s), cljs.core.object_array.call(null, buf_len), buf_len, buf_len);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.reader_types.node_readable_push_back_reader = function cljs$tools$reader$reader_types$node_readable_push_back_reader(readable) {
  return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(readable, null), cljs.core.object_array.call(null, 1), 1, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader = function cljs$tools$reader$reader_types$indexing_push_back_reader(var_args) {
  var args24008 = [];
  var len__5743__auto___24011 = arguments.length;
  var i__5744__auto___24012 = 0;
  while (true) {
    if (i__5744__auto___24012 < len__5743__auto___24011) {
      args24008.push(arguments[i__5744__auto___24012]);
      var G__24013 = i__5744__auto___24012 + 1;
      i__5744__auto___24012 = G__24013;
      continue;
    } else {
    }
    break;
  }
  var G__24010 = args24008.length;
  switch(G__24010) {
    case 1:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24008.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, s_or_rdr, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.call(null, s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.source_logging_push_back_reader = function cljs$tools$reader$reader_types$source_logging_push_back_reader(var_args) {
  var args24015 = [];
  var len__5743__auto___24018 = arguments.length;
  var i__5744__auto___24019 = 0;
  while (true) {
    if (i__5744__auto___24019 < len__5743__auto___24018) {
      args24015.push(arguments[i__5744__auto___24019]);
      var G__24020 = i__5744__auto___24019 + 1;
      i__5744__auto___24019 = G__24020;
      continue;
    } else {
    }
    break;
  }
  var G__24017 = args24015.length;
  switch(G__24017) {
    case 1:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24015.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, s_or_rdr, 1);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.call(null, s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.call(null, s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name, cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "buffer", "buffer", 617295198), new goog.string.StringBuffer, new cljs.core.Keyword(null, "offset", "offset", 296498311), cljs.core.list(0)], null)));
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.read_line = function cljs$tools$reader$reader_types$read_line(rdr) {
  var c = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var s = new goog.string.StringBuffer;
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, c)) {
      return [cljs.core.str(s)].join("");
    } else {
      var G__24022 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      var G__24023 = s.append(c);
      c = G__24022;
      s = G__24023;
      continue;
    }
    break;
  }
};
cljs.tools.reader.reader_types.reader_error = function cljs$tools$reader$reader_types$reader_error(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24026 = arguments.length;
  var i__5744__auto___24027 = 0;
  while (true) {
    if (i__5744__auto___24027 < len__5743__auto___24026) {
      args__5750__auto__.push(arguments[i__5744__auto___24027]);
      var G__24028 = i__5744__auto___24027 + 1;
      i__5744__auto___24027 = G__24028;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw cljs.core.ex_info.call(null, cljs.core.apply.call(null, cljs.core.str, msg), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) ? cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "line", "line", 
  212345235), cljs.tools.reader.reader_types.get_line_number.call(null, rdr), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, rdr)], null), function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file_name = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file_name], null);
    } else {
      return null;
    }
  }()) : null));
};
cljs.tools.reader.reader_types.reader_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.reader_types.reader_error.cljs$lang$applyTo = function(seq24024) {
  var G__24025 = cljs.core.first.call(null, seq24024);
  var seq24024__$1 = cljs.core.next.call(null, seq24024);
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__24025, seq24024__$1);
};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_ = function cljs$tools$reader$reader_types$source_logging_reader_QMARK_(rdr) {
  return rdr instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader;
};
cljs.tools.reader.reader_types.line_start_QMARK_ = function cljs$tools$reader$reader_types$line_start_QMARK_(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return 1 === cljs.tools.reader.reader_types.get_column_number.call(null, rdr);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.log_source_STAR_ = function cljs$tools$reader$reader_types$log_source_STAR_(reader, f) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, reader.frames));
  try {
    cljs.core.swap_BANG_.call(null, reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.conj, buffer.getLength());
    var ret = f.call(null);
    if (!(ret == null) ? ret.cljs$lang$protocol_mask$partition0$ & 131072 || ret.cljs$core$IMeta$ ? true : false : false) {
      return cljs.tools.reader.reader_types.merge_meta.call(null, ret, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "source", "source", -433931539), cljs.tools.reader.reader_types.peek_source_log.call(null, cljs.core.deref.call(null, reader.frames))], null));
    } else {
      return ret;
    }
  } finally {
    cljs.core.swap_BANG_.call(null, reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.rest);
  }
};
goog.provide("cljs.tools.reader.impl.commons");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
cljs.tools.reader.impl.commons.number_literal_QMARK_ = function cljs$tools$reader$impl$commons$number_literal_QMARK_(reader, initch) {
  return cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader));
};
cljs.tools.reader.impl.commons.read_past = function cljs$tools$reader$impl$commons$read_past(pred, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (pred.call(null, ch)) {
      var G__24033 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      ch = G__24033;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.tools.reader.impl.commons.skip_line = function cljs$tools$reader$impl$commons$skip_line(reader) {
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_.call(null, cljs.tools.reader.reader_types.read_char.call(null, reader))) {
    } else {
      continue;
    }
    break;
  }
  return reader;
};
cljs.tools.reader.impl.commons.int_pattern = /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|(0[0-9]+))(N)?$/;
cljs.tools.reader.impl.commons.ratio_pattern = /([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern = /([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int = function cljs$tools$reader$impl$commons$match_int(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.int_pattern, s));
  if (!(m.call(null, 2) == null)) {
    return 0;
  } else {
    var negate_QMARK_ = "-" === m.call(null, 1);
    var a = !(m.call(null, 3) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 3), 10], null) : !(m.call(null, 4) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 4), 16], null) : !(m.call(null, 5) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 5), 8], null) : !(m.call(null, 7) == null) ? new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 7), parseInt(m.call(null, 6))], null) : !(m.call(null, 8) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.call(null, 8), 10], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    var n = a.call(null, 0);
    var radix = a.call(null, 1) | 0;
    if (n == null) {
      return null;
    } else {
      var bn = parseInt(n, radix);
      var bn__$1 = negate_QMARK_ ? -1 * bn : bn;
      return bn__$1;
    }
  }
};
cljs.tools.reader.impl.commons.match_ratio = function cljs$tools$reader$impl$commons$match_ratio(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.ratio_pattern, s));
  var numerator = m.call(null, 1);
  var denominator = m.call(null, 2);
  var numerator__$1 = cljs.core.truth_(cljs.core.re_find.call(null, /^\+/, numerator)) ? cljs.core.subs.call(null, numerator, 1) : numerator;
  return parseInt(numerator__$1) / parseInt(denominator);
};
cljs.tools.reader.impl.commons.match_float = function cljs$tools$reader$impl$commons$match_float(s) {
  var m = cljs.core.vec.call(null, cljs.core.re_find.call(null, cljs.tools.reader.impl.commons.float_pattern, s));
  if (!(m.call(null, 4) == null)) {
    return parseFloat(m.call(null, 1));
  } else {
    return parseFloat(s);
  }
};
cljs.tools.reader.impl.commons.matches_QMARK_ = function cljs$tools$reader$impl$commons$matches_QMARK_(pattern, s) {
  var vec__24035 = cljs.core.re_find.call(null, pattern, s);
  var match = cljs.core.nth.call(null, vec__24035, 0, null);
  return match === s;
};
cljs.tools.reader.impl.commons.match_number = function cljs$tools$reader$impl$commons$match_number(s) {
  if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.int_pattern, s)) {
    return cljs.tools.reader.impl.commons.match_int.call(null, s);
  } else {
    if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.float_pattern, s)) {
      return cljs.tools.reader.impl.commons.match_float.call(null, s);
    } else {
      if (cljs.tools.reader.impl.commons.matches_QMARK_.call(null, cljs.tools.reader.impl.commons.ratio_pattern, s)) {
        return cljs.tools.reader.impl.commons.match_ratio.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.parse_symbol = function cljs$tools$reader$impl$commons$parse_symbol(token) {
  if ("" === token || /:$/.test(token) === true || /^::/.test(token) === true) {
    return null;
  } else {
    var ns_idx = token.indexOf("/");
    var ns = ns_idx > 0 ? cljs.core.subs.call(null, token, 0, ns_idx) : null;
    if (!(ns == null)) {
      var ns_idx__$1 = ns_idx + 1;
      if (ns_idx__$1 === cljs.core.count.call(null, token)) {
        return null;
      } else {
        var sym = cljs.core.subs.call(null, token, ns_idx__$1);
        if (!cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, cljs.core.nth.call(null, sym, 0)) && !("" === sym) && /:$/.test(ns) === false && (sym === "/" || -1 === sym.indexOf("/"))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, sym], null);
        } else {
          return null;
        }
      }
    } else {
      if (token === "/" || -1 === token.indexOf("/")) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, token], null);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.read_comment = function cljs$tools$reader$impl$commons$read_comment(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24038 = arguments.length;
  var i__5744__auto___24039 = 0;
  while (true) {
    if (i__5744__auto___24039 < len__5743__auto___24038) {
      args__5750__auto__.push(arguments[i__5744__auto___24039]);
      var G__24040 = i__5744__auto___24039 + 1;
      i__5744__auto___24039 = G__24040;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic = function(rdr, _) {
  return cljs.tools.reader.impl.commons.skip_line.call(null, rdr);
};
cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo = function(seq24036) {
  var G__24037 = cljs.core.first.call(null, seq24036);
  var seq24036__$1 = cljs.core.next.call(null, seq24036);
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(G__24037, seq24036__$1);
};
cljs.tools.reader.impl.commons.throwing_reader = function cljs$tools$reader$impl$commons$throwing_reader(msg) {
  return function() {
    var G__24041__delegate = function(rdr, _) {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, msg);
    };
    var G__24041 = function(rdr, var_args) {
      var _ = null;
      if (arguments.length > 1) {
        var G__24042__i = 0, G__24042__a = new Array(arguments.length - 1);
        while (G__24042__i < G__24042__a.length) {
          G__24042__a[G__24042__i] = arguments[G__24042__i + 1];
          ++G__24042__i;
        }
        _ = new cljs.core.IndexedSeq(G__24042__a, 0);
      }
      return G__24041__delegate.call(this, rdr, _);
    };
    G__24041.cljs$lang$maxFixedArity = 1;
    G__24041.cljs$lang$applyTo = function(arglist__24043) {
      var rdr = cljs.core.first(arglist__24043);
      var _ = cljs.core.rest(arglist__24043);
      return G__24041__delegate(rdr, _);
    };
    G__24041.cljs$core$IFn$_invoke$arity$variadic = G__24041__delegate;
    return G__24041;
  }();
};
goog.provide("cljs.tools.reader");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.commons");
goog.require("goog.string");
goog.require("goog.array");
goog.require("cljs.tools.reader.reader_types");
goog.require("goog.string.StringBuffer");
goog.require("cljs.tools.reader.impl.utils");
goog.require("clojure.string");
cljs.tools.reader.read_STAR_;
cljs.tools.reader.macros;
cljs.tools.reader.dispatch_macros;
cljs.tools.reader._STAR_data_readers_STAR_;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
cljs.tools.reader._STAR_suppress_read_STAR_;
cljs.tools.reader.default_data_readers;
cljs.tools.reader.macro_terminating_QMARK_ = function cljs$tools$reader$macro_terminating_QMARK_(ch) {
  var G__24062 = ch;
  switch(G__24062) {
    case '"':
    ;
    case ";":
    ;
    case "@":
    ;
    case "^":
    ;
    case "`":
    ;
    case "~":
    ;
    case "(":
    ;
    case ")":
    ;
    case "[":
    ;
    case "]":
    ;
    case "{":
    ;
    case "}":
    ;
    case "\\":
      return true;
      break;
    default:
      return false;
  }
};
cljs.tools.reader.sb = new goog.string.StringBuffer;
cljs.tools.reader.read_token = function cljs$tools$reader$read_token(rdr, initch) {
  if (initch == null) {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading");
  } else {
    cljs.tools.reader.sb.clear();
    var ch = initch;
    while (true) {
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || ch == null) {
        if (ch == null) {
        } else {
          cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
        }
        return cljs.tools.reader.sb.toString();
      } else {
        cljs.tools.reader.sb.append(ch);
        var G__24064 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        ch = G__24064;
        continue;
      }
      break;
    }
  }
};
cljs.tools.reader.read_tagged;
cljs.tools.reader.read_dispatch = function cljs$tools$reader$read_dispatch(rdr, _, opts, pending_forms) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.tools.reader.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var dm = temp__4655__auto____$1;
      return dm.call(null, rdr, ch, opts, pending_forms);
    } else {
      return cljs.tools.reader.read_tagged.call(null, function() {
        var G__24066 = rdr;
        cljs.tools.reader.reader_types.unread.call(null, G__24066, ch);
        return G__24066;
      }(), ch, opts, pending_forms);
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.read_unmatched_delimiter = function cljs$tools$reader$read_unmatched_delimiter(rdr, ch, opts, pending_forms) {
  return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.tools.reader.read_regex = function cljs$tools$reader$read_regex(rdr, ch, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if ('"' === ch__$1) {
      return cljs.core.re_pattern.call(null, [cljs.core.str(sb)].join(""));
    } else {
      if (ch__$1 == null) {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading regex");
      } else {
        sb.append(ch__$1);
        if ("\\" === ch__$1) {
          var ch_24067__$2 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (ch_24067__$2 == null) {
            cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading regex");
          } else {
          }
          sb.append(ch_24067__$2);
        } else {
        }
        var G__24068 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
        ch__$1 = G__24068;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.char_code = function cljs$tools$reader$char_code(ch, base) {
  var code = parseInt(ch, base);
  if (cljs.core.truth_(isNaN(code))) {
    return -1;
  } else {
    return code;
  }
};
cljs.tools.reader.read_unicode_char = function cljs$tools$reader$read_unicode_char(var_args) {
  var args24069 = [];
  var len__5743__auto___24072 = arguments.length;
  var i__5744__auto___24073 = 0;
  while (true) {
    if (i__5744__auto___24073 < len__5743__auto___24072) {
      args24069.push(arguments[i__5744__auto___24073]);
      var G__24074 = i__5744__auto___24073 + 1;
      i__5744__auto___24073 = G__24074;
      continue;
    } else {
    }
    break;
  }
  var G__24071 = args24069.length;
  switch(G__24071) {
    case 4:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24069.length)].join(""));;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count.call(null, token) === l) {
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid unicode character: \\"), cljs.core.str(token)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, token, i), base);
      if (d === -1) {
        throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(cljs.core.nth.call(null, token, i))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
      } else {
        var G__24076 = i + 1;
        var G__24077 = d + uc * base;
        i = G__24076;
        uc = G__24077;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.char_code.call(null, initch, base);
  while (true) {
    if (uc === -1) {
      throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(initch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
    } else {
      if (!(i === length)) {
        var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
        if (cljs.core.truth_(function() {
          var or__4685__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
          if (or__4685__auto__) {
            return or__4685__auto__;
          } else {
            var or__4685__auto____$1 = cljs.tools.reader.macros.call(null, ch);
            if (cljs.core.truth_(or__4685__auto____$1)) {
              return or__4685__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid character length: "), cljs.core.str(i), cljs.core.str(", should be: "), cljs.core.str(length)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.char_code.call(null, ch, base);
          cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (d === -1) {
            throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(ch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
          } else {
            var G__24078 = i + 1;
            var G__24079 = d + uc * base;
            i = G__24078;
            uc = G__24079;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.upper_limit = "\ud7ff".charCodeAt(0);
cljs.tools.reader.lower_limit = "\ue000".charCodeAt(0);
cljs.tools.reader.valid_octal_QMARK_ = function cljs$tools$reader$valid_octal_QMARK_(token, base) {
  return parseInt(token, base) <= 255;
};
cljs.tools.reader.read_char_STAR_ = function cljs$tools$reader$read_char_STAR_(rdr, backslash, opts, pending_forms) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (!(ch == null)) {
    var token = cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) ? [cljs.core.str(ch)].join("") : cljs.tools.reader.read_token.call(null, rdr, ch);
    var token_len = token.length;
    if (1 === token_len) {
      return token.charAt(0);
    } else {
      if (cljs.core._EQ_.call(null, token, "newline")) {
        return "\n";
      } else {
        if (cljs.core._EQ_.call(null, token, "space")) {
          return " ";
        } else {
          if (cljs.core._EQ_.call(null, token, "tab")) {
            return "\t";
          } else {
            if (cljs.core._EQ_.call(null, token, "backspace")) {
              return "\b";
            } else {
              if (cljs.core._EQ_.call(null, token, "formfeed")) {
                return "\f";
              } else {
                if (cljs.core._EQ_.call(null, token, "return")) {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.read_unicode_char.call(null, token, 1, 4, 16);
                    var ic = c.charCodeAt(0);
                    if (ic > cljs.tools.reader.upper_limit && ic < cljs.tools.reader.lower_limit) {
                      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid character constant: \\u", c);
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid octal escape sequence length: ", len);
                      } else {
                        var offset = 1;
                        var base = 8;
                        var uc = cljs.tools.reader.read_unicode_char.call(null, token, offset, len, base);
                        if (cljs.core.not.call(null, cljs.tools.reader.valid_octal_QMARK_.call(null, cljs.core.subs.call(null, token, offset), base))) {
                          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377]");
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unsupported character: \\", token);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.starting_line_col_info = function cljs$tools$reader$starting_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), cljs.tools.reader.reader_types.get_column_number.call(null, rdr) - 1 | 0], null);
  } else {
    return null;
  }
};
cljs.tools.reader.ending_line_col_info = function cljs$tools$reader$ending_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.tools.reader.reader_types.get_line_number.call(null, rdr), cljs.tools.reader.reader_types.get_column_number.call(null, rdr)], null);
  } else {
    return null;
  }
};
if (typeof cljs.tools.reader.READ_EOF !== "undefined") {
} else {
  cljs.tools.reader.READ_EOF = new Object;
}
if (typeof cljs.tools.reader.READ_FINISHED !== "undefined") {
} else {
  cljs.tools.reader.READ_FINISHED = new Object;
}
cljs.tools.reader._STAR_read_delim_STAR_ = false;
cljs.tools.reader.read_delimited_internal = function cljs$tools$reader$read_delimited_internal(delim, rdr, opts, pending_forms) {
  var vec__24081 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__24081, 0, null);
  var start_column = cljs.core.nth.call(null, vec__24081, 1, null);
  var delim__$1 = cljs.tools.reader.impl.utils.char$.call(null, delim);
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var form = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, delim__$1, opts, pending_forms);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      if (form === cljs.tools.reader.READ_EOF) {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading", cljs.core.truth_(start_line) ? [cljs.core.str(", starting at line "), cljs.core.str(start_line), cljs.core.str(" and column "), cljs.core.str(start_column)].join("") : null);
      } else {
        var G__24082 = cljs.core.conj_BANG_.call(null, a, form);
        a = G__24082;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_delimited = function cljs$tools$reader$read_delimited(delim, rdr, opts, pending_forms) {
  var _STAR_read_delim_STAR_24084 = cljs.tools.reader._STAR_read_delim_STAR_;
  cljs.tools.reader._STAR_read_delim_STAR_ = true;
  try {
    return cljs.tools.reader.read_delimited_internal.call(null, delim, rdr, opts, pending_forms);
  } finally {
    cljs.tools.reader._STAR_read_delim_STAR_ = _STAR_read_delim_STAR_24084;
  }
};
cljs.tools.reader.read_list = function cljs$tools$reader$read_list(rdr, _, opts, pending_forms) {
  var vec__24087 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__24087, 0, null);
  var start_column = cljs.core.nth.call(null, vec__24087, 1, null);
  var the_list = cljs.tools.reader.read_delimited.call(null, ")", rdr, opts, pending_forms);
  var vec__24088 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__24088, 0, null);
  var end_column = cljs.core.nth.call(null, vec__24088, 1, null);
  return cljs.core.with_meta.call(null, cljs.core.empty_QMARK_.call(null, the_list) ? cljs.core.List.EMPTY : cljs.core.apply.call(null, cljs.core.list, the_list), cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_vector = function cljs$tools$reader$read_vector(rdr, _, opts, pending_forms) {
  var vec__24091 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__24091, 0, null);
  var start_column = cljs.core.nth.call(null, vec__24091, 1, null);
  var the_vector = cljs.tools.reader.read_delimited.call(null, "]", rdr, opts, pending_forms);
  var vec__24092 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__24092, 0, null);
  var end_column = cljs.core.nth.call(null, vec__24092, 1, null);
  return cljs.core.with_meta.call(null, the_vector, cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_map = function cljs$tools$reader$read_map(rdr, _, opts, pending_forms) {
  var vec__24095 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__24095, 0, null);
  var start_column = cljs.core.nth.call(null, vec__24095, 1, null);
  var the_map = cljs.tools.reader.read_delimited.call(null, "}", rdr, opts, pending_forms);
  var map_count = cljs.core.count.call(null, the_map);
  var vec__24096 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__24096, 0, null);
  var end_column = cljs.core.nth.call(null, vec__24096, 1, null);
  if (cljs.core.odd_QMARK_.call(null, map_count)) {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.with_meta.call(null, map_count === 0 ? cljs.core.PersistentArrayMap.EMPTY : cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.to_array.call(null, the_map)), cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_number = function cljs$tools$reader$read_number(rdr, initch) {
  var sb = function() {
    var G__24099 = new goog.string.StringBuffer;
    G__24099.append(initch);
    return G__24099;
  }();
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4685__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
      if (or__4685__auto__) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = cljs.tools.reader.macros.call(null, ch);
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = [cljs.core.str(sb)].join("");
      cljs.tools.reader.reader_types.unread.call(null, rdr, ch);
      var or__4685__auto__ = cljs.tools.reader.impl.commons.match_number.call(null, s);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid number format [", s, "]");
      }
    } else {
      var G__24101 = function() {
        var G__24100 = sb;
        G__24100.append(ch);
        return G__24100;
      }();
      var G__24102 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      sb = G__24101;
      ch = G__24102;
      continue;
    }
    break;
  }
};
cljs.tools.reader.escape_char = function cljs$tools$reader$escape_char(sb, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var G__24104 = ch;
  switch(G__24104) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      if (-1 === parseInt(ch__$1 | 0, 16)) {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid unicode escape: \\u", ch__$1);
      } else {
        return cljs.tools.reader.read_unicode_char.call(null, rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, ch)) {
        var ch__$1 = cljs.tools.reader.read_unicode_char.call(null, rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 223) {
          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377]");
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unsupported escape character: \\", ch);
      }
    ;
  }
};
cljs.tools.reader.read_string_STAR_ = function cljs$tools$reader$read_string_STAR_(reader, _, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF while reading string");
    } else {
      var G__24109 = ch;
      switch(G__24109) {
        case "\\":
          var G__24113 = function() {
            var G__24110 = sb;
            G__24110.append(cljs.tools.reader.escape_char.call(null, sb, reader));
            return G__24110;
          }();
          var G__24114 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__24113;
          ch = G__24114;
          continue;
          break;
        case '"':
          return [cljs.core.str(sb)].join("");
          break;
        default:
          var G__24115 = function() {
            var G__24111 = sb;
            G__24111.append(ch);
            return G__24111;
          }();
          var G__24116 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__24115;
          ch = G__24116;
          continue;
      }
    }
    break;
  }
};
cljs.tools.reader.loc_info = function cljs$tools$reader$loc_info(rdr, line, column) {
  if (line == null) {
    return null;
  } else {
    var file = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    var filem = file == null ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    var vec__24118 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
    var end_line = cljs.core.nth.call(null, vec__24118, 0, null);
    var end_column = cljs.core.nth.call(null, vec__24118, 1, null);
    var lcm = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null);
    return cljs.core.merge.call(null, filem, lcm);
  }
};
cljs.tools.reader.read_symbol = function cljs$tools$reader$read_symbol(rdr, initch) {
  var vec__24121 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var line = cljs.core.nth.call(null, vec__24121, 0, null);
  var column = cljs.core.nth.call(null, vec__24121, 1, null);
  var token = cljs.tools.reader.read_token.call(null, rdr, initch);
  if (token == null) {
    return null;
  } else {
    var G__24122 = token;
    switch(G__24122) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        break;
      case "NaN":
        return Number.NaN;
        break;
      case "-Infinity":
        return Number.NEGATIVE_INFINITY;
        break;
      case "Infinity":
      ;
      case "+Infinity":
        return Number.POSITIVE_INFINITY;
        break;
      default:
        var p = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
        if (!(p == null)) {
          var sym = cljs.core.symbol.call(null, cljs.core._nth.call(null, p, 0), cljs.core._nth.call(null, p, 1));
          return cljs.core._with_meta.call(null, sym, cljs.tools.reader.loc_info.call(null, rdr, line, column));
        } else {
          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid token: ", token);
        }
      ;
    }
  }
};
cljs.tools.reader._STAR_alias_map_STAR_ = null;
cljs.tools.reader.resolve_ns = function cljs$tools$reader$resolve_ns(sym) {
  var or__4685__auto__ = cljs.core.get.call(null, cljs.tools.reader._STAR_alias_map_STAR_, sym);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    var temp__4657__auto__ = cljs.core.find_ns.call(null, sym);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var ns = temp__4657__auto__;
      return cljs.core.symbol.call(null, cljs.core.ns_name.call(null, ns));
    } else {
      return null;
    }
  }
};
cljs.tools.reader.read_keyword = function cljs$tools$reader$read_keyword(reader, initch, opts, pending_forms) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
    var token = cljs.tools.reader.read_token.call(null, reader, ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
    if (!(s == null)) {
      var ns = cljs.core._nth.call(null, s, 0);
      var name = cljs.core._nth.call(null, s, 1);
      if (":" === token.charAt(0)) {
        if (!(ns == null)) {
          var ns__$1 = cljs.tools.reader.resolve_ns.call(null, cljs.core.symbol.call(null, cljs.core.subs.call(null, ns, 1)));
          if (!(ns__$1 == null)) {
            return cljs.core.keyword.call(null, [cljs.core.str(ns__$1)].join(""), name);
          } else {
            return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :", token);
          }
        } else {
          return cljs.core.keyword.call(null, [cljs.core.str(cljs.core._STAR_ns_STAR_)].join(""), cljs.core.subs.call(null, name, 1));
        }
      } else {
        return cljs.core.keyword.call(null, ns, name);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :", token);
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :");
  }
};
cljs.tools.reader.wrapping_reader = function cljs$tools$reader$wrapping_reader(sym) {
  return function(rdr, _, opts, pending_forms) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms)), sym);
  };
};
cljs.tools.reader.read_meta = function cljs$tools$reader$read_meta(rdr, _, opts, pending_forms) {
  if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, rdr) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, rdr))) {
    return cljs.tools.reader.reader_types.log_source_STAR_.call(null, rdr, function() {
      var vec__24130 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
      var line = cljs.core.nth.call(null, vec__24130, 0, null);
      var column = cljs.core.nth.call(null, vec__24130, 1, null);
      var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      if (cljs.core.map_QMARK_.call(null, m)) {
      } else {
        cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata must be Symbol, Keyword, String or Map");
      }
      var o = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
        var m__$1 = cljs.core.truth_(function() {
          var and__4673__auto__ = line;
          if (cljs.core.truth_(and__4673__auto__)) {
            return cljs.core.seq_QMARK_.call(null, o);
          } else {
            return and__4673__auto__;
          }
        }()) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column) : m;
        if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : false : false) {
          return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m__$1));
        } else {
          return cljs.core.reset_meta_BANG_.call(null, o, m__$1);
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata can only be applied to IMetas");
      }
    });
  } else {
    var vec__24133 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
    var line = cljs.core.nth.call(null, vec__24133, 0, null);
    var column = cljs.core.nth.call(null, vec__24133, 1, null);
    var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    if (cljs.core.map_QMARK_.call(null, m)) {
    } else {
      cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata must be Symbol, Keyword, String or Map");
    }
    var o = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
      var m__$1 = cljs.core.truth_(function() {
        var and__4673__auto__ = line;
        if (cljs.core.truth_(and__4673__auto__)) {
          return cljs.core.seq_QMARK_.call(null, o);
        } else {
          return and__4673__auto__;
        }
      }()) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "line", "line", 212345235), line, new cljs.core.Keyword(null, "column", "column", 2078222095), column) : m;
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : false : false) {
        return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m__$1));
      } else {
        return cljs.core.reset_meta_BANG_.call(null, o, m__$1);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata can only be applied to IMetas");
    }
  }
};
cljs.tools.reader.read_set = function cljs$tools$reader$read_set(rdr, _, opts, pending_forms) {
  var vec__24138 = cljs.tools.reader.starting_line_col_info.call(null, rdr);
  var start_line = cljs.core.nth.call(null, vec__24138, 0, null);
  var start_column = cljs.core.nth.call(null, vec__24138, 1, null);
  var start_column__$1 = cljs.core.truth_(start_column) ? start_column - 1 | 0 : null;
  var the_set = cljs.core.set.call(null, cljs.tools.reader.read_delimited.call(null, "}", rdr, opts, pending_forms));
  var vec__24139 = cljs.tools.reader.ending_line_col_info.call(null, rdr);
  var end_line = cljs.core.nth.call(null, vec__24139, 0, null);
  var end_column = cljs.core.nth.call(null, vec__24139, 1, null);
  return cljs.core.with_meta.call(null, the_set, cljs.core.truth_(start_line) ? cljs.core.merge.call(null, function() {
    var temp__4657__auto__ = cljs.tools.reader.reader_types.get_file_name.call(null, rdr);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var file = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "file", "file", -1269645878), file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "line", "line", 212345235), start_line, new cljs.core.Keyword(null, "column", "column", 2078222095), start_column__$1, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), end_line, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), end_column], null)) : null);
};
cljs.tools.reader.read_discard = function cljs$tools$reader$read_discard(rdr, _, opts, pending_forms) {
  var G__24141 = rdr;
  cljs.tools.reader.read_STAR_.call(null, G__24141, true, null, opts, pending_forms);
  return G__24141;
};
cljs.tools.reader.RESERVED_FEATURES = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null);
cljs.tools.reader.has_feature_QMARK_ = function cljs$tools$reader$has_feature_QMARK_(rdr, feature, opts) {
  if (feature instanceof cljs.core.Keyword) {
    return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), feature) || cljs.core.contains_QMARK_.call(null, cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "features", "features", -1146962336)), feature);
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, [cljs.core.str("Feature should be a keyword: "), cljs.core.str(feature)].join(""));
  }
};
cljs.tools.reader.check_eof_error = function cljs$tools$reader$check_eof_error(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_EOF) {
    if (first_line < 0) {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading");
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading, starting at line ", first_line);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.check_reserved_features = function cljs$tools$reader$check_reserved_features(rdr, form) {
  if (cljs.core.truth_(cljs.core.get.call(null, cljs.tools.reader.RESERVED_FEATURES, form))) {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, [cljs.core.str("Feature name "), cljs.core.str(form), cljs.core.str(" is reserved")].join(""));
  } else {
    return null;
  }
};
cljs.tools.reader.check_invalid_read_cond = function cljs$tools$reader$check_invalid_read_cond(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_FINISHED) {
    if (first_line < 0) {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "read-cond requires an even number of forms");
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, [cljs.core.str("read-cond starting on line "), cljs.core.str(first_line), cljs.core.str(" requires an even number of forms")].join(""));
    }
  } else {
    return null;
  }
};
cljs.tools.reader.read_suppress = function cljs$tools$reader$read_suppress(first_line, rdr, opts, pending_forms) {
  var _STAR_suppress_read_STAR_24143 = cljs.tools.reader._STAR_suppress_read_STAR_;
  cljs.tools.reader._STAR_suppress_read_STAR_ = true;
  try {
    var form = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
    cljs.tools.reader.check_eof_error.call(null, form, rdr, first_line);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.tools.reader.READ_FINISHED;
    } else {
      return null;
    }
  } finally {
    cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_24143;
  }
};
if (typeof cljs.tools.reader.NO_MATCH !== "undefined") {
} else {
  cljs.tools.reader.NO_MATCH = new Object;
}
cljs.tools.reader.match_feature = function cljs$tools$reader$match_feature(first_line, rdr, opts, pending_forms) {
  var feature = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
  cljs.tools.reader.check_eof_error.call(null, feature, rdr, first_line);
  if (cljs.core._EQ_.call(null, feature, cljs.tools.reader.READ_FINISHED)) {
    return cljs.tools.reader.READ_FINISHED;
  } else {
    cljs.tools.reader.check_reserved_features.call(null, rdr, feature);
    if (cljs.core.truth_(cljs.tools.reader.has_feature_QMARK_.call(null, rdr, feature, opts))) {
      var G__24145 = cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
      cljs.tools.reader.check_eof_error.call(null, G__24145, rdr, first_line);
      cljs.tools.reader.check_invalid_read_cond.call(null, G__24145, rdr, first_line);
      return G__24145;
    } else {
      var or__4685__auto__ = cljs.tools.reader.read_suppress.call(null, first_line, rdr, opts, pending_forms);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return cljs.tools.reader.NO_MATCH;
      }
    }
  }
};
cljs.tools.reader.read_cond_delimited = function cljs$tools$reader$read_cond_delimited(rdr, splicing, opts, pending_forms) {
  var first_line = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) ? cljs.tools.reader.reader_types.get_line_number.call(null, rdr) : -1;
  var result = function() {
    var matched = cljs.tools.reader.NO_MATCH;
    var finished = null;
    while (true) {
      if (matched === cljs.tools.reader.NO_MATCH) {
        var match = cljs.tools.reader.match_feature.call(null, first_line, rdr, opts, pending_forms);
        if (match === cljs.tools.reader.READ_FINISHED) {
          return cljs.tools.reader.READ_FINISHED;
        } else {
          var G__24148 = match;
          var G__24149 = null;
          matched = G__24148;
          finished = G__24149;
          continue;
        }
      } else {
        if (!(finished === cljs.tools.reader.READ_FINISHED)) {
          var G__24150 = matched;
          var G__24151 = cljs.tools.reader.read_suppress.call(null, first_line, rdr, opts, pending_forms);
          matched = G__24150;
          finished = G__24151;
          continue;
        } else {
          return matched;
        }
      }
      break;
    }
  }();
  if (result === cljs.tools.reader.READ_FINISHED) {
    return rdr;
  } else {
    if (cljs.core.truth_(splicing)) {
      if (!(result == null) ? result.cljs$lang$protocol_mask$partition0$ & 16777216 || result.cljs$core$ISequential$ ? true : false : false) {
        goog.array.insertArrayAt(pending_forms, cljs.core.to_array.call(null, result), 0);
        return rdr;
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Spliced form list in read-cond-splicing must implement java.util.List.");
      }
    } else {
      return result;
    }
  }
};
cljs.tools.reader.read_cond = function cljs$tools$reader$read_cond(rdr, _, opts, pending_forms) {
  if (cljs.core.not.call(null, function() {
    var and__4673__auto__ = opts;
    if (cljs.core.truth_(and__4673__auto__)) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), null, new cljs.core.Keyword(null, "allow", "allow", -1857325745), null], null), null)).call(null, (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
    } else {
      return and__4673__auto__;
    }
  }())) {
    throw cljs.core.ex_info.call(null, "Conditional read not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
  } else {
  }
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var splicing = cljs.core._EQ_.call(null, ch, "@");
    var ch__$1 = splicing ? cljs.tools.reader.reader_types.read_char.call(null, rdr) : ch;
    if (splicing) {
      if (cljs.core.truth_(cljs.tools.reader._STAR_read_delim_STAR_)) {
      } else {
        cljs.tools.reader.reader_types.reader_error.call(null, rdr, "cond-splice not in list");
      }
    } else {
    }
    var temp__4655__auto____$1 = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch__$1) ? cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr) : ch__$1;
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var ch__$2 = temp__4655__auto____$1;
      if (cljs.core.not_EQ_.call(null, ch__$2, "(")) {
        throw cljs.core.ex_info.call(null, "read-cond body must be a list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514)], null));
      } else {
        var _STAR_suppress_read_STAR_24153 = cljs.tools.reader._STAR_suppress_read_STAR_;
        cljs.tools.reader._STAR_suppress_read_STAR_ = function() {
          var or__4685__auto__ = cljs.tools.reader._STAR_suppress_read_STAR_;
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "preserve", "preserve", 1276846509), (new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244)).cljs$core$IFn$_invoke$arity$1(opts));
          }
        }();
        try {
          if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
            return cljs.tools.reader.impl.utils.reader_conditional.call(null, cljs.tools.reader.read_list.call(null, rdr, ch__$2, opts, pending_forms), splicing);
          } else {
            return cljs.tools.reader.read_cond_delimited.call(null, rdr, splicing, opts, pending_forms);
          }
        } finally {
          cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_24153;
        }
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.arg_env = null;
cljs.tools.reader.garg = function cljs$tools$reader$garg(n) {
  return cljs.core.symbol.call(null, [cljs.core.str(-1 === n ? "rest" : [cljs.core.str("p"), cljs.core.str(n)].join("")), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id.call(null)), cljs.core.str("#")].join(""));
};
cljs.tools.reader.read_fn = function cljs$tools$reader$read_fn(rdr, _, opts, pending_forms) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    throw cljs.core.ex_info.call(null, "Nested #()s are not allowed", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  } else {
  }
  var arg_env24156 = cljs.tools.reader.arg_env;
  cljs.tools.reader.arg_env = cljs.core.sorted_map.call(null);
  try {
    var form = cljs.tools.reader.read_STAR_.call(null, function() {
      var G__24157 = rdr;
      cljs.tools.reader.reader_types.unread.call(null, G__24157, "(");
      return G__24157;
    }(), true, null, opts, pending_forms);
    var rargs = cljs.core.rseq.call(null, cljs.tools.reader.arg_env);
    var args = rargs ? function() {
      var higharg = cljs.core.key.call(null, cljs.core.first.call(null, rargs));
      var args = function() {
        var i = 1;
        var args = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
        while (true) {
          if (i > higharg) {
            return cljs.core.persistent_BANG_.call(null, args);
          } else {
            var G__24158 = i + 1;
            var G__24159 = cljs.core.conj_BANG_.call(null, args, function() {
              var or__4685__auto__ = cljs.core.get.call(null, cljs.tools.reader.arg_env, i);
              if (cljs.core.truth_(or__4685__auto__)) {
                return or__4685__auto__;
              } else {
                return cljs.tools.reader.garg.call(null, i);
              }
            }());
            i = G__24158;
            args = G__24159;
            continue;
          }
          break;
        }
      }();
      var args__$1 = cljs.core.truth_(cljs.tools.reader.arg_env.call(null, -1)) ? cljs.core.conj.call(null, args, new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), cljs.tools.reader.arg_env.call(null, -1)) : args;
      return args__$1;
    }() : cljs.core.PersistentVector.EMPTY;
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, form), args), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null));
  } finally {
    cljs.tools.reader.arg_env = arg_env24156;
  }
};
cljs.tools.reader.register_arg = function cljs$tools$reader$register_arg(n) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    var temp__4655__auto__ = cljs.tools.reader.arg_env.call(null, n);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var ret = temp__4655__auto__;
      return ret;
    } else {
      var g = cljs.tools.reader.garg.call(null, n);
      cljs.tools.reader.arg_env = cljs.core.assoc.call(null, cljs.tools.reader.arg_env, n, g);
      return g;
    }
  } else {
    throw cljs.core.ex_info.call(null, "Arg literal not in #()", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }
};
cljs.tools.reader.read_symbol;
cljs.tools.reader.read_arg = function cljs$tools$reader$read_arg(rdr, pct, opts, pending_forms) {
  if (cljs.tools.reader.arg_env == null) {
    return cljs.tools.reader.read_symbol.call(null, rdr, pct);
  } else {
    var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.macro_terminating_QMARK_.call(null, ch) || ch == null) {
      return cljs.tools.reader.register_arg.call(null, 1);
    } else {
      if (cljs.core._EQ_.call(null, ch, "\x26")) {
        cljs.tools.reader.reader_types.read_char.call(null, rdr);
        return cljs.tools.reader.register_arg.call(null, -1);
      } else {
        var n = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
        if (!cljs.core.integer_QMARK_.call(null, n)) {
          throw cljs.core.ex_info.call(null, "Arg literal must be %, %\x26 or %integer", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
        } else {
          return cljs.tools.reader.register_arg.call(null, n);
        }
      }
    }
  }
};
cljs.tools.reader.gensym_env = null;
cljs.tools.reader.read_unquote = function cljs$tools$reader$read_unquote(rdr, comma, opts, pending_forms) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    if (cljs.core._EQ_.call(null, "@", ch)) {
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null)).call(null, function() {
        var G__24161 = rdr;
        cljs.tools.reader.reader_types.read_char.call(null, G__24161);
        return G__24161;
      }(), "@", opts, pending_forms);
    } else {
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null)).call(null, rdr, "~", opts, pending_forms);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.syntax_quote_STAR_;
cljs.tools.reader.unquote_splicing_QMARK_ = function cljs$tools$reader$unquote_splicing_QMARK_(form) {
  return cljs.core.seq_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.first.call(null, form), new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null));
};
cljs.tools.reader.unquote_QMARK_ = function cljs$tools$reader$unquote_QMARK_(form) {
  return cljs.core.seq_QMARK_.call(null, form) && cljs.core._EQ_.call(null, cljs.core.first.call(null, form), new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null));
};
cljs.tools.reader.expand_list = function cljs$tools$reader$expand_list(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  var r = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s__$1) {
      var item = cljs.core.first.call(null, s__$1);
      var ret = cljs.core.conj_BANG_.call(null, r, cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, item)) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.second.call(null, item)), new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null)) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, item)) ? cljs.core.second.call(null, item) : cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
      cljs.tools.reader.syntax_quote_STAR_.call(null, item)), new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null)));
      var G__24162 = cljs.core.next.call(null, s__$1);
      var G__24163 = ret;
      s__$1 = G__24162;
      r = G__24163;
      continue;
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, r));
    }
    break;
  }
};
cljs.tools.reader.flatten_map = function cljs$tools$reader$flatten_map(form) {
  var s = cljs.core.seq.call(null, form);
  var key_vals = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__24164 = cljs.core.next.call(null, s);
      var G__24165 = cljs.core.conj_BANG_.call(null, cljs.core.conj_BANG_.call(null, key_vals, cljs.core.key.call(null, e)), cljs.core.val.call(null, e));
      s = G__24164;
      key_vals = G__24165;
      continue;
    } else {
      return cljs.core.seq.call(null, cljs.core.persistent_BANG_.call(null, key_vals));
    }
    break;
  }
};
cljs.tools.reader.register_gensym = function cljs$tools$reader$register_gensym(sym) {
  if (cljs.core.not.call(null, cljs.tools.reader.gensym_env)) {
    throw cljs.core.ex_info.call(null, "Gensym literal not in syntax-quote", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  } else {
  }
  var or__4685__auto__ = cljs.core.get.call(null, cljs.tools.reader.gensym_env, sym);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    var gs = cljs.core.symbol.call(null, [cljs.core.str(cljs.core.subs.call(null, cljs.core.name.call(null, sym), 0, cljs.core.count.call(null, cljs.core.name.call(null, sym)) - 1)), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id.call(null)), cljs.core.str("__auto__")].join(""));
    cljs.tools.reader.gensym_env = cljs.core.assoc.call(null, cljs.tools.reader.gensym_env, sym, gs);
    return gs;
  }
};
cljs.tools.reader.add_meta = function cljs$tools$reader$add_meta(form, ret) {
  if (function() {
    var and__4673__auto__ = !(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 262144 || form.cljs$core$IWithMeta$ ? true : false : false;
    if (and__4673__auto__) {
      return cljs.core.seq.call(null, cljs.core.dissoc.call(null, cljs.core.meta.call(null, form), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "source", "source", -433931539)));
    } else {
      return and__4673__auto__;
    }
  }()) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.core.meta.call(null, form))), ret), new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null));
  } else {
    return ret;
  }
};
cljs.tools.reader.syntax_quote_coll = function cljs$tools$reader$syntax_quote_coll(type, coll) {
  var res = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol("cljs.core", "concat", "cljs.core/concat", -1133584918, null), cljs.tools.reader.expand_list.call(null, coll))), new cljs.core.Symbol("cljs.core", "sequence", "cljs.core/sequence", 1908459032, null));
  if (cljs.core.truth_(type)) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, res), type), new cljs.core.Symbol("cljs.core", "apply", "cljs.core/apply", 1757277831, null));
  } else {
    return res;
  }
};
cljs.tools.reader.map_func = function cljs$tools$reader$map_func(coll) {
  if (cljs.core.count.call(null, coll) >= 16) {
    return new cljs.core.Symbol("cljs.core", "hash-map", "cljs.core/hash-map", 303385767, null);
  } else {
    return new cljs.core.Symbol("cljs.core", "array-map", "cljs.core/array-map", -1519210683, null);
  }
};
cljs.tools.reader.bool_QMARK_ = function cljs$tools$reader$bool_QMARK_(x) {
  return x instanceof Boolean || x === true || x === false;
};
cljs.tools.reader.resolve_symbol = function cljs$tools$reader$resolve_symbol(s) {
  throw cljs.core.ex_info.call(null, "resolve-symbol is not implemented", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "sym", "sym", -1444860305), s], null));
};
cljs.tools.reader.syntax_quote_STAR_ = function cljs$tools$reader$syntax_quote_STAR_(form) {
  return cljs.tools.reader.add_meta.call(null, form, cljs.core.special_symbol_QMARK_.call(null, form) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, form), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)) : form instanceof cljs.core.Symbol ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.truth_(cljs.core.namespace.call(null, form)) ? cljs.tools.reader.resolve_symbol.call(null, form) : cljs.core.truth_(goog.string.endsWith(cljs.core.name.call(null, 
  form), "#")) ? cljs.tools.reader.register_gensym.call(null, form) : form), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)) : cljs.core.truth_(cljs.tools.reader.unquote_QMARK_.call(null, form)) ? cljs.core.second.call(null, form) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_.call(null, form)) ? function() {
    throw cljs.core.ex_info.call(null, "unquote-splice not in list", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182)], null));
  }() : cljs.core.coll_QMARK_.call(null, form) ? (!(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 67108864 || form.cljs$core$IRecord$ ? true : false : false) ? form : cljs.core.map_QMARK_.call(null, form) ? cljs.tools.reader.syntax_quote_coll.call(null, cljs.tools.reader.map_func.call(null, form), cljs.tools.reader.flatten_map.call(null, form)) : cljs.core.vector_QMARK_.call(null, form) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_coll.call(null, 
  null, form)), new cljs.core.Symbol("cljs.core", "vec", "cljs.core/vec", 307622519, null)) : cljs.core.set_QMARK_.call(null, form) ? cljs.tools.reader.syntax_quote_coll.call(null, new cljs.core.Symbol("cljs.core", "hash-set", "cljs.core/hash-set", 1130426749, null), form) : cljs.core.seq_QMARK_.call(null, form) || cljs.core.list_QMARK_.call(null, form) ? function() {
    var seq = cljs.core.seq.call(null, form);
    if (seq) {
      return cljs.tools.reader.syntax_quote_coll.call(null, null, seq);
    } else {
      return cljs.core.list(new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null));
    }
  }() : function() {
    throw cljs.core.ex_info.call(null, "Unknown Collection type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953)], null));
  }() : cljs.core.truth_(function() {
    var or__4685__auto__ = form instanceof cljs.core.Keyword;
    if (or__4685__auto__) {
      return or__4685__auto__;
    } else {
      var or__4685__auto____$1 = typeof form === "number";
      if (or__4685__auto____$1) {
        return or__4685__auto____$1;
      } else {
        var or__4685__auto____$2 = typeof form === "string";
        if (or__4685__auto____$2) {
          return or__4685__auto____$2;
        } else {
          var or__4685__auto____$3 = form == null;
          if (or__4685__auto____$3) {
            return or__4685__auto____$3;
          } else {
            var or__4685__auto____$4 = cljs.tools.reader.bool_QMARK_.call(null, form);
            if (cljs.core.truth_(or__4685__auto____$4)) {
              return or__4685__auto____$4;
            } else {
              return form instanceof RegExp;
            }
          }
        }
      }
    }
  }()) ? form : cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, form), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)));
};
cljs.tools.reader.read_syntax_quote = function cljs$tools$reader$read_syntax_quote(rdr, backquote, opts, pending_forms) {
  var gensym_env24173 = cljs.tools.reader.gensym_env;
  cljs.tools.reader.gensym_env = cljs.core.PersistentArrayMap.EMPTY;
  try {
    return cljs.tools.reader.syntax_quote_STAR_.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } finally {
    cljs.tools.reader.gensym_env = gensym_env24173;
  }
};
cljs.tools.reader.macros = function cljs$tools$reader$macros(ch) {
  var G__24175 = ch;
  switch(G__24175) {
    case '"':
      return cljs.tools.reader.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
      break;
    case "@":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null));
      break;
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "`":
      return cljs.tools.reader.read_syntax_quote;
      break;
    case "~":
      return cljs.tools.reader.read_unquote;
      break;
    case "(":
      return cljs.tools.reader.read_list;
      break;
    case ")":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.read_vector;
      break;
    case "]":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.read_map;
      break;
    case "}":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.read_char_STAR_;
      break;
    case "%":
      return cljs.tools.reader.read_arg;
      break;
    case "#":
      return cljs.tools.reader.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.dispatch_macros = function cljs$tools$reader$dispatch_macros(ch) {
  var G__24178 = ch;
  switch(G__24178) {
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "var", "var", 870848730, null));
      break;
    case "(":
      return cljs.tools.reader.read_fn;
      break;
    case "{":
      return cljs.tools.reader.read_set;
      break;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
      break;
    case "\x3d":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "read-eval not supported");
      break;
    case '"':
      return cljs.tools.reader.read_regex;
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.read_discard;
      break;
    case "?":
      return cljs.tools.reader.read_cond;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.read_tagged = function cljs$tools$reader$read_tagged(rdr, initch, opts, pending_forms) {
  var tag = cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Reader tag must be a symbol");
  } else {
  }
  if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
    return cljs.core.tagged_literal.call(null, tag, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } else {
    var temp__4655__auto__ = function() {
      var or__4685__auto__ = cljs.tools.reader._STAR_data_readers_STAR_.call(null, tag);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return cljs.tools.reader.default_data_readers.call(null, tag);
      }
    }();
    if (cljs.core.truth_(temp__4655__auto__)) {
      var f = temp__4655__auto__;
      return f.call(null, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    } else {
      var temp__4655__auto____$1 = cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
      if (cljs.core.truth_(temp__4655__auto____$1)) {
        var f = temp__4655__auto____$1;
        return f.call(null, tag, cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "No reader function for tag ", cljs.core.name.call(null, tag));
      }
    }
  }
};
cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_ = null;
cljs.tools.reader._STAR_suppress_read_STAR_ = false;
cljs.tools.reader.default_data_readers = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal = function cljs$tools$reader$read_STAR__internal(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  while (true) {
    if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_.call(null, reader) && !cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, cljs.tools.reader.reader_types.peek_char.call(null, reader))) {
      return cljs.tools.reader.reader_types.log_source_STAR_.call(null, reader, function() {
        while (true) {
          if (!goog.array.isEmpty(pending_forms)) {
            var form = pending_forms[0];
            goog.array.removeAt(pending_forms, 0);
            return form;
          } else {
            var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
            if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
              continue;
            } else {
              if (ch == null) {
                if (eof_error_QMARK_) {
                  return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF");
                } else {
                  return sentinel;
                }
              } else {
                if (ch === return_on) {
                  return cljs.tools.reader.READ_FINISHED;
                } else {
                  if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
                    return cljs.tools.reader.read_number.call(null, reader, ch);
                  } else {
                    var f = cljs.tools.reader.macros.call(null, ch);
                    if (!(f == null)) {
                      var res = f.call(null, reader, ch, opts, pending_forms);
                      if (res === reader) {
                        continue;
                      } else {
                        return res;
                      }
                    } else {
                      return cljs.tools.reader.read_symbol.call(null, reader, ch);
                    }
                  }
                }
              }
            }
          }
          break;
        }
      });
    } else {
      if (!goog.array.isEmpty(pending_forms)) {
        var form = pending_forms[0];
        goog.array.removeAt(pending_forms, 0);
        return form;
      } else {
        var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
          continue;
        } else {
          if (ch == null) {
            if (eof_error_QMARK_) {
              return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF");
            } else {
              return sentinel;
            }
          } else {
            if (ch === return_on) {
              return cljs.tools.reader.READ_FINISHED;
            } else {
              if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
                return cljs.tools.reader.read_number.call(null, reader, ch);
              } else {
                var f = cljs.tools.reader.macros.call(null, ch);
                if (!(f == null)) {
                  var res = f.call(null, reader, ch, opts, pending_forms);
                  if (res === reader) {
                    continue;
                  } else {
                    return res;
                  }
                } else {
                  return cljs.tools.reader.read_symbol.call(null, reader, ch);
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
cljs.tools.reader.read_STAR_ = function cljs$tools$reader$read_STAR_(var_args) {
  var args24180 = [];
  var len__5743__auto___24184 = arguments.length;
  var i__5744__auto___24185 = 0;
  while (true) {
    if (i__5744__auto___24185 < len__5743__auto___24184) {
      args24180.push(arguments[i__5744__auto___24185]);
      var G__24186 = i__5744__auto___24185 + 1;
      i__5744__auto___24185 = G__24186;
      continue;
    } else {
    }
    break;
  }
  var G__24182 = args24180.length;
  switch(G__24182) {
    case 5:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24180.length)].join(""));;
  }
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 = function(reader, eof_error_QMARK_, sentinel, opts, pending_forms) {
  return cljs.tools.reader.read_STAR_.call(null, reader, eof_error_QMARK_, sentinel, null, opts, pending_forms);
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 = function(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  try {
    return cljs.tools.reader.read_STAR__internal.call(null, reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms);
  } catch (e24183) {
    if (e24183 instanceof Error) {
      var e = e24183;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, e)) {
        var d = cljs.core.ex_data.call(null, e);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), d, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
          reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
        }
      } else {
        throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
      }
    } else {
      throw e24183;
    }
  }
};
cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity = 6;
cljs.tools.reader.read = function cljs$tools$reader$read(var_args) {
  var args24188 = [];
  var len__5743__auto___24194 = arguments.length;
  var i__5744__auto___24195 = 0;
  while (true) {
    if (i__5744__auto___24195 < len__5743__auto___24194) {
      args24188.push(arguments[i__5744__auto___24195]);
      var G__24196 = i__5744__auto___24195 + 1;
      i__5744__auto___24195 = G__24196;
      continue;
    } else {
    }
    break;
  }
  var G__24190 = args24188.length;
  switch(G__24190) {
    case 1:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24188.length)].join(""));;
  }
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.read.call(null, reader, true, null);
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 = function(p__24191, reader) {
  var map__24192 = p__24191;
  var map__24192__$1 = (!(map__24192 == null) ? map__24192.cljs$lang$protocol_mask$partition0$ & 64 || map__24192.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24192) : map__24192;
  var opts = map__24192__$1;
  var eof = cljs.core.get.call(null, map__24192__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237), new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531));
  return cljs.tools.reader.read_STAR_.call(null, reader, cljs.core._EQ_.call(null, eof, new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531)), eof, null, opts, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 = function(reader, eof_error_QMARK_, sentinel) {
  return cljs.tools.reader.read_STAR_.call(null, reader, eof_error_QMARK_, sentinel, null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.to_array.call(null, cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.read_string = function cljs$tools$reader$read_string(var_args) {
  var args24198 = [];
  var len__5743__auto___24201 = arguments.length;
  var i__5744__auto___24202 = 0;
  while (true) {
    if (i__5744__auto___24202 < len__5743__auto___24201) {
      args24198.push(arguments[i__5744__auto___24202]);
      var G__24203 = i__5744__auto___24202 + 1;
      i__5744__auto___24202 = G__24203;
      continue;
    } else {
    }
    break;
  }
  var G__24200 = args24198.length;
  switch(G__24200) {
    case 1:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24198.length)].join(""));;
  }
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.read_string.call(null, cljs.core.PersistentArrayMap.EMPTY, s);
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = s;
    if (cljs.core.truth_(and__4673__auto__)) {
      return !(s === "");
    } else {
      return and__4673__auto__;
    }
  }())) {
    return cljs.tools.reader.read.call(null, opts, cljs.tools.reader.reader_types.string_push_back_reader.call(null, s));
  } else {
    return null;
  }
};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.tools.reader.edn");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
goog.require("cljs.tools.reader.impl.commons");
goog.require("cljs.tools.reader");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.edn.read;
cljs.tools.reader.edn.macros;
cljs.tools.reader.edn.dispatch_macros;
cljs.tools.reader.edn.macro_terminating_QMARK_ = function cljs$tools$reader$edn$macro_terminating_QMARK_(ch) {
  var and__4673__auto__ = !("#" === ch);
  if (and__4673__auto__) {
    var and__4673__auto____$1 = !("'" === ch);
    if (and__4673__auto____$1) {
      var and__4673__auto____$2 = !(":" === ch);
      if (and__4673__auto____$2) {
        return cljs.tools.reader.edn.macros.call(null, ch);
      } else {
        return and__4673__auto____$2;
      }
    } else {
      return and__4673__auto____$1;
    }
  } else {
    return and__4673__auto__;
  }
};
cljs.tools.reader.edn.not_constituent_QMARK_ = function cljs$tools$reader$edn$not_constituent_QMARK_(ch) {
  return "@" === ch || "`" === ch || "~" === ch;
};
cljs.tools.reader.edn.read_token = function cljs$tools$reader$edn$read_token(var_args) {
  var args24207 = [];
  var len__5743__auto___24211 = arguments.length;
  var i__5744__auto___24212 = 0;
  while (true) {
    if (i__5744__auto___24212 < len__5743__auto___24211) {
      args24207.push(arguments[i__5744__auto___24212]);
      var G__24213 = i__5744__auto___24212 + 1;
      i__5744__auto___24212 = G__24213;
      continue;
    } else {
    }
    break;
  }
  var G__24209 = args24207.length;
  switch(G__24209) {
    case 2:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24207.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$2 = function(rdr, initch) {
  return cljs.tools.reader.edn.read_token.call(null, rdr, initch, true);
};
cljs.tools.reader.edn.read_token.cljs$core$IFn$_invoke$arity$3 = function(rdr, initch, validate_leading_QMARK_) {
  if (cljs.core.not.call(null, initch)) {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading");
  } else {
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = validate_leading_QMARK_;
      if (cljs.core.truth_(and__4673__auto__)) {
        return cljs.tools.reader.edn.not_constituent_QMARK_.call(null, initch);
      } else {
        return and__4673__auto__;
      }
    }())) {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid leading character: ", initch);
    } else {
      var sb = new goog.string.StringBuffer;
      var ch = function() {
        cljs.tools.reader.reader_types.unread.call(null, rdr, initch);
        return initch;
      }();
      while (true) {
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) || cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, ch) || ch == null) {
          return [cljs.core.str(sb)].join("");
        } else {
          if (cljs.tools.reader.edn.not_constituent_QMARK_.call(null, ch)) {
            return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid constituent character: ", ch);
          } else {
            var G__24215 = function() {
              var G__24210 = sb;
              G__24210.append(cljs.tools.reader.reader_types.read_char.call(null, rdr));
              return G__24210;
            }();
            var G__24216 = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
            sb = G__24215;
            ch = G__24216;
            continue;
          }
        }
        break;
      }
    }
  }
};
cljs.tools.reader.edn.read_token.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.edn.read_tagged;
cljs.tools.reader.edn.read_dispatch = function cljs$tools$reader$edn$read_dispatch(rdr, _, opts) {
  var temp__4655__auto__ = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ch = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.tools.reader.edn.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var dm = temp__4655__auto____$1;
      return dm.call(null, rdr, ch, opts);
    } else {
      var temp__4655__auto____$2 = cljs.tools.reader.edn.read_tagged.call(null, function() {
        var G__24218 = rdr;
        cljs.tools.reader.reader_types.unread.call(null, G__24218, ch);
        return G__24218;
      }(), ch, opts);
      if (cljs.core.truth_(temp__4655__auto____$2)) {
        var obj = temp__4655__auto____$2;
        return obj;
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "No dispatch macro for ", ch);
      }
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.edn.read_unmatched_delimiter = function cljs$tools$reader$edn$read_unmatched_delimiter(rdr, ch, opts) {
  return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.tools.reader.edn.read_unicode_char = function cljs$tools$reader$edn$read_unicode_char(var_args) {
  var args24219 = [];
  var len__5743__auto___24222 = arguments.length;
  var i__5744__auto___24223 = 0;
  while (true) {
    if (i__5744__auto___24223 < len__5743__auto___24222) {
      args24219.push(arguments[i__5744__auto___24223]);
      var G__24224 = i__5744__auto___24223 + 1;
      i__5744__auto___24223 = G__24224;
      continue;
    } else {
    }
    break;
  }
  var G__24221 = args24219.length;
  switch(G__24221) {
    case 4:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24219.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count.call(null, token) === l) {
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid unicode character: \\"), cljs.core.str(token)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.char_code.call(null, cljs.core.nth.call(null, token, i), base);
      if (d === -1) {
        throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(cljs.core.nth.call(null, token, i))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
      } else {
        var G__24226 = i + 1;
        var G__24227 = d + uc * base;
        i = G__24226;
        uc = G__24227;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.char_code.call(null, initch, base);
  while (true) {
    if (uc === -1) {
      throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(initch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
    } else {
      if (!(i === length)) {
        var ch = cljs.tools.reader.reader_types.peek_char.call(null, rdr);
        if (cljs.core.truth_(function() {
          var or__4685__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
          if (or__4685__auto__) {
            return or__4685__auto__;
          } else {
            var or__4685__auto____$1 = cljs.tools.reader.edn.macros.call(null, ch);
            if (cljs.core.truth_(or__4685__auto____$1)) {
              return or__4685__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid character length: "), cljs.core.str(i), cljs.core.str(", should be: "), cljs.core.str(length)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.char_code.call(null, ch, base);
          cljs.tools.reader.reader_types.read_char.call(null, rdr);
          if (d === -1) {
            throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid digit: "), cljs.core.str(ch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170)], null));
          } else {
            var G__24228 = i + 1;
            var G__24229 = d + uc * base;
            i = G__24228;
            uc = G__24229;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.edn.upper_limit = "\ud7ff" | 0;
cljs.tools.reader.edn.lower_limit = "\ue000" | 0;
cljs.tools.reader.edn.read_char_STAR_ = function cljs$tools$reader$edn$read_char_STAR_(rdr, backslash, opts) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  if (!(ch == null)) {
    var token = cljs.tools.reader.edn.macro_terminating_QMARK_.call(null, ch) || cljs.tools.reader.edn.not_constituent_QMARK_.call(null, ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch) ? [cljs.core.str(ch)].join("") : cljs.tools.reader.edn.read_token.call(null, rdr, ch, false);
    var token_len = cljs.core.count.call(null, token);
    if (1 === token_len) {
      return cljs.core.nth.call(null, token, 0);
    } else {
      if (token === "newline") {
        return "\n";
      } else {
        if (token === "space") {
          return " ";
        } else {
          if (token === "tab") {
            return "\t";
          } else {
            if (token === "backspace") {
              return "\b";
            } else {
              if (token === "formfeed") {
                return "\f";
              } else {
                if (token === "return") {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.edn.read_unicode_char.call(null, token, 1, 4, 16);
                    var ic = c.charCodeAt();
                    if (ic > cljs.tools.reader.edn.upper_limit && ic < cljs.tools.reader.edn.lower_limit) {
                      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid character constant: \\u", c);
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid octal escape sequence length: ", len);
                      } else {
                        var uc = cljs.tools.reader.edn.read_unicode_char.call(null, token, 1, len, 8);
                        if ((uc | 0) > 255) {
                          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377]");
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unsupported character: \\", token);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading character");
  }
};
cljs.tools.reader.edn.read_delimited = function cljs$tools$reader$edn$read_delimited(delim, rdr, opts) {
  var first_line = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, rdr)) ? cljs.tools.reader.reader_types.get_line_number.call(null, rdr) : null;
  var delim__$1 = cljs.tools.reader.impl.utils.char$.call(null, delim);
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.tools.reader.impl.commons.read_past.call(null, cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.tools.reader.reader_types.reader_error.call(null, rdr, "EOF while reading", cljs.core.truth_(first_line) ? [cljs.core.str(", starting at line"), cljs.core.str(first_line)].join("") : null);
    }
    if (cljs.core._EQ_.call(null, delim__$1, cljs.tools.reader.impl.utils.char$.call(null, ch))) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4655__auto__ = cljs.tools.reader.edn.macros.call(null, ch);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var macrofn = temp__4655__auto__;
        var mret = macrofn.call(null, rdr, ch, opts);
        var G__24232 = !(mret === rdr) ? cljs.core.conj_BANG_.call(null, a, mret) : a;
        a = G__24232;
        continue;
      } else {
        var o = cljs.tools.reader.edn.read.call(null, function() {
          var G__24231 = rdr;
          cljs.tools.reader.reader_types.unread.call(null, G__24231, ch);
          return G__24231;
        }(), true, null, opts);
        var G__24233 = !(o === rdr) ? cljs.core.conj_BANG_.call(null, a, o) : a;
        a = G__24233;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_list = function cljs$tools$reader$edn$read_list(rdr, _, opts) {
  var the_list = cljs.tools.reader.edn.read_delimited.call(null, ")", rdr, opts);
  if (cljs.core.empty_QMARK_.call(null, the_list)) {
    return cljs.core.List.EMPTY;
  } else {
    return cljs.core.apply.call(null, cljs.core.list, the_list);
  }
};
cljs.tools.reader.edn.read_vector = function cljs$tools$reader$edn$read_vector(rdr, _, opts) {
  return cljs.tools.reader.edn.read_delimited.call(null, "]", rdr, opts);
};
cljs.tools.reader.edn.read_map = function cljs$tools$reader$edn$read_map(rdr, _, opts) {
  var l = cljs.core.to_array.call(null, cljs.tools.reader.edn.read_delimited.call(null, "}", rdr, opts));
  if (1 === (l.length & 1)) {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.tools.reader.edn.read_number = function cljs$tools$reader$edn$read_number(reader, initch, opts) {
  var sb = function() {
    var G__24236 = new goog.string.StringBuffer;
    G__24236.append(initch);
    return G__24236;
  }();
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4685__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch);
      if (or__4685__auto__) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = cljs.tools.reader.edn.macros.call(null, ch);
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = [cljs.core.str(sb)].join("");
      cljs.tools.reader.reader_types.unread.call(null, reader, ch);
      var or__4685__auto__ = cljs.tools.reader.impl.commons.match_number.call(null, s);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__24238 = function() {
        var G__24237 = sb;
        G__24237.append(ch);
        return G__24237;
      }();
      var G__24239 = cljs.tools.reader.reader_types.read_char.call(null, reader);
      sb = G__24238;
      ch = G__24239;
      continue;
    }
    break;
  }
};
cljs.tools.reader.edn.escape_char = function cljs$tools$reader$edn$escape_char(sb, rdr) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, rdr);
  var G__24241 = ch;
  switch(G__24241) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = cljs.tools.reader.reader_types.read_char.call(null, rdr);
      if (-1 === parseInt(ch__$1 | 0, 16)) {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid unicode escape: \\u", ch__$1);
      } else {
        return cljs.tools.reader.edn.read_unicode_char.call(null, rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_.call(null, ch)) {
        var ch__$1 = cljs.tools.reader.edn.read_unicode_char.call(null, rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 223) {
          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Octal escape sequence must be in range [0, 377]");
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Unsupported escape character: \\", ch);
      }
    ;
  }
};
cljs.tools.reader.edn.read_string_STAR_ = function cljs$tools$reader$edn$read_string_STAR_(reader, _, opts) {
  var sb = new goog.string.StringBuffer;
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  while (true) {
    var G__24246 = ch;
    if (cljs.core._EQ_.call(null, null, G__24246)) {
      return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF while reading string");
    } else {
      if (cljs.core._EQ_.call(null, "\\", G__24246)) {
        var G__24249 = function() {
          var G__24247 = sb;
          G__24247.append(cljs.tools.reader.edn.escape_char.call(null, sb, reader));
          return G__24247;
        }();
        var G__24250 = cljs.tools.reader.reader_types.read_char.call(null, reader);
        sb = G__24249;
        ch = G__24250;
        continue;
      } else {
        if (cljs.core._EQ_.call(null, '"', G__24246)) {
          return [cljs.core.str(sb)].join("");
        } else {
          var G__24251 = function() {
            var G__24248 = sb;
            G__24248.append(ch);
            return G__24248;
          }();
          var G__24252 = cljs.tools.reader.reader_types.read_char.call(null, reader);
          sb = G__24251;
          ch = G__24252;
          continue;
        }
      }
    }
    break;
  }
};
cljs.tools.reader.edn.read_symbol = function cljs$tools$reader$edn$read_symbol(rdr, initch) {
  var temp__4657__auto__ = cljs.tools.reader.edn.read_token.call(null, rdr, initch);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var token = temp__4657__auto__;
    var G__24254 = token;
    switch(G__24254) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        break;
      case "NaN":
        return Number.NaN;
        break;
      case "-Infinity":
        return Number.NEGATIVE_INFINITY;
        break;
      case "Infinity":
      ;
      case "+Infinity":
        return Number.POSITIVE_INFINITY;
        break;
      default:
        var or__4685__auto__ = function() {
          var temp__4657__auto____$1 = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
          if (cljs.core.truth_(temp__4657__auto____$1)) {
            var p = temp__4657__auto____$1;
            return cljs.core.symbol.call(null, p.call(null, 0), p.call(null, 1));
          } else {
            return null;
          }
        }();
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Invalid token: ", token);
        }
      ;
    }
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_keyword = function cljs$tools$reader$edn$read_keyword(reader, initch, opts) {
  var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
    var token = cljs.tools.reader.edn.read_token.call(null, reader, ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol.call(null, token);
    if (cljs.core.truth_(function() {
      var and__4673__auto__ = s;
      if (cljs.core.truth_(and__4673__auto__)) {
        return -1 === token.indexOf("::");
      } else {
        return and__4673__auto__;
      }
    }())) {
      var ns = s.call(null, 0);
      var name = s.call(null, 1);
      if (":" === cljs.core.nth.call(null, token, 0)) {
        return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :", token);
      } else {
        return cljs.core.keyword.call(null, ns, name);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :", token);
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, reader, "Invalid token: :");
  }
};
cljs.tools.reader.edn.wrapping_reader = function cljs$tools$reader$edn$wrapping_reader(sym) {
  return function(rdr, _, opts) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.tools.reader.edn.read.call(null, rdr, true, null, opts)), sym);
  };
};
cljs.tools.reader.edn.read_meta = function cljs$tools$reader$edn$read_meta(rdr, _, opts) {
  var m = cljs.tools.reader.impl.utils.desugar_meta.call(null, cljs.tools.reader.edn.read.call(null, rdr, true, null, opts));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata must be Symbol, Keyword, String or Map");
  }
  var o = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Metadata can only be applied to IMetas");
  }
};
cljs.tools.reader.edn.read_set = function cljs$tools$reader$edn$read_set(rdr, _, opts) {
  return cljs.core.set.call(null, cljs.tools.reader.edn.read_delimited.call(null, "}", rdr, opts));
};
cljs.tools.reader.edn.read_discard = function cljs$tools$reader$edn$read_discard(rdr, _, opts) {
  var G__24259 = rdr;
  cljs.tools.reader.edn.read.call(null, G__24259, true, null, true);
  return G__24259;
};
cljs.tools.reader.edn.macros = function cljs$tools$reader$edn$macros(ch) {
  var G__24261 = ch;
  switch(G__24261) {
    case '"':
      return cljs.tools.reader.edn.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.edn.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "^":
      return cljs.tools.reader.edn.read_meta;
      break;
    case "(":
      return cljs.tools.reader.edn.read_list;
      break;
    case ")":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.edn.read_vector;
      break;
    case "]":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.edn.read_map;
      break;
    case "}":
      return cljs.tools.reader.edn.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.edn.read_char_STAR_;
      break;
    case "#":
      return cljs.tools.reader.edn.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.edn.dispatch_macros = function cljs$tools$reader$edn$dispatch_macros(ch) {
  var G__24264 = ch;
  switch(G__24264) {
    case "^":
      return cljs.tools.reader.edn.read_meta;
      break;
    case "{":
      return cljs.tools.reader.edn.read_set;
      break;
    case "\x3c":
      return cljs.tools.reader.impl.commons.throwing_reader.call(null, "Unreadable form");
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.edn.read_discard;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.edn.read_tagged = function cljs$tools$reader$edn$read_tagged(rdr, initch, opts) {
  var tag = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  var object = cljs.tools.reader.edn.read.call(null, rdr, true, null, opts);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.reader_types.reader_error.call(null, rdr, "Reader tag must be a symbol");
  } else {
  }
  var temp__4655__auto__ = function() {
    var or__4685__auto__ = cljs.core.get.call(null, (new cljs.core.Keyword(null, "readers", "readers", -2118263030)).cljs$core$IFn$_invoke$arity$1(opts), tag);
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return cljs.tools.reader.default_data_readers.call(null, tag);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var f = temp__4655__auto__;
    return f.call(null, object);
  } else {
    var temp__4655__auto____$1 = (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var d = temp__4655__auto____$1;
      return d.call(null, tag, object);
    } else {
      return cljs.tools.reader.reader_types.reader_error.call(null, rdr, "No reader function for tag ", cljs.core.name.call(null, tag));
    }
  }
};
cljs.tools.reader.edn.read = function cljs$tools$reader$edn$read(var_args) {
  var args24266 = [];
  var len__5743__auto___24273 = arguments.length;
  var i__5744__auto___24274 = 0;
  while (true) {
    if (i__5744__auto___24274 < len__5743__auto___24273) {
      args24266.push(arguments[i__5744__auto___24274]);
      var G__24275 = i__5744__auto___24274 + 1;
      i__5744__auto___24274 = G__24275;
      continue;
    } else {
    }
    break;
  }
  var G__24268 = args24266.length;
  switch(G__24268) {
    case 1:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24266.length)].join(""));;
  }
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.edn.read.call(null, cljs.core.PersistentArrayMap.EMPTY, reader);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$2 = function(p__24269, reader) {
  var map__24270 = p__24269;
  var map__24270__$1 = (!(map__24270 == null) ? map__24270.cljs$lang$protocol_mask$partition0$ & 64 || map__24270.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24270) : map__24270;
  var opts = map__24270__$1;
  var eof = cljs.core.get.call(null, map__24270__$1, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  var eof_error_QMARK_ = !cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "eof", "eof", -489063237));
  return cljs.tools.reader.edn.read.call(null, reader, eof_error_QMARK_, eof, opts);
};
cljs.tools.reader.edn.read.cljs$core$IFn$_invoke$arity$4 = function(reader, eof_error_QMARK_, eof, opts) {
  try {
    while (true) {
      var ch = cljs.tools.reader.reader_types.read_char.call(null, reader);
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_.call(null, ch)) {
        continue;
      } else {
        if (ch == null) {
          if (cljs.core.truth_(eof_error_QMARK_)) {
            return cljs.tools.reader.reader_types.reader_error.call(null, reader, "EOF");
          } else {
            return eof;
          }
        } else {
          if (cljs.tools.reader.impl.commons.number_literal_QMARK_.call(null, reader, ch)) {
            return cljs.tools.reader.edn.read_number.call(null, reader, ch, opts);
          } else {
            var f = cljs.tools.reader.edn.macros.call(null, ch);
            if (cljs.core.truth_(f)) {
              var res = f.call(null, reader, ch, opts);
              if (res === reader) {
                continue;
              } else {
                return res;
              }
            } else {
              return cljs.tools.reader.edn.read_symbol.call(null, reader, ch);
            }
          }
        }
      }
      break;
    }
  } catch (e24272) {
    if (e24272 instanceof Error) {
      var e = e24272;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_.call(null, e)) {
        var d = cljs.core.ex_data.call(null, e);
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), d, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
          reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
        }
      } else {
        throw cljs.core.ex_info.call(null, e.message, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098)], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_.call(null, reader)) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.tools.reader.reader_types.get_line_number.call(null, 
        reader), new cljs.core.Keyword(null, "column", "column", 2078222095), cljs.tools.reader.reader_types.get_column_number.call(null, reader), new cljs.core.Keyword(null, "file", "file", -1269645878), cljs.tools.reader.reader_types.get_file_name.call(null, reader)], null) : null), e);
      }
    } else {
      throw e24272;
    }
  }
};
cljs.tools.reader.edn.read.cljs$lang$maxFixedArity = 4;
cljs.tools.reader.edn.read_string = function cljs$tools$reader$edn$read_string(var_args) {
  var args24277 = [];
  var len__5743__auto___24280 = arguments.length;
  var i__5744__auto___24281 = 0;
  while (true) {
    if (i__5744__auto___24281 < len__5743__auto___24280) {
      args24277.push(arguments[i__5744__auto___24281]);
      var G__24282 = i__5744__auto___24281 + 1;
      i__5744__auto___24281 = G__24282;
      continue;
    } else {
    }
    break;
  }
  var G__24279 = args24277.length;
  switch(G__24279) {
    case 1:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24277.length)].join(""));;
  }
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.edn.read_string.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "eof", "eof", -489063237), null], null), s);
};
cljs.tools.reader.edn.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = s;
    if (cljs.core.truth_(and__4673__auto__)) {
      return cljs.core.not_EQ_.call(null, s, "");
    } else {
      return and__4673__auto__;
    }
  }())) {
    return cljs.tools.reader.edn.read.call(null, opts, cljs.tools.reader.reader_types.string_push_back_reader.call(null, s));
  } else {
    return null;
  }
};
cljs.tools.reader.edn.read_string.cljs$lang$maxFixedArity = 2;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__24286_SHARP_) {
      return max === p1__24286_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union(var_args) {
  var args24287 = [];
  var len__5743__auto___24293 = arguments.length;
  var i__5744__auto___24294 = 0;
  while (true) {
    if (i__5744__auto___24294 < len__5743__auto___24293) {
      args24287.push(arguments[i__5744__auto___24294]);
      var G__24295 = i__5744__auto___24294 + 1;
      i__5744__auto___24294 = G__24295;
      continue;
    } else {
    }
    break;
  }
  var G__24292 = args24287.length;
  switch(G__24292) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24287.slice(2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq24288) {
  var G__24289 = cljs.core.first.call(null, seq24288);
  var seq24288__$1 = cljs.core.next.call(null, seq24288);
  var G__24290 = cljs.core.first.call(null, seq24288__$1);
  var seq24288__$2 = cljs.core.next.call(null, seq24288__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__24289, G__24290, seq24288__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection(var_args) {
  var args24298 = [];
  var len__5743__auto___24304 = arguments.length;
  var i__5744__auto___24305 = 0;
  while (true) {
    if (i__5744__auto___24305 < len__5743__auto___24304) {
      args24298.push(arguments[i__5744__auto___24305]);
      var G__24306 = i__5744__auto___24305 + 1;
      i__5744__auto___24305 = G__24306;
      continue;
    } else {
    }
    break;
  }
  var G__24303 = args24298.length;
  switch(G__24303) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24298.slice(2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__24308 = s2;
      var G__24309 = s1;
      s1 = G__24308;
      s2 = G__24309;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__24297_SHARP_) {
    return -cljs.core.count.call(null, p1__24297_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq24299) {
  var G__24300 = cljs.core.first.call(null, seq24299);
  var seq24299__$1 = cljs.core.next.call(null, seq24299);
  var G__24301 = cljs.core.first.call(null, seq24299__$1);
  var seq24299__$2 = cljs.core.next.call(null, seq24299__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__24300, G__24301, seq24299__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference(var_args) {
  var args24310 = [];
  var len__5743__auto___24316 = arguments.length;
  var i__5744__auto___24317 = 0;
  while (true) {
    if (i__5744__auto___24317 < len__5743__auto___24316) {
      args24310.push(arguments[i__5744__auto___24317]);
      var G__24318 = i__5744__auto___24317 + 1;
      i__5744__auto___24317 = G__24318;
      continue;
    } else {
    }
    break;
  }
  var G__24315 = args24310.length;
  switch(G__24315) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24310.slice(2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq24311) {
  var G__24312 = cljs.core.first.call(null, seq24311);
  var seq24311__$1 = cljs.core.next.call(null, seq24311);
  var G__24313 = cljs.core.first.call(null, seq24311__$1);
  var seq24311__$2 = cljs.core.next.call(null, seq24311__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__24312, G__24313, seq24311__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__24320_SHARP_) {
    return cljs.core.select_keys.call(null, p1__24320_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__24323) {
    var vec__24324 = p__24323;
    var old = cljs.core.nth.call(null, vec__24324, 0, null);
    var new$ = cljs.core.nth.call(null, vec__24324, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__24325_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__24325_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__24328) {
    var vec__24329 = p__24328;
    var k = cljs.core.nth.call(null, vec__24329, 0, null);
    var v = cljs.core.nth.call(null, vec__24329, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join(var_args) {
  var args24334 = [];
  var len__5743__auto___24339 = arguments.length;
  var i__5744__auto___24340 = 0;
  while (true) {
    if (i__5744__auto___24340 < len__5743__auto___24339) {
      args24334.push(arguments[i__5744__auto___24340]);
      var G__24341 = i__5744__auto___24340 + 1;
      i__5744__auto___24340 = G__24341;
      continue;
    } else {
    }
    break;
  }
  var G__24336 = args24334.length;
  switch(G__24336) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24334.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__24337 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__24337, 0, null);
    var s = cljs.core.nth.call(null, vec__24337, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__24337, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__24337, r, s, idx) {
            return function(p1__24330_SHARP_, p2__24331_SHARP_) {
              return cljs.core.conj.call(null, p1__24330_SHARP_, cljs.core.merge.call(null, p2__24331_SHARP_, x));
            };
          }(found, ks, vec__24337, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__24337, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__24338 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__24338, 0, null);
  var s = cljs.core.nth.call(null, vec__24338, 1, null);
  var k = cljs.core.nth.call(null, vec__24338, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__24338, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__24338, r, s, k, idx) {
          return function(p1__24332_SHARP_, p2__24333_SHARP_) {
            return cljs.core.conj.call(null, p1__24332_SHARP_, cljs.core.merge.call(null, p2__24333_SHARP_, x));
          };
        }(found, vec__24338, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__24338, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__24343_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__24343_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__24344_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__24344_SHARP_);
  }, set2);
};
goog.provide("taoensso.truss.impl");
goog.require("cljs.core");
goog.require("clojure.set");
taoensso.truss.impl.rsome = function taoensso$truss$impl$rsome(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    var temp__4657__auto__ = pred.call(null, in$);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var p = temp__4657__auto__;
      return cljs.core.reduced.call(null, p);
    } else {
      return null;
    }
  }, null, coll);
};
taoensso.truss.impl.revery_QMARK_ = function taoensso$truss$impl$revery_QMARK_(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    if (cljs.core.truth_(pred.call(null, in$))) {
      return true;
    } else {
      return cljs.core.reduced.call(null, null);
    }
  }, true, coll);
};
taoensso.truss.impl.nnil_QMARK_ = function taoensso$truss$impl$nnil_QMARK_(x) {
  return !(x == null);
};
taoensso.truss.impl.set_STAR_ = function taoensso$truss$impl$set_STAR_(x) {
  if (cljs.core.set_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.set.call(null, x);
  }
};
taoensso.truss.impl.ks_EQ_ = function taoensso$truss$impl$ks_EQ_(ks, m) {
  return cljs.core._EQ_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.truss.impl.set_STAR_.call(null, ks));
};
taoensso.truss.impl.ks_LT__EQ_ = function taoensso$truss$impl$ks_LT__EQ_(ks, m) {
  return clojure.set.subset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.truss.impl.set_STAR_.call(null, ks));
};
taoensso.truss.impl.ks_GT__EQ_ = function taoensso$truss$impl$ks_GT__EQ_(ks, m) {
  return clojure.set.superset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.truss.impl.set_STAR_.call(null, ks));
};
taoensso.truss.impl.ks_nnil_QMARK_ = function taoensso$truss$impl$ks_nnil_QMARK_(ks, m) {
  return taoensso.truss.impl.revery_QMARK_.call(null, function(p1__24347_SHARP_) {
    return !(cljs.core.get.call(null, m, p1__24347_SHARP_) == null);
  }, ks);
};
taoensso.truss.impl.now_dt = function taoensso$truss$impl$now_dt() {
  return new Date;
};
taoensso.truss.impl._STAR___QMARK_data_STAR_ = null;
taoensso.truss.impl.non_throwing = function taoensso$truss$impl$non_throwing(pred) {
  return function(x) {
    try {
      return pred.call(null, x);
    } catch (e24349) {
      if (e24349 instanceof Error) {
        var _ = e24349;
        return null;
      } else {
        throw e24349;
      }
    }
  };
};
taoensso.truss.impl.non_throwing_QMARK_ = function taoensso$truss$impl$non_throwing_QMARK_(p) {
  return false;
};
taoensso.truss.impl._xpred = function taoensso$truss$impl$_xpred(pred) {
  if (!cljs.core.vector_QMARK_.call(null, pred)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pred, taoensso.truss.impl.non_throwing_QMARK_.call(null, pred)], null);
  } else {
    var vec__24357 = pred;
    var type = cljs.core.nth.call(null, vec__24357, 0, null);
    var a1 = cljs.core.nth.call(null, vec__24357, 1, null);
    var a2 = cljs.core.nth.call(null, vec__24357, 2, null);
    var a3 = cljs.core.nth.call(null, vec__24357, 3, null);
    if (cljs.core.truth_(a1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Special predicate [\x3cspecial-type\x3e \x3carg\x3e] form w/o \x3carg\x3e"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "a1", "a1", -2100654832, null)))].join(""));
    }
    var G__24358 = type instanceof cljs.core.Keyword ? type.fqn : null;
    switch(G__24358) {
      case "el":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))), false], null);
        break;
      case "ks-nnil?":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "ks-nnil?", "taoensso.truss.impl/ks-nnil?", 1913972845, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", 
        -467759335, null))))))))), false], null);
        break;
      case "ks\x3c\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "ks\x3c\x3d", "taoensso.truss.impl/ks\x3c\x3d", 1973794033, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", 
        "__x", -467759335, null))))))))), false], null);
        break;
      case "ks\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "ks\x3d", "taoensso.truss.impl/ks\x3d", 1308270826, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", 
        -467759335, null))))))))), false], null);
        break;
      case "ks\x3e\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "ks\x3e\x3d", "taoensso.truss.impl/ks\x3e\x3d", -14177732, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", 
        "__x", -467759335, null))))))))), false], null);
        break;
      case "not-in":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, 
        "__x", "__x", -467759335, null))))))))))))), false], null);
        break;
      case "not-el":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, 
        "__x", "__x", -467759335, null))))))))))))), false], null);
        break;
      case "set\x3c\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("set", "subset?", "set/subset?", 1551125133, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), 
        cljs.core._conj.call(null, cljs.core.List.EMPTY, a1)))))))))))), false], null);
        break;
      case "set\x3e\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("set", "superset?", "set/superset?", 2075053346, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), 
        cljs.core._conj.call(null, cljs.core.List.EMPTY, a1)))))))))))), false], null);
        break;
      case "set\x3d":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "\x3d", "cljs.core/\x3d", -1891498332, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), 
        cljs.core._conj.call(null, cljs.core.List.EMPTY, a1)))))))))))), false], null);
        break;
      case "in":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
        new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "set*", "taoensso.truss.impl/set*", 2039920610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))), false], null);
        break;
      default:
        var self = function(G__24358, vec__24357, type, a1, a2, a3) {
          return function(_QMARK_pred) {
            if (cljs.core.truth_(_QMARK_pred)) {
              return taoensso$truss$impl$_xpred.call(null, _QMARK_pred);
            } else {
              return null;
            }
          };
        }(G__24358, vec__24357, type, a1, a2, a3);
        var vec__24359 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self.call(null, a1), self.call(null, a2), self.call(null, a3)], null);
        var vec__24360 = cljs.core.nth.call(null, vec__24359, 0, null);
        var a1__$1 = cljs.core.nth.call(null, vec__24360, 0, null);
        var nt_a1_QMARK_ = cljs.core.nth.call(null, vec__24360, 1, null);
        var vec__24361 = cljs.core.nth.call(null, vec__24359, 1, null);
        var a2__$1 = cljs.core.nth.call(null, vec__24361, 0, null);
        var nt_a2_QMARK_ = cljs.core.nth.call(null, vec__24361, 1, null);
        var vec__24362 = cljs.core.nth.call(null, vec__24359, 2, null);
        var a3__$1 = cljs.core.nth.call(null, vec__24362, 0, null);
        var nt_a3_QMARK_ = cljs.core.nth.call(null, vec__24362, 1, null);
        var nt_a1 = cljs.core.truth_(a1__$1) ? cljs.core.truth_(nt_a1_QMARK_) ? a1__$1 : cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "non-throwing", "taoensso.truss.impl/non-throwing", -1408931246, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a1__$1)))) : null;
        var nt_a2 = cljs.core.truth_(a2__$1) ? cljs.core.truth_(nt_a2_QMARK_) ? a2__$1 : cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "non-throwing", "taoensso.truss.impl/non-throwing", -1408931246, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a2__$1)))) : null;
        var nt_a3 = cljs.core.truth_(a3__$1) ? cljs.core.truth_(nt_a3_QMARK_) ? a3__$1 : cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("taoensso.truss.impl", "non-throwing", "taoensso.truss.impl/non-throwing", -1408931246, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, a3__$1)))) : null;
        var nt_comp_QMARK_ = cljs.core.truth_(a3__$1) ? function() {
          var and__4673__auto__ = nt_a1_QMARK_;
          if (cljs.core.truth_(and__4673__auto__)) {
            var and__4673__auto____$1 = nt_a2_QMARK_;
            if (cljs.core.truth_(and__4673__auto____$1)) {
              return nt_a3_QMARK_;
            } else {
              return and__4673__auto____$1;
            }
          } else {
            return and__4673__auto__;
          }
        }() : cljs.core.truth_(a2__$1) ? function() {
          var and__4673__auto__ = nt_a1_QMARK_;
          if (cljs.core.truth_(and__4673__auto__)) {
            return nt_a2_QMARK_;
          } else {
            return and__4673__auto__;
          }
        }() : cljs.core.truth_(a1__$1) ? nt_a1_QMARK_ : null;
        var G__24363 = type instanceof cljs.core.Keyword ? type.fqn : null;
        switch(G__24363) {
          case "and":
            if (cljs.core.truth_(a3__$1)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "and", "cljs.core/and", -6692549, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              a1__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, a2__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
              cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, a3__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))))))), nt_comp_QMARK_], null);
            } else {
              if (cljs.core.truth_(a2__$1)) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
                new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "and", "cljs.core/and", -6692549, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
                a1__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, a2__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))))))), nt_comp_QMARK_], null);
              } else {
                if (cljs.core.truth_(a1__$1)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1__$1, nt_a1_QMARK_], null);
                } else {
                  return null;
                }
              }
            }
            break;
          case "or":
            if (cljs.core.truth_(a3__$1)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              nt_a1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, nt_a2), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
              cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, nt_a3), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))))))), true], null);
            } else {
              if (cljs.core.truth_(a2__$1)) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
                new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
                nt_a1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, nt_a2), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))))))), true], null);
              } else {
                if (cljs.core.truth_(a1__$1)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a1__$1, nt_a1_QMARK_], null);
                } else {
                  return null;
                }
              }
            }
            break;
          case "not":
            if (cljs.core.truth_(a3__$1)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
              new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, a1__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
              cljs.core._conj.call(null, cljs.core.List.EMPTY, a2__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, a3__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))))))))))), 
              nt_comp_QMARK_], null);
            } else {
              if (cljs.core.truth_(a2__$1)) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
                new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
                new cljs.core.Symbol("cljs.core", "or", "cljs.core/or", 1201033885, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, a1__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
                cljs.core._conj.call(null, cljs.core.List.EMPTY, a2__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))))))))))), nt_comp_QMARK_], null);
              } else {
                if (cljs.core.truth_(a1__$1)) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
                  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
                  cljs.core.List.EMPTY, a1__$1), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "__x", "__x", -467759335, null))))))))))))), nt_a1_QMARK_], null);
                } else {
                  return null;
                }
              }
            }
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
        }
      ;
    }
  }
};
taoensso.truss.impl._assertion_error = function taoensso$truss$impl$_assertion_error(msg) {
  return new Error(msg);
};
taoensso.truss.impl._invar_undefined_val = new cljs.core.Keyword("invariant", "undefined-val", "invariant/undefined-val", -906909938);
taoensso.truss.impl._invar_violation_BANG_ = function taoensso$truss$impl$_invar_violation_BANG_(var_args) {
  var args24366 = [];
  var len__5743__auto___24370 = arguments.length;
  var i__5744__auto___24371 = 0;
  while (true) {
    if (i__5744__auto___24371 < len__5743__auto___24370) {
      args24366.push(arguments[i__5744__auto___24371]);
      var G__24372 = i__5744__auto___24371 + 1;
      i__5744__auto___24371 = G__24372;
      continue;
    } else {
    }
    break;
  }
  var G__24368 = args24366.length;
  switch(G__24368) {
    case 0:
      return taoensso.truss.impl._invar_violation_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 7:
      return taoensso.truss.impl._invar_violation_BANG_.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24366.length)].join(""));;
  }
};
taoensso.truss.impl._invar_violation_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  throw cljs.core.ex_info.call(null, "Invariant violation", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "invariant-violation?", "invariant-violation?", -356256378), true], null));
};
taoensso.truss.impl._invar_violation_BANG_.cljs$core$IFn$_invoke$arity$7 = function(assertion_QMARK_, ns_str, _QMARK_line, form, val, _QMARK_err, _QMARK_data_fn) {
  var fmt_msg = function(x1, x2, x3, x4) {
    return [cljs.core.str("Invariant violation in `"), cljs.core.str(x1), cljs.core.str(":"), cljs.core.str(x2), cljs.core.str("` [pred-form, val]:"), cljs.core.str("\n ["), cljs.core.str(x3), cljs.core.str(", "), cljs.core.str(x4), cljs.core.str("]")].join("");
  };
  var line_str = function() {
    var or__4685__auto__ = _QMARK_line;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return "?";
    }
  }();
  var form_str = [cljs.core.str(form)].join("");
  var undefn_val_QMARK_ = cljs.core._EQ_.call(null, val, taoensso.truss.impl._invar_undefined_val);
  var val_str = undefn_val_QMARK_ ? "\x3cundefined\x3e" : [cljs.core.str(function() {
    var or__4685__auto__ = val;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return "\x3cnil\x3e";
    }
  }())].join("");
  var dummy_err_QMARK_ = (new cljs.core.Keyword(null, "invariant-violation?", "invariant-violation?", -356256378)).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data.call(null, _QMARK_err));
  var _QMARK_err__$1 = cljs.core.truth_(dummy_err_QMARK_) ? null : _QMARK_err;
  var _QMARK_err_str = function() {
    var temp__4657__auto__ = _QMARK_err__$1;
    if (cljs.core.truth_(temp__4657__auto__)) {
      var e = temp__4657__auto__;
      return [cljs.core.str(_QMARK_err__$1)].join("");
    } else {
      return null;
    }
  }();
  var msg = function() {
    var msg = fmt_msg.call(null, ns_str, line_str, form_str, val_str);
    if (cljs.core.not.call(null, _QMARK_err__$1)) {
      return msg;
    } else {
      if (undefn_val_QMARK_) {
        return [cljs.core.str(msg), cljs.core.str("\n`val` error: "), cljs.core.str(_QMARK_err_str)].join("");
      } else {
        return [cljs.core.str(msg), cljs.core.str("\n`pred-form` error: "), cljs.core.str(_QMARK_err_str)].join("");
      }
    }
  }();
  var _QMARK_data = function() {
    var temp__4657__auto__ = _QMARK_data_fn;
    if (cljs.core.truth_(temp__4657__auto__)) {
      var data_fn = temp__4657__auto__;
      try {
        return data_fn.call(null);
      } catch (e24369) {
        if (e24369 instanceof Error) {
          var e = e24369;
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data-error", "data-error", -1058016301), e], null);
        } else {
          throw e24369;
        }
      }
    } else {
      return null;
    }
  }();
  throw cljs.core.ex_info.call(null, msg, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "*?data*", "*?data*", 1047537922), new cljs.core.Keyword(null, "elidable?", "elidable?", 248362249), new cljs.core.Keyword(null, "dt", "dt", -368444759), new cljs.core.Keyword(null, "val", "val", 128701612), new cljs.core.Keyword(null, "ns-str", "ns-str", -2062616499), new cljs.core.Keyword(null, "val-type", "val-type", -279850094), new cljs.core.Keyword(null, "?err", "?err", 549653299), 
  new cljs.core.Keyword(null, "*assert*", "*assert*", -160895053), new cljs.core.Keyword(null, "?data", "?data", -9471433), new cljs.core.Keyword(null, "?line", "?line", -631853385), new cljs.core.Keyword(null, "form-str", "form-str", 871608859)], [taoensso.truss.impl._STAR___QMARK_data_STAR_, assertion_QMARK_, taoensso.truss.impl.now_dt.call(null), undefn_val_QMARK_ ? new cljs.core.Symbol("undefined", "threw-error", "undefined/threw-error", -2085122794, null) : val, ns_str, undefn_val_QMARK_ ? new cljs.core.Symbol("undefined", 
  "threw-error", "undefined/threw-error", -2085122794, null) : cljs.core.type.call(null, val), _QMARK_err__$1, cljs.core._STAR_assert_STAR_, _QMARK_data, _QMARK_line, form_str]));
};
taoensso.truss.impl._invar_violation_BANG_.cljs$lang$maxFixedArity = 7;
goog.provide("taoensso.truss");
goog.require("cljs.core");
goog.require("taoensso.truss.impl");
taoensso.truss.get_dynamic_assertion_data = function taoensso$truss$get_dynamic_assertion_data() {
  return taoensso.truss.impl._STAR___QMARK_data_STAR_;
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return (this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = parseFloat(value).toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.reader.PushbackReader = function() {
};
cljs.reader.read_char = function cljs$reader$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$reader$PushbackReader$read_char$arity$1 == null)) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__5340__auto__ = reader == null ? null : reader;
    var m__5341__auto__ = cljs.reader.read_char[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, reader);
    } else {
      var m__5341__auto____$1 = cljs.reader.read_char["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
      }
    }
  }
};
cljs.reader.unread = function cljs$reader$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$reader$PushbackReader$unread$arity$2 == null)) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__5340__auto__ = reader == null ? null : reader;
    var m__5341__auto__ = cljs.reader.unread[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, reader, ch);
    } else {
      var m__5341__auto____$1 = cljs.reader.unread["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
      }
    }
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), cljs.core.with_meta(new cljs.core.Symbol(null, "idx", "idx", -1600747296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function cljs$reader$__GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function cljs$reader$push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function cljs$reader$whitespace_QMARK_(ch) {
  var or__4685__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function cljs$reader$numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function cljs$reader$comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function cljs$reader$number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.read;
cljs.reader.macros;
cljs.reader.dispatch_macros;
cljs.reader.reader_error = function cljs$reader$reader_error(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___23776 = arguments.length;
  var i__5744__auto___23777 = 0;
  while (true) {
    if (i__5744__auto___23777 < len__5743__auto___23776) {
      args__5750__auto__.push(arguments[i__5744__auto___23777]);
      var G__23778 = i__5744__auto___23777 + 1;
      i__5744__auto___23777 = G__23778;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
};
cljs.reader.reader_error.cljs$lang$maxFixedArity = 1;
cljs.reader.reader_error.cljs$lang$applyTo = function(seq23774) {
  var G__23775 = cljs.core.first.call(null, seq23774);
  var seq23774__$1 = cljs.core.next.call(null, seq23774);
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__23775, seq23774__$1);
};
cljs.reader.macro_terminating_QMARK_ = function cljs$reader$macro_terminating_QMARK_(ch) {
  var and__4673__auto__ = !(ch === "#");
  if (and__4673__auto__) {
    var and__4673__auto____$1 = !(ch === "'");
    if (and__4673__auto____$1) {
      var and__4673__auto____$2 = !(ch === ":");
      if (and__4673__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__4673__auto____$2;
      }
    } else {
      return and__4673__auto____$1;
    }
  } else {
    return and__4673__auto__;
  }
};
cljs.reader.read_token = function cljs$reader$read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__23779 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__23780 = cljs.reader.read_char.call(null, rdr);
      sb = G__23779;
      ch = G__23780;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function cljs$reader$skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function cljs$reader$re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function cljs$reader$match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return -parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function cljs$reader$match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function cljs$reader$match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function cljs$reader$match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function cljs$reader$escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return '"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function cljs$reader$read_2_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function cljs$reader$read_4_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function cljs$reader$validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function cljs$reader$make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function cljs$reader$escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function cljs$reader$read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__23781 = cljs.reader.read_char.call(null, rdr);
      ch = G__23781;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function cljs$reader$read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4655__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var macrofn = temp__4655__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__23782 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__23782;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__23783 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__23783;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function cljs$reader$not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.maybe_read_tagged_type;
cljs.reader.read_dispatch = function cljs$reader$read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4655__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var obj = temp__4655__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function cljs$reader$read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function cljs$reader$read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function cljs$reader$read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function cljs$reader$read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function cljs$reader$read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4685__auto__ = ch == null;
      if (or__4685__auto__) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__4685__auto____$1) {
          return or__4685__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__4685__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__23784 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__23785 = cljs.reader.read_char.call(null, reader);
      buffer = G__23784;
      ch = G__23785;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function cljs$reader$read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__23786 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__23787 = cljs.reader.read_char.call(null, reader);
        buffer = G__23786;
        ch = G__23787;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__23788 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__23789 = cljs.reader.read_char.call(null, reader);
          buffer = G__23788;
          ch = G__23789;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function cljs$reader$read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__23794 = function() {
            var G__23792 = buffer;
            G__23792.append(nch);
            return G__23792;
          }();
          var G__23795 = cljs.reader.read_char.call(null, reader);
          buffer = G__23794;
          ch = G__23795;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__23796 = function() {
            var G__23793 = buffer;
            G__23793.append(ch);
            return G__23793;
          }();
          var G__23797 = cljs.reader.read_char.call(null, reader);
          buffer = G__23796;
          ch = G__23797;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function cljs$reader$special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function cljs$reader$read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__4673__auto__)) {
      return !(token.length === 1);
    } else {
      return and__4673__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_literal = function cljs$reader$read_literal(rdr, ch) {
  var token = cljs.reader.read_token.call(null, rdr, ch);
  var chars = cljs.core.subs.call(null, token, 1);
  if (chars.length === 1) {
    return chars;
  } else {
    if (chars === "tab") {
      return "\t";
    } else {
      if (chars === "return") {
        return "\r";
      } else {
        if (chars === "newline") {
          return "\n";
        } else {
          if (chars === "space") {
            return " ";
          } else {
            if (chars === "backspace") {
              return "\b";
            } else {
              if (chars === "formfeed") {
                return "\f";
              } else {
                if (chars.charAt(0) === "u") {
                  return cljs.reader.make_unicode_char.call(null, cljs.core.subs.call(null, chars, 1));
                } else {
                  if (chars.charAt(0) === "o") {
                    return cljs.reader.not_implemented.call(null, rdr, token);
                  } else {
                    return cljs.reader.reader_error.call(null, rdr, "Unknown character literal: ", token);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_keyword = function cljs$reader$read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function cljs$reader$desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function cljs$reader$wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function cljs$reader$throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function cljs$reader$read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, o)) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function cljs$reader$read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function cljs$reader$read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function cljs$reader$read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function cljs$reader$macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_literal;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function cljs$reader$dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function cljs$reader$read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__23800 = reader;
        var G__23801 = eof_is_error;
        var G__23802 = sentinel;
        var G__23803 = is_recursive;
        reader = G__23800;
        eof_is_error = G__23801;
        sentinel = G__23802;
        is_recursive = G__23803;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__23804 = cljs.reader.read_comment.call(null, reader, ch);
          var G__23805 = eof_is_error;
          var G__23806 = sentinel;
          var G__23807 = is_recursive;
          reader = G__23804;
          eof_is_error = G__23805;
          sentinel = G__23806;
          is_recursive = G__23807;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__23808 = reader;
            var G__23809 = eof_is_error;
            var G__23810 = sentinel;
            var G__23811 = is_recursive;
            reader = G__23808;
            eof_is_error = G__23809;
            sentinel = G__23810;
            is_recursive = G__23811;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function cljs$reader$read_string(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Cannot read from non-string object.");
  }
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__23812 = b.append("0");
          b = G__23812;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div));
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  var and__4673__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if (cljs.core.truth_(and__4673__auto__)) {
    var or__4685__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400);
    }
  } else {
    return and__4673__auto__;
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__23814 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__23814, 0, null);
  var years = cljs.core.nth.call(null, vec__23814, 1, null);
  var months = cljs.core.nth.call(null, vec__23814, 2, null);
  var days = cljs.core.nth.call(null, vec__23814, 3, null);
  var hours = cljs.core.nth.call(null, vec__23814, 4, null);
  var minutes = cljs.core.nth.call(null, vec__23814, 5, null);
  var seconds = cljs.core.nth.call(null, vec__23814, 6, null);
  var fraction = cljs.core.nth.call(null, vec__23814, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__23814, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__23814, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__23814, 10, null);
  var v = vec__23814;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__4685__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__4685__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__4685__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__4685__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__4685__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__4685__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__4685__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__4685__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__4655__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var vec__23816 = temp__4655__auto__;
    var years = cljs.core.nth.call(null, vec__23816, 0, null);
    var months = cljs.core.nth.call(null, vec__23816, 1, null);
    var days = cljs.core.nth.call(null, vec__23816, 2, null);
    var hours = cljs.core.nth.call(null, vec__23816, 3, null);
    var minutes = cljs.core.nth.call(null, vec__23816, 4, null);
    var seconds = cljs.core.nth.call(null, vec__23816, 5, null);
    var ms = cljs.core.nth.call(null, vec__23816, 6, null);
    var offset = cljs.core.nth.call(null, vec__23816, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__23829_23841 = cljs.core.seq.call(null, form);
    var chunk__23830_23842 = null;
    var count__23831_23843 = 0;
    var i__23832_23844 = 0;
    while (true) {
      if (i__23832_23844 < count__23831_23843) {
        var x_23845 = cljs.core._nth.call(null, chunk__23830_23842, i__23832_23844);
        arr.push(x_23845);
        var G__23846 = seq__23829_23841;
        var G__23847 = chunk__23830_23842;
        var G__23848 = count__23831_23843;
        var G__23849 = i__23832_23844 + 1;
        seq__23829_23841 = G__23846;
        chunk__23830_23842 = G__23847;
        count__23831_23843 = G__23848;
        i__23832_23844 = G__23849;
        continue;
      } else {
        var temp__4657__auto___23850 = cljs.core.seq.call(null, seq__23829_23841);
        if (temp__4657__auto___23850) {
          var seq__23829_23851__$1 = temp__4657__auto___23850;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__23829_23851__$1)) {
            var c__5488__auto___23852 = cljs.core.chunk_first.call(null, seq__23829_23851__$1);
            var G__23853 = cljs.core.chunk_rest.call(null, seq__23829_23851__$1);
            var G__23854 = c__5488__auto___23852;
            var G__23855 = cljs.core.count.call(null, c__5488__auto___23852);
            var G__23856 = 0;
            seq__23829_23841 = G__23853;
            chunk__23830_23842 = G__23854;
            count__23831_23843 = G__23855;
            i__23832_23844 = G__23856;
            continue;
          } else {
            var x_23857 = cljs.core.first.call(null, seq__23829_23851__$1);
            arr.push(x_23857);
            var G__23858 = cljs.core.next.call(null, seq__23829_23851__$1);
            var G__23859 = null;
            var G__23860 = 0;
            var G__23861 = 0;
            seq__23829_23841 = G__23858;
            chunk__23830_23842 = G__23859;
            count__23831_23843 = G__23860;
            i__23832_23844 = G__23861;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = {};
      var seq__23835_23862 = cljs.core.seq.call(null, form);
      var chunk__23836_23863 = null;
      var count__23837_23864 = 0;
      var i__23838_23865 = 0;
      while (true) {
        if (i__23838_23865 < count__23837_23864) {
          var vec__23839_23866 = cljs.core._nth.call(null, chunk__23836_23863, i__23838_23865);
          var k_23867 = cljs.core.nth.call(null, vec__23839_23866, 0, null);
          var v_23868 = cljs.core.nth.call(null, vec__23839_23866, 1, null);
          obj[cljs.core.name.call(null, k_23867)] = v_23868;
          var G__23869 = seq__23835_23862;
          var G__23870 = chunk__23836_23863;
          var G__23871 = count__23837_23864;
          var G__23872 = i__23838_23865 + 1;
          seq__23835_23862 = G__23869;
          chunk__23836_23863 = G__23870;
          count__23837_23864 = G__23871;
          i__23838_23865 = G__23872;
          continue;
        } else {
          var temp__4657__auto___23873 = cljs.core.seq.call(null, seq__23835_23862);
          if (temp__4657__auto___23873) {
            var seq__23835_23874__$1 = temp__4657__auto___23873;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__23835_23874__$1)) {
              var c__5488__auto___23875 = cljs.core.chunk_first.call(null, seq__23835_23874__$1);
              var G__23876 = cljs.core.chunk_rest.call(null, seq__23835_23874__$1);
              var G__23877 = c__5488__auto___23875;
              var G__23878 = cljs.core.count.call(null, c__5488__auto___23875);
              var G__23879 = 0;
              seq__23835_23862 = G__23876;
              chunk__23836_23863 = G__23877;
              count__23837_23864 = G__23878;
              i__23838_23865 = G__23879;
              continue;
            } else {
              var vec__23840_23880 = cljs.core.first.call(null, seq__23835_23874__$1);
              var k_23881 = cljs.core.nth.call(null, vec__23840_23880, 0, null);
              var v_23882 = cljs.core.nth.call(null, vec__23840_23880, 1, null);
              obj[cljs.core.name.call(null, k_23881)] = v_23882;
              var G__23883 = cljs.core.next.call(null, seq__23835_23874__$1);
              var G__23884 = null;
              var G__23885 = 0;
              var G__23886 = 0;
              seq__23835_23862 = G__23883;
              chunk__23836_23863 = G__23884;
              count__23837_23864 = G__23885;
              i__23838_23865 = G__23886;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return cljs.core.uuid.call(null, uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function cljs$reader$maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("taoensso.encore");
goog.require("cljs.core");
goog.require("goog.net.XhrIoPool");
goog.require("goog.events");
goog.require("clojure.set");
goog.require("cljs.tools.reader.edn");
goog.require("taoensso.truss");
goog.require("goog.net.XhrIo");
goog.require("goog.Uri.QueryData");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.net.EventType");
goog.require("goog.structs");
goog.require("goog.string.format");
goog.require("clojure.string");
goog.require("cljs.reader");
goog.require("goog.net.ErrorCode");
taoensso.encore.as__QMARK_int;
taoensso.encore.encore_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 36, 2], null);
taoensso.encore.assert_min_encore_version = function taoensso$encore$assert_min_encore_version(min_version) {
  var vec__24383 = taoensso.encore.encore_version;
  var xc = cljs.core.nth.call(null, vec__24383, 0, null);
  var yc = cljs.core.nth.call(null, vec__24383, 1, null);
  var zc = cljs.core.nth.call(null, vec__24383, 2, null);
  var vec__24384 = cljs.core.vector_QMARK_.call(null, min_version) ? min_version : cljs.core.re_seq.call(null, /\d+/, [cljs.core.str(min_version)].join(""));
  var xm = cljs.core.nth.call(null, vec__24384, 0, null);
  var ym = cljs.core.nth.call(null, vec__24384, 1, null);
  var zm = cljs.core.nth.call(null, vec__24384, 2, null);
  var vec__24385 = cljs.core.mapv.call(null, function(vec__24383, xc, yc, zc, vec__24384, xm, ym, zm) {
    return function(p1__24379_SHARP_) {
      var or__4685__auto__ = taoensso.encore.as__QMARK_int.call(null, p1__24379_SHARP_);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return 0;
      }
    };
  }(vec__24383, xc, yc, zc, vec__24384, xm, ym, zm), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xm, ym, zm], null));
  var xm__$1 = cljs.core.nth.call(null, vec__24385, 0, null);
  var ym__$1 = cljs.core.nth.call(null, vec__24385, 1, null);
  var zm__$1 = cljs.core.nth.call(null, vec__24385, 2, null);
  if (xc > xm__$1 || cljs.core._EQ_.call(null, xc, xm__$1) && (yc > ym__$1 || cljs.core._EQ_.call(null, yc, ym__$1) && zc >= zm__$1)) {
    return null;
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Insufficient com.taoensso/encore version. You may have a Leiningen dependency conflict (see http://goo.gl/qBbLvC for solution).")].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-version", "min-version", -1697197126), clojure.string.join.call(null, ".", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xm__$1, ym__$1, zm__$1], null)), new cljs.core.Keyword(null, "your-version", 
    "your-version", -351781765), clojure.string.join.call(null, ".", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xc, yc, zc], null))], null));
  }
};
taoensso.encore.name_with_attrs = function taoensso$encore$name_with_attrs(name, macro_args) {
  var vec__24388 = typeof cljs.core.first.call(null, macro_args) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, macro_args), cljs.core.next.call(null, macro_args)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, macro_args], null);
  var docstring = cljs.core.nth.call(null, vec__24388, 0, null);
  var macro_args__$1 = cljs.core.nth.call(null, vec__24388, 1, null);
  var vec__24389 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, macro_args__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, macro_args__$1), cljs.core.next.call(null, macro_args__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY, macro_args__$1], null);
  var attr = cljs.core.nth.call(null, vec__24389, 0, null);
  var macro_args__$2 = cljs.core.nth.call(null, vec__24389, 1, null);
  var attr__$1 = cljs.core.truth_(docstring) ? cljs.core.assoc.call(null, attr, new cljs.core.Keyword(null, "doc", "doc", 1913296891), docstring) : attr;
  var attr__$2 = cljs.core.truth_(cljs.core.meta.call(null, name)) ? cljs.core.conj.call(null, cljs.core.meta.call(null, name), attr__$1) : attr__$1;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta.call(null, name, attr__$2), macro_args__$2], null);
};
taoensso.encore.get_dynamic_assertion_data = function taoensso$encore$get_dynamic_assertion_data() {
  return taoensso.truss.get_dynamic_assertion_data.call(null);
};
taoensso.encore.map_keys;
taoensso.encore.kw_identical_QMARK_;
taoensso.encore.read_edn = function taoensso$encore$read_edn(var_args) {
  var args24390 = [];
  var len__5743__auto___24393 = arguments.length;
  var i__5744__auto___24394 = 0;
  while (true) {
    if (i__5744__auto___24394 < len__5743__auto___24393) {
      args24390.push(arguments[i__5744__auto___24394]);
      var G__24395 = i__5744__auto___24394 + 1;
      i__5744__auto___24394 = G__24395;
      continue;
    } else {
    }
    break;
  }
  var G__24392 = args24390.length;
  switch(G__24392) {
    case 1:
      return taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24390.length)].join(""));;
  }
};
taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return taoensso.encore.read_edn.call(null, null, s);
};
taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (s == null || s === "") {
    return null;
  } else {
    if (!(typeof s === "string")) {
      throw cljs.core.ex_info.call(null, "`read-edn` attempt against non-nil, non-string arg", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arg", "arg", -1747261837), s, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, s)], null));
    } else {
      var readers = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "readers", "readers", -2118263030), new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399));
      var default$ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328), new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399));
      var readers__$1 = cljs.core.not.call(null, taoensso.encore.kw_identical_QMARK_.call(null, readers, new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399))) ? readers : taoensso.encore.map_keys.call(null, cljs.core.symbol, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_));
      var default$__$1 = cljs.core.not.call(null, taoensso.encore.kw_identical_QMARK_.call(null, default$, new cljs.core.Keyword("taoensso.encore", "dynamic", "taoensso.encore/dynamic", -1726758399))) ? default$ : cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
      var opts__$1 = cljs.core.merge.call(null, opts, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "readers", "readers", -2118263030), readers__$1, new cljs.core.Keyword(null, "default", "default", -1987822328), default$__$1], null));
      return cljs.tools.reader.edn.read_string.call(null, opts__$1, s);
    }
  }
};
taoensso.encore.read_edn.cljs$lang$maxFixedArity = 2;
taoensso.encore.pr_edn = function taoensso$encore$pr_edn(var_args) {
  var args24397 = [];
  var len__5743__auto___24402 = arguments.length;
  var i__5744__auto___24403 = 0;
  while (true) {
    if (i__5744__auto___24403 < len__5743__auto___24402) {
      args24397.push(arguments[i__5744__auto___24403]);
      var G__24404 = i__5744__auto___24403 + 1;
      i__5744__auto___24403 = G__24404;
      continue;
    } else {
    }
    break;
  }
  var G__24399 = args24397.length;
  switch(G__24399) {
    case 1:
      return taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24397.length)].join(""));;
  }
};
taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return taoensso.encore.pr_edn.call(null, null, x);
};
taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$2 = function(_opts, x) {
  var _STAR_print_level_STAR_24400 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_length_STAR_24401 = cljs.core._STAR_print_length_STAR_;
  cljs.core._STAR_print_level_STAR_ = null;
  cljs.core._STAR_print_length_STAR_ = null;
  try {
    return cljs.core.pr_str.call(null, x);
  } finally {
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_24401;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_24400;
  }
};
taoensso.encore.pr_edn.cljs$lang$maxFixedArity = 2;
taoensso.encore.error_QMARK_ = function taoensso$encore$error_QMARK_(x) {
  return x instanceof Error;
};
taoensso.encore.error_data = function taoensso$encore$error_data(x) {
  var temp__4657__auto__ = function() {
    var or__4685__auto__ = cljs.core.ex_data.call(null, x);
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      if (x instanceof Error) {
        return cljs.core.PersistentArrayMap.EMPTY;
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(temp__4657__auto__)) {
    var data_map = temp__4657__auto__;
    return cljs.core.merge.call(null, function() {
      var err = x;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "err-type", "err-type", -116717722), cljs.core.type.call(null, err), new cljs.core.Keyword(null, "err-msg", "err-msg", -1158512684), err.message, new cljs.core.Keyword(null, "err-cause", "err-cause", 897008749), err.cause], null);
    }(), data_map);
  } else {
    return null;
  }
};
taoensso.encore.kw_identical_QMARK_ = cljs.core.keyword_identical_QMARK_;
taoensso.encore.stringy_QMARK_ = function taoensso$encore$stringy_QMARK_(x) {
  return x instanceof cljs.core.Keyword || typeof x === "string";
};
taoensso.encore.atom_QMARK_ = function taoensso$encore$atom_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
taoensso.encore.named_QMARK_ = function taoensso$encore$named_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
taoensso.encore.chan_QMARK_ = function taoensso$encore$chan_QMARK_(x) {
  return x instanceof cljs.core.async.impl.channels.ManyToManyChannel;
};
taoensso.encore.lazy_seq_QMARK_ = function taoensso$encore$lazy_seq_QMARK_(x) {
  return x instanceof cljs.core.LazySeq;
};
taoensso.encore.re_pattern_QMARK_ = function taoensso$encore$re_pattern_QMARK_(x) {
  return x instanceof RegExp;
};
taoensso.encore.nnil_QMARK_ = function taoensso$encore$nnil_QMARK_(x) {
  return !(x == null);
};
taoensso.encore.nblank_QMARK_ = function taoensso$encore$nblank_QMARK_(x) {
  return !clojure.string.blank_QMARK_.call(null, x);
};
taoensso.encore.nneg_QMARK_ = function taoensso$encore$nneg_QMARK_(x) {
  return !(x < 0);
};
taoensso.encore.pos_int_QMARK_ = function taoensso$encore$pos_int_QMARK_(x) {
  return cljs.core.integer_QMARK_.call(null, x) && x > 0;
};
taoensso.encore.nneg_int_QMARK_ = function taoensso$encore$nneg_int_QMARK_(x) {
  return cljs.core.integer_QMARK_.call(null, x) && !(x < 0);
};
taoensso.encore.nvec_QMARK_ = function taoensso$encore$nvec_QMARK_(n, x) {
  return cljs.core.vector_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), n);
};
taoensso.encore.set_STAR_;
taoensso.encore.udt_QMARK_ = taoensso.encore.nneg_int_QMARK_;
taoensso.encore.vec2_QMARK_ = function taoensso$encore$vec2_QMARK_(x) {
  return taoensso.encore.nvec_QMARK_.call(null, 2, x);
};
taoensso.encore.vec3_QMARK_ = function taoensso$encore$vec3_QMARK_(x) {
  return taoensso.encore.nvec_QMARK_.call(null, 3, x);
};
taoensso.encore.distinct_elements_QMARK_ = function taoensso$encore$distinct_elements_QMARK_(x) {
  return cljs.core.set_QMARK_.call(null, x) || cljs.core._EQ_.call(null, cljs.core.count.call(null, x), cljs.core.count.call(null, taoensso.encore.set_STAR_.call(null, x)));
};
taoensso.encore.nblank_str_QMARK_ = function taoensso$encore$nblank_str_QMARK_(x) {
  return typeof x === "string" && !clojure.string.blank_QMARK_.call(null, x);
};
taoensso.encore.nneg_num_QMARK_ = function taoensso$encore$nneg_num_QMARK_(x) {
  return typeof x === "number" && !(x < 0);
};
taoensso.encore.pos_num_QMARK_ = function taoensso$encore$pos_num_QMARK_(x) {
  return typeof x === "number" && x > 0;
};
taoensso.encore.zero_num_QMARK_ = function taoensso$encore$zero_num_QMARK_(x) {
  return cljs.core._EQ_.call(null, 0, x);
};
taoensso.encore.as__QMARK_nblank = function taoensso$encore$as__QMARK_nblank(x) {
  if (typeof x === "string") {
    if (clojure.string.blank_QMARK_.call(null, x)) {
      return null;
    } else {
      return x;
    }
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_kw = function taoensso$encore$as__QMARK_kw(x) {
  if (x instanceof cljs.core.Keyword) {
    return x;
  } else {
    if (typeof x === "string") {
      return cljs.core.keyword.call(null, x);
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_name = function taoensso$encore$as__QMARK_name(x) {
  if (cljs.core.truth_(taoensso.encore.named_QMARK_.call(null, x))) {
    return cljs.core.name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_qname = function taoensso$encore$as__QMARK_qname(x) {
  if (cljs.core.truth_(taoensso.encore.named_QMARK_.call(null, x))) {
    var n = cljs.core.name.call(null, x);
    var temp__4655__auto__ = cljs.core.namespace.call(null, x);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var ns = temp__4655__auto__;
      return [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(n)].join("");
    } else {
      return n;
    }
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      return null;
    }
  }
};
taoensso.encore.as__QMARK_int = function taoensso$encore$as__QMARK_int(x) {
  if (x == null) {
    return null;
  } else {
    if (typeof x === "number") {
      return cljs.core.long$.call(null, x);
    } else {
      if (typeof x === "string") {
        var x__$1 = parseInt(x, 10);
        if (cljs.core.truth_(isNaN(x__$1))) {
          return null;
        } else {
          return x__$1;
        }
      } else {
        return null;
      }
    }
  }
};
taoensso.encore.as__QMARK_float = function taoensso$encore$as__QMARK_float(x) {
  if (x == null) {
    return null;
  } else {
    if (typeof x === "number") {
      return x;
    } else {
      if (typeof x === "string") {
        var x__$1 = parseFloat(x);
        if (cljs.core.truth_(isNaN(x__$1))) {
          return null;
        } else {
          return x__$1;
        }
      } else {
        return null;
      }
    }
  }
};
taoensso.encore.as__QMARK_bool = function taoensso$encore$as__QMARK_bool(x) {
  if (x == null) {
    return null;
  } else {
    if (x === true || x === false) {
      return x;
    } else {
      if (cljs.core._EQ_.call(null, x, 0) || cljs.core._EQ_.call(null, x, "false") || cljs.core._EQ_.call(null, x, "FALSE") || cljs.core._EQ_.call(null, x, "0")) {
        return false;
      } else {
        if (cljs.core._EQ_.call(null, x, 1) || cljs.core._EQ_.call(null, x, "true") || cljs.core._EQ_.call(null, x, "TRUE") || cljs.core._EQ_.call(null, x, "1")) {
          return true;
        } else {
          return null;
        }
      }
    }
  }
};
taoensso.encore.as__QMARK_email = function taoensso$encore$as__QMARK_email(_QMARK_s) {
  if (cljs.core.truth_(_QMARK_s)) {
    return cljs.core.re_find.call(null, /^[^\s@]+@[^\s@]+\.\S*[^\.]$/, clojure.string.trim.call(null, _QMARK_s));
  } else {
    return null;
  }
};
taoensso.encore.as__QMARK_nemail = function taoensso$encore$as__QMARK_nemail(_QMARK_s) {
  var temp__4657__auto__ = taoensso.encore.as__QMARK_email.call(null, _QMARK_s);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var email = temp__4657__auto__;
    return clojure.string.lower_case.call(null, email);
  } else {
    return null;
  }
};
taoensso.encore._QMARK_as_throw = function taoensso$encore$_QMARK_as_throw(as_name, x) {
  throw cljs.core.ex_info.call(null, [cljs.core.str("nil as-?"), cljs.core.str(cljs.core.name.call(null, as_name)), cljs.core.str(" against arg: "), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arg", "arg", -1747261837), x, new cljs.core.Keyword(null, "type", "type", 1174270348), cljs.core.type.call(null, x)], null));
};
taoensso.encore.as_nblank = function taoensso$encore$as_nblank(x) {
  var or__4685__auto__ = taoensso.encore.as__QMARK_nblank.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "nblank", "nblank", 626815585), x);
  }
};
taoensso.encore.as_kw = function taoensso$encore$as_kw(x) {
  var or__4685__auto__ = taoensso.encore.as__QMARK_kw.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "kw", "kw", 1158308175), x);
  }
};
taoensso.encore.as_name = function taoensso$encore$as_name(x) {
  var or__4685__auto__ = taoensso.encore.as__QMARK_name.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), x);
  }
};
taoensso.encore.as_qname = function taoensso$encore$as_qname(x) {
  var or__4685__auto__ = taoensso.encore.as__QMARK_qname.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "qname", "qname", -1983612179), x);
  }
};
taoensso.encore.as_bool = function taoensso$encore$as_bool(x) {
  var _QMARK_b = taoensso.encore.as__QMARK_bool.call(null, x);
  if (!(_QMARK_b == null)) {
    return _QMARK_b;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "bool", "bool", 1444635321), x);
  }
};
taoensso.encore.as_int = function taoensso$encore$as_int(x) {
  var or__4685__auto__ = taoensso.encore.as__QMARK_int.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "int", "int", -1741416922), x);
  }
};
taoensso.encore.as_float = function taoensso$encore$as_float(x) {
  var or__4685__auto__ = taoensso.encore.as__QMARK_float.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "float", "float", -1732389368), x);
  }
};
taoensso.encore.as_email = function taoensso$encore$as_email(x) {
  var or__4685__auto__ = taoensso.encore.as__QMARK_email.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "email", "email", 1415816706), x);
  }
};
taoensso.encore.as_nemail = function taoensso$encore$as_nemail(x) {
  var or__4685__auto__ = taoensso.encore.as__QMARK_nemail.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return taoensso.encore._QMARK_as_throw.call(null, new cljs.core.Keyword(null, "nemail", "nemail", 318708381), x);
  }
};
taoensso.encore.nnil_EQ_ = function taoensso$encore$nnil_EQ_(var_args) {
  var args24410 = [];
  var len__5743__auto___24416 = arguments.length;
  var i__5744__auto___24417 = 0;
  while (true) {
    if (i__5744__auto___24417 < len__5743__auto___24416) {
      args24410.push(arguments[i__5744__auto___24417]);
      var G__24418 = i__5744__auto___24417 + 1;
      i__5744__auto___24417 = G__24418;
      continue;
    } else {
    }
    break;
  }
  var G__24415 = args24410.length;
  switch(G__24415) {
    case 2:
      return taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24410.slice(2), 0);
      return taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var and__4673__auto__ = taoensso.encore.nnil_QMARK_.call(null, x);
  if (cljs.core.truth_(and__4673__auto__)) {
    return cljs.core._EQ_.call(null, x, y);
  } else {
    return and__4673__auto__;
  }
};
taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  var and__4673__auto__ = taoensso.encore.nnil_QMARK_.call(null, x);
  if (cljs.core.truth_(and__4673__auto__)) {
    return cljs.core.apply.call(null, cljs.core._EQ_, x, y, more);
  } else {
    return and__4673__auto__;
  }
};
taoensso.encore.nnil_EQ_.cljs$lang$applyTo = function(seq24411) {
  var G__24412 = cljs.core.first.call(null, seq24411);
  var seq24411__$1 = cljs.core.next.call(null, seq24411);
  var G__24413 = cljs.core.first.call(null, seq24411__$1);
  var seq24411__$2 = cljs.core.next.call(null, seq24411__$1);
  return taoensso.encore.nnil_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__24412, G__24413, seq24411__$2);
};
taoensso.encore.nnil_EQ_.cljs$lang$maxFixedArity = 2;
taoensso.encore.without_meta = function taoensso$encore$without_meta(x) {
  if (cljs.core.truth_(cljs.core.meta.call(null, x))) {
    return cljs.core.with_meta.call(null, x, null);
  } else {
    return x;
  }
};
taoensso.encore.qname = taoensso.encore.as_qname;
taoensso.encore.explode_keyword = function taoensso$encore$explode_keyword(k) {
  return clojure.string.split.call(null, taoensso.encore.qname.call(null, k), /[\.\/]/);
};
taoensso.encore.merge_keywords = function taoensso$encore$merge_keywords(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24424 = arguments.length;
  var i__5744__auto___24425 = 0;
  while (true) {
    if (i__5744__auto___24425 < len__5743__auto___24424) {
      args__5750__auto__.push(arguments[i__5744__auto___24425]);
      var G__24426 = i__5744__auto___24425 + 1;
      i__5744__auto___24425 = G__24426;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$variadic = function(ks, p__24422) {
  var vec__24423 = p__24422;
  var no_slash_QMARK_ = cljs.core.nth.call(null, vec__24423, 0, null);
  var parts = cljs.core.reduce.call(null, function(vec__24423, no_slash_QMARK_) {
    return function(acc, in$) {
      if (cljs.core.truth_(in$)) {
        return cljs.core.into.call(null, acc, taoensso.encore.explode_keyword.call(null, in$));
      } else {
        return acc;
      }
    };
  }(vec__24423, no_slash_QMARK_), cljs.core.PersistentVector.EMPTY, ks);
  if (cljs.core.empty_QMARK_.call(null, parts)) {
    return null;
  } else {
    if (cljs.core.truth_(no_slash_QMARK_)) {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, ".", parts));
    } else {
      var ppop = cljs.core.pop.call(null, parts);
      return cljs.core.keyword.call(null, cljs.core.empty_QMARK_.call(null, ppop) ? null : clojure.string.join.call(null, ".", ppop), cljs.core.peek.call(null, parts));
    }
  }
};
taoensso.encore.merge_keywords.cljs$lang$maxFixedArity = 1;
taoensso.encore.merge_keywords.cljs$lang$applyTo = function(seq24420) {
  var G__24421 = cljs.core.first.call(null, seq24420);
  var seq24420__$1 = cljs.core.next.call(null, seq24420);
  return taoensso.encore.merge_keywords.cljs$core$IFn$_invoke$arity$variadic(G__24421, seq24420__$1);
};
taoensso.encore.clamp = function taoensso$encore$clamp(nmin, nmax, n) {
  if (n < nmin) {
    return nmin;
  } else {
    if (n > nmax) {
      return nmax;
    } else {
      return n;
    }
  }
};
taoensso.encore.pow = function taoensso$encore$pow(n, exp) {
  return Math.pow(n, exp);
};
taoensso.encore.abs = function taoensso$encore$abs(n) {
  if (n < 0) {
    return -n;
  } else {
    return n;
  }
};
taoensso.encore.round_STAR_ = function taoensso$encore$round_STAR_(var_args) {
  var args24427 = [];
  var len__5743__auto___24431 = arguments.length;
  var i__5744__auto___24432 = 0;
  while (true) {
    if (i__5744__auto___24432 < len__5743__auto___24431) {
      args24427.push(arguments[i__5744__auto___24432]);
      var G__24433 = i__5744__auto___24432 + 1;
      i__5744__auto___24432 = G__24433;
      continue;
    } else {
    }
    break;
  }
  var G__24429 = args24427.length;
  switch(G__24429) {
    case 1:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24427.length)].join(""));;
  }
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return taoensso.encore.round_STAR_.call(null, new cljs.core.Keyword(null, "round", "round", 2009433328), null, n);
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$2 = function(type, n) {
  return taoensso.encore.round_STAR_.call(null, type, null, n);
};
taoensso.encore.round_STAR_.cljs$core$IFn$_invoke$arity$3 = function(type, nplaces, n) {
  var n__$1 = n;
  var modifier = cljs.core.truth_(nplaces) ? Math.pow(10, nplaces) : null;
  var n_STAR_ = cljs.core.not.call(null, modifier) ? n__$1 : n__$1 * modifier;
  var rounded = function() {
    var G__24430 = type instanceof cljs.core.Keyword ? type.fqn : null;
    switch(G__24430) {
      case "round":
        return Math.round(n_STAR_);
        break;
      case "floor":
        return Math.floor(n_STAR_);
        break;
      case "ceil":
        return Math.ceil(n_STAR_);
        break;
      case "trunc":
        return cljs.core.long$.call(null, n_STAR_);
        break;
      default:
        throw cljs.core.ex_info.call(null, "Unknown round type", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), type], null));;
    }
  }();
  if (cljs.core.not.call(null, modifier)) {
    return cljs.core.long$.call(null, rounded);
  } else {
    return rounded / modifier;
  }
};
taoensso.encore.round_STAR_.cljs$lang$maxFixedArity = 3;
taoensso.encore.round0 = function taoensso$encore$round0(n) {
  return Math.round(n);
};
taoensso.encore.round1 = function taoensso$encore$round1(n) {
  return Math.round(n * 10) / 10;
};
taoensso.encore.round2 = function taoensso$encore$round2(n) {
  return Math.round(n * 100) / 100;
};
taoensso.encore.exp_backoff = function taoensso$encore$exp_backoff(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24442 = arguments.length;
  var i__5744__auto___24443 = 0;
  while (true) {
    if (i__5744__auto___24443 < len__5743__auto___24442) {
      args__5750__auto__.push(arguments[i__5744__auto___24443]);
      var G__24444 = i__5744__auto___24443 + 1;
      i__5744__auto___24443 = G__24444;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$variadic = function(nattempt, p__24438) {
  var vec__24439 = p__24438;
  var map__24440 = cljs.core.nth.call(null, vec__24439, 0, null);
  var map__24440__$1 = (!(map__24440 == null) ? map__24440.cljs$lang$protocol_mask$partition0$ & 64 || map__24440.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24440) : map__24440;
  var min_SINGLEQUOTE_ = cljs.core.get.call(null, map__24440__$1, new cljs.core.Keyword(null, "min", "min", 444991522));
  var max_SINGLEQUOTE_ = cljs.core.get.call(null, map__24440__$1, new cljs.core.Keyword(null, "max", "max", 61366548));
  var factor = cljs.core.get.call(null, map__24440__$1, new cljs.core.Keyword(null, "factor", "factor", -2103172748), 1E3);
  var binary_exp = Math.pow(2, nattempt - 1);
  var time = (binary_exp + cljs.core.rand.call(null, binary_exp)) * .5 * factor;
  return cljs.core.long$.call(null, function() {
    var time__$1 = cljs.core.truth_(min_SINGLEQUOTE_) ? function() {
      var x__5016__auto__ = cljs.core.long$.call(null, min_SINGLEQUOTE_);
      var y__5017__auto__ = cljs.core.long$.call(null, time);
      return x__5016__auto__ > y__5017__auto__ ? x__5016__auto__ : y__5017__auto__;
    }() : time;
    var time__$2 = cljs.core.truth_(max_SINGLEQUOTE_) ? function() {
      var x__5023__auto__ = cljs.core.long$.call(null, max_SINGLEQUOTE_);
      var y__5024__auto__ = cljs.core.long$.call(null, time__$1);
      return x__5023__auto__ < y__5024__auto__ ? x__5023__auto__ : y__5024__auto__;
    }() : time__$1;
    return time__$2;
  }());
};
taoensso.encore.exp_backoff.cljs$lang$maxFixedArity = 1;
taoensso.encore.exp_backoff.cljs$lang$applyTo = function(seq24436) {
  var G__24437 = cljs.core.first.call(null, seq24436);
  var seq24436__$1 = cljs.core.next.call(null, seq24436);
  return taoensso.encore.exp_backoff.cljs$core$IFn$_invoke$arity$variadic(G__24437, seq24436__$1);
};
taoensso.encore.now_dt = function taoensso$encore$now_dt() {
  return new Date;
};
taoensso.encore.now_udt = function taoensso$encore$now_udt() {
  return (new Date).getTime();
};
taoensso.encore.secs__GT_ms = function taoensso$encore$secs__GT_ms(secs) {
  return cljs.core.long$.call(null, secs) * 1E3;
};
taoensso.encore.ms__GT_secs = function taoensso$encore$ms__GT_secs(ms) {
  return cljs.core.quot.call(null, cljs.core.long$.call(null, ms), 1E3);
};
taoensso.encore.ms = function taoensso$encore$ms(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24462 = arguments.length;
  var i__5744__auto___24463 = 0;
  while (true) {
    if (i__5744__auto___24463 < len__5743__auto___24462) {
      args__5750__auto__.push(arguments[i__5744__auto___24463]);
      var G__24464 = i__5744__auto___24463 + 1;
      i__5744__auto___24463 = G__24464;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic = function(p__24458) {
  var map__24459 = p__24458;
  var map__24459__$1 = (!(map__24459 == null) ? map__24459.cljs$lang$protocol_mask$partition0$ & 64 || map__24459.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24459) : map__24459;
  var opts = map__24459__$1;
  var years = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var months = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var weeks = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
  var days = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var hours = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var mins = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "mins", "mins", 467369676));
  var secs = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "secs", "secs", 1532330091));
  var msecs = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "msecs", "msecs", 1711980553));
  var ms = cljs.core.get.call(null, map__24459__$1, new cljs.core.Keyword(null, "ms", "ms", -1152709733));
  if (cljs.core.truth_(cljs.core.mapv.call(null, function(map__24459, map__24459__$1, opts, years, months, weeks, days, hours, mins, secs, msecs, ms) {
    return function(__in) {
      var __x = __in;
      try {
        if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "msecs", "msecs", 1711980553), null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), null, new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", "days", -1394072564), null, new cljs.core.Keyword(null, "mins", "mins", 467369676), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, 
        "years", "years", -1298579689), null, new cljs.core.Keyword(null, "ms", "ms", -1152709733), null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), null], null), null)).call(null, __x))) {
          return __x;
        } else {
          return taoensso.truss.impl._invar_violation_BANG_.call(null);
        }
      } catch (e24461) {
        if (e24461 instanceof Error) {
          var __t = e24461;
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(#{:msecs :secs :months :days :mins :hours :years :ms :weeks} __in)", __x, __t, null);
        } else {
          throw e24461;
        }
      }
    };
  }(map__24459, map__24459__$1, opts, years, months, weeks, days, hours, mins, secs, msecs, ms), cljs.core.keys.call(null, opts)))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have", "have", 574419306, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "msecs", "msecs", 1711980553), null, new cljs.core.Keyword(null, "secs", "secs", 1532330091), null, new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", "days", -1394072564), 
    null, new cljs.core.Keyword(null, "mins", "mins", 467369676), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, "years", "years", -1298579689), null, new cljs.core.Keyword(null, "ms", "ms", -1152709733), null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), null], null), null), new cljs.core.Keyword(null, "in", "in", -1531184865), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "opts", 
    "opts", 1795607228, null)))))].join(""));
  }
  return taoensso.encore.round_STAR_.call(null, (cljs.core.truth_(years) ? years * 31536E6 : 0) + (cljs.core.truth_(months) ? months * 2551392E3 : 0) + (cljs.core.truth_(weeks) ? weeks * 6048E5 : 0) + (cljs.core.truth_(days) ? days * 864E5 : 0) + (cljs.core.truth_(hours) ? hours * 36E5 : 0) + (cljs.core.truth_(mins) ? mins * 6E4 : 0) + (cljs.core.truth_(secs) ? secs * 1E3 : 0) + (cljs.core.truth_(msecs) ? msecs : 0) + (cljs.core.truth_(ms) ? ms : 0));
};
taoensso.encore.ms.cljs$lang$maxFixedArity = 0;
taoensso.encore.ms.cljs$lang$applyTo = function(seq24457) {
  return taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24457));
};
taoensso.encore.secs = cljs.core.comp.call(null, taoensso.encore.ms__GT_secs, taoensso.encore.ms);
taoensso.encore.vec_STAR_ = function taoensso$encore$vec_STAR_(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.vec.call(null, x);
  }
};
taoensso.encore.set_STAR_ = function taoensso$encore$set_STAR_(x) {
  if (cljs.core.set_QMARK_.call(null, x)) {
    return x;
  } else {
    return cljs.core.set.call(null, x);
  }
};
taoensso.encore.oget = function taoensso$encore$oget(var_args) {
  var args24469 = [];
  var len__5743__auto___24476 = arguments.length;
  var i__5744__auto___24477 = 0;
  while (true) {
    if (i__5744__auto___24477 < len__5743__auto___24476) {
      args24469.push(arguments[i__5744__auto___24477]);
      var G__24478 = i__5744__auto___24477 + 1;
      i__5744__auto___24477 = G__24478;
      continue;
    } else {
    }
    break;
  }
  var G__24475 = args24469.length;
  switch(G__24475) {
    case 2:
      return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24469.slice(3), 0);
      return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (cljs.core.truth_(o)) {
    return goog.object.get(o, k, null);
  } else {
    return null;
  }
};
taoensso.encore.oget.cljs$core$IFn$_invoke$arity$3 = function(o, k1, k2) {
  var temp__4657__auto__ = taoensso.encore.oget.call(null, o, k1);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var o__$1 = temp__4657__auto__;
    return goog.object.get(o__$1, k2, null);
  } else {
    return null;
  }
};
taoensso.encore.oget.cljs$core$IFn$_invoke$arity$variadic = function(o, k1, k2, ks) {
  var temp__4657__auto__ = taoensso.encore.oget.call(null, o, k1, k2);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var o__$1 = temp__4657__auto__;
    return cljs.core.apply.call(null, taoensso.encore.oget, o__$1, ks);
  } else {
    return null;
  }
};
taoensso.encore.oget.cljs$lang$applyTo = function(seq24470) {
  var G__24471 = cljs.core.first.call(null, seq24470);
  var seq24470__$1 = cljs.core.next.call(null, seq24470);
  var G__24472 = cljs.core.first.call(null, seq24470__$1);
  var seq24470__$2 = cljs.core.next.call(null, seq24470__$1);
  var G__24473 = cljs.core.first.call(null, seq24470__$2);
  var seq24470__$3 = cljs.core.next.call(null, seq24470__$2);
  return taoensso.encore.oget.cljs$core$IFn$_invoke$arity$variadic(G__24471, G__24472, G__24473, seq24470__$3);
};
taoensso.encore.oget.cljs$lang$maxFixedArity = 3;
taoensso.encore.singleton_QMARK_ = function taoensso$encore$singleton_QMARK_(coll) {
  if (cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._EQ_.call(null, cljs.core.count.call(null, coll), 1);
  } else {
    return cljs.core.not.call(null, cljs.core.next.call(null, coll));
  }
};
taoensso.encore.__GT__QMARK_singleton = function taoensso$encore$__GT__QMARK_singleton(coll) {
  if (cljs.core.truth_(taoensso.encore.singleton_QMARK_.call(null, coll))) {
    var vec__24481 = coll;
    var c1 = cljs.core.nth.call(null, vec__24481, 0, null);
    return c1;
  } else {
    return null;
  }
};
taoensso.encore.__GT_vec = function taoensso$encore$__GT_vec(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return x;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.vec.call(null, x);
    } else {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
    }
  }
};
taoensso.encore.vnext = function taoensso$encore$vnext(v) {
  if (cljs.core.count.call(null, v) > 1) {
    return cljs.core.subvec.call(null, v, 1);
  } else {
    return null;
  }
};
taoensso.encore.vsplit_last = function taoensso$encore$vsplit_last(v) {
  var c = cljs.core.count.call(null, v);
  if (c > 0) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c > 1 ? cljs.core.pop.call(null, v) : null, cljs.core.peek.call(null, v)], null);
  } else {
    return null;
  }
};
taoensso.encore.vsplit_first = function taoensso$encore$vsplit_first(v) {
  var c = cljs.core.count.call(null, v);
  if (c > 0) {
    var vec__24483 = v;
    var v1 = cljs.core.nth.call(null, vec__24483, 0, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v1, c > 1 ? cljs.core.subvec.call(null, v, 1) : null], null);
  } else {
    return null;
  }
};
taoensso.encore.nnil_set = function taoensso$encore$nnil_set(x) {
  return cljs.core.disj.call(null, taoensso.encore.set_STAR_.call(null, x), null);
};
taoensso.encore.conj_some = function taoensso$encore$conj_some(var_args) {
  var args24484 = [];
  var len__5743__auto___24490 = arguments.length;
  var i__5744__auto___24491 = 0;
  while (true) {
    if (i__5744__auto___24491 < len__5743__auto___24490) {
      args24484.push(arguments[i__5744__auto___24491]);
      var G__24492 = i__5744__auto___24491 + 1;
      i__5744__auto___24491 = G__24492;
      continue;
    } else {
    }
    break;
  }
  var G__24489 = args24484.length;
  switch(G__24489) {
    case 0:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24484.slice(2), 0);
      return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$2 = function(coll, _QMARK_x) {
  if (cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, _QMARK_x))) {
    return cljs.core.conj.call(null, coll, _QMARK_x);
  } else {
    return coll;
  }
};
taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic = function(coll, _QMARK_x, _QMARK_xs) {
  return cljs.core.reduce.call(null, taoensso.encore.conj_some, taoensso.encore.conj_some.call(null, coll, _QMARK_x), _QMARK_xs);
};
taoensso.encore.conj_some.cljs$lang$applyTo = function(seq24485) {
  var G__24486 = cljs.core.first.call(null, seq24485);
  var seq24485__$1 = cljs.core.next.call(null, seq24485);
  var G__24487 = cljs.core.first.call(null, seq24485__$1);
  var seq24485__$2 = cljs.core.next.call(null, seq24485__$1);
  return taoensso.encore.conj_some.cljs$core$IFn$_invoke$arity$variadic(G__24486, G__24487, seq24485__$2);
};
taoensso.encore.conj_some.cljs$lang$maxFixedArity = 2;
taoensso.encore.preserve_reduced = function taoensso$encore$preserve_reduced(rf) {
  return function(acc, in$) {
    var result = rf.call(null, acc, in$);
    if (cljs.core.reduced_QMARK_.call(null, result)) {
      return cljs.core.reduced.call(null, result);
    } else {
      return result;
    }
  };
};
taoensso.encore.run_kv_BANG_ = function taoensso$encore$run_kv_BANG_(proc, m) {
  cljs.core.reduce_kv.call(null, function(p1__24496_SHARP_, p2__24494_SHARP_, p3__24495_SHARP_) {
    return proc.call(null, p2__24494_SHARP_, p3__24495_SHARP_);
  }, null, m);
  return null;
};
taoensso.encore.run_BANG__STAR_ = function taoensso$encore$run_BANG__STAR_(proc, coll) {
  cljs.core.reduce.call(null, function(p1__24498_SHARP_, p2__24497_SHARP_) {
    return proc.call(null, p2__24497_SHARP_);
  }, null, coll);
  return null;
};
taoensso.encore.rsome = function taoensso$encore$rsome(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    var temp__4657__auto__ = pred.call(null, in$);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var p = temp__4657__auto__;
      return cljs.core.reduced.call(null, p);
    } else {
      return null;
    }
  }, null, coll);
};
taoensso.encore.revery_QMARK_ = function taoensso$encore$revery_QMARK_(pred, coll) {
  return cljs.core.reduce.call(null, function(acc, in$) {
    if (cljs.core.truth_(pred.call(null, in$))) {
      return true;
    } else {
      return cljs.core.reduced.call(null, null);
    }
  }, true, coll);
};
taoensso.encore.ks_EQ_ = function taoensso$encore$ks_EQ_(ks, m) {
  return cljs.core._EQ_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_LT__EQ_ = function taoensso$encore$ks_LT__EQ_(ks, m) {
  return clojure.set.subset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_GT__EQ_ = function taoensso$encore$ks_GT__EQ_(ks, m) {
  return clojure.set.superset_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, m)), taoensso.encore.set_STAR_.call(null, ks));
};
taoensso.encore.ks_nnil_QMARK_ = function taoensso$encore$ks_nnil_QMARK_(ks, m) {
  return taoensso.encore.revery_QMARK_.call(null, function(p1__24499_SHARP_) {
    return taoensso.encore.nnil_QMARK_.call(null, cljs.core.get.call(null, m, p1__24499_SHARP_));
  }, ks);
};
taoensso.encore.update_in_STAR_ = function taoensso$encore$update_in_STAR_(m, ks, f) {
  if (cljs.core.empty_QMARK_.call(null, ks)) {
    return f.call(null, m);
  } else {
    var vec__24501 = ks;
    var k = cljs.core.nth.call(null, vec__24501, 0, null);
    var ks__$1 = cljs.core.nthnext.call(null, vec__24501, 1);
    if (cljs.core.truth_(ks__$1)) {
      return cljs.core.assoc.call(null, m, k, taoensso$encore$update_in_STAR_.call(null, cljs.core.get.call(null, m, k), ks__$1, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  }
};
taoensso.encore.translate_signed_idx = function taoensso$encore$translate_signed_idx(signed_idx, max_idx) {
  if (signed_idx >= 0) {
    var x__5023__auto__ = signed_idx;
    var y__5024__auto__ = max_idx;
    return x__5023__auto__ < y__5024__auto__ ? x__5023__auto__ : y__5024__auto__;
  } else {
    var x__5016__auto__ = 0;
    var y__5017__auto__ = signed_idx + max_idx;
    return x__5016__auto__ > y__5017__auto__ ? x__5016__auto__ : y__5017__auto__;
  }
};
taoensso.encore.sub_indexes = function taoensso$encore$sub_indexes(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24508 = arguments.length;
  var i__5744__auto___24509 = 0;
  while (true) {
    if (i__5744__auto___24509 < len__5743__auto___24508) {
      args__5750__auto__.push(arguments[i__5744__auto___24509]);
      var G__24510 = i__5744__auto___24509 + 1;
      i__5744__auto___24509 = G__24510;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic = function(x, start_idx, p__24505) {
  var map__24506 = p__24505;
  var map__24506__$1 = (!(map__24506 == null) ? map__24506.cljs$lang$protocol_mask$partition0$ & 64 || map__24506.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24506) : map__24506;
  var max_len = cljs.core.get.call(null, map__24506__$1, new cljs.core.Keyword(null, "max-len", "max-len", -18846016));
  var end_idx = cljs.core.get.call(null, map__24506__$1, new cljs.core.Keyword(null, "end-idx", "end-idx", -85750788));
  if (cljs.core.truth_(function() {
    var __x = max_len;
    if (cljs.core.truth_(function(__x, map__24506, map__24506__$1, max_len, end_idx) {
      return function(__x__$1) {
        var or__4685__auto__ = taoensso.truss.impl.non_throwing.call(null, cljs.core.nil_QMARK_).call(null, __x__$1);
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return taoensso.truss.impl.non_throwing.call(null, taoensso.encore.nneg_int_QMARK_).call(null, __x__$1);
        }
      };
    }(__x, map__24506, map__24506__$1, max_len, end_idx).call(null, __x))) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "([:or nil? nneg-int?] max-len)", __x, null, null);
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "nneg-int?", "nneg-int?", 803479360, null)], null), new cljs.core.Symbol(null, "max-len", "max-len", 
    1621685511, null))))].join(""));
  }
  var start_idx__$1 = start_idx;
  var xlen = cljs.core.count.call(null, x);
  var start_idx_STAR_ = taoensso.encore.translate_signed_idx.call(null, start_idx__$1, xlen);
  var end_idx_STAR_ = cljs.core.long$.call(null, cljs.core.truth_(max_len) ? function() {
    var n1__16950__auto__ = start_idx_STAR_ + max_len;
    var n2__16951__auto__ = xlen;
    if (n1__16950__auto__ > n2__16951__auto__) {
      return n2__16951__auto__;
    } else {
      return n1__16950__auto__;
    }
  }() : cljs.core.truth_(end_idx) ? taoensso.encore.translate_signed_idx.call(null, end_idx, xlen) + 1 : xlen);
  if (start_idx_STAR_ > end_idx_STAR_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [start_idx_STAR_, end_idx_STAR_], null);
  }
};
taoensso.encore.sub_indexes.cljs$lang$maxFixedArity = 2;
taoensso.encore.sub_indexes.cljs$lang$applyTo = function(seq24502) {
  var G__24503 = cljs.core.first.call(null, seq24502);
  var seq24502__$1 = cljs.core.next.call(null, seq24502);
  var G__24504 = cljs.core.first.call(null, seq24502__$1);
  var seq24502__$2 = cljs.core.next.call(null, seq24502__$1);
  return taoensso.encore.sub_indexes.cljs$core$IFn$_invoke$arity$variadic(G__24503, G__24504, seq24502__$2);
};
taoensso.encore.subvec_STAR_ = function taoensso$encore$subvec_STAR_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24518 = arguments.length;
  var i__5744__auto___24519 = 0;
  while (true) {
    if (i__5744__auto___24519 < len__5743__auto___24518) {
      args__5750__auto__.push(arguments[i__5744__auto___24519]);
      var G__24520 = i__5744__auto___24519 + 1;
      i__5744__auto___24519 = G__24520;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(v, start_idx, p__24514) {
  var vec__24515 = p__24514;
  var _QMARK_max_len = cljs.core.nth.call(null, vec__24515, 0, null);
  if (cljs.core.truth_(function() {
    var __x = v;
    try {
      if (cljs.core.vector_QMARK_.call(null, __x)) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e24516) {
      if (e24516 instanceof Error) {
        var __t = e24516;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(vector? v)", __x, __t, null);
      } else {
        throw e24516;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
  }
  var vec__24517 = taoensso.encore.sub_indexes.call(null, v, start_idx, new cljs.core.Keyword(null, "max-len", "max-len", -18846016), _QMARK_max_len);
  var start_idx_STAR_ = cljs.core.nth.call(null, vec__24517, 0, null);
  var end_idx_STAR_ = cljs.core.nth.call(null, vec__24517, 1, null);
  return cljs.core.subvec.call(null, v, start_idx_STAR_, end_idx_STAR_);
};
taoensso.encore.subvec_STAR_.cljs$lang$maxFixedArity = 2;
taoensso.encore.subvec_STAR_.cljs$lang$applyTo = function(seq24511) {
  var G__24512 = cljs.core.first.call(null, seq24511);
  var seq24511__$1 = cljs.core.next.call(null, seq24511);
  var G__24513 = cljs.core.first.call(null, seq24511__$1);
  var seq24511__$2 = cljs.core.next.call(null, seq24511__$1);
  return taoensso.encore.subvec_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__24512, G__24513, seq24511__$2);
};
taoensso.encore.into_BANG_ = function taoensso$encore$into_BANG_(var_args) {
  var args24525 = [];
  var len__5743__auto___24528 = arguments.length;
  var i__5744__auto___24529 = 0;
  while (true) {
    if (i__5744__auto___24529 < len__5743__auto___24528) {
      args24525.push(arguments[i__5744__auto___24529]);
      var G__24530 = i__5744__auto___24529 + 1;
      i__5744__auto___24529 = G__24530;
      continue;
    } else {
    }
    break;
  }
  var G__24527 = args24525.length;
  switch(G__24527) {
    case 2:
      return taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24525.length)].join(""));;
  }
};
taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  return cljs.core.reduce.call(null, cljs.core.conj_BANG_, to, from);
};
taoensso.encore.into_BANG_.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  return cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, to, from);
};
taoensso.encore.into_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.encore.sentinel = {};
taoensso.encore.sentinel_QMARK_ = function taoensso$encore$sentinel_QMARK_(x) {
  return x === taoensso.encore.sentinel;
};
taoensso.encore.nil__GT_sentinel = function taoensso$encore$nil__GT_sentinel(x) {
  if (x == null) {
    return taoensso.encore.sentinel;
  } else {
    return x;
  }
};
taoensso.encore.sentinel__GT_nil = function taoensso$encore$sentinel__GT_nil(x) {
  if (cljs.core.truth_(taoensso.encore.sentinel_QMARK_.call(null, x))) {
    return null;
  } else {
    return x;
  }
};
taoensso.encore.repeatedly_into;
taoensso.encore.top = function taoensso$encore$top(var_args) {
  var args24534 = [];
  var len__5743__auto___24537 = arguments.length;
  var i__5744__auto___24538 = 0;
  while (true) {
    if (i__5744__auto___24538 < len__5743__auto___24537) {
      args24534.push(arguments[i__5744__auto___24538]);
      var G__24539 = i__5744__auto___24538 + 1;
      i__5744__auto___24538 = G__24539;
      continue;
    } else {
    }
    break;
  }
  var G__24536 = args24534.length;
  switch(G__24536) {
    case 2:
      return taoensso.encore.top.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.top.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return taoensso.encore.top.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24534.length)].join(""));;
  }
};
taoensso.encore.top.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return taoensso.encore.top.call(null, n, cljs.core.identity, cljs.core.compare, coll);
};
taoensso.encore.top.cljs$core$IFn$_invoke$arity$3 = function(n, keyfn, coll) {
  return taoensso.encore.top.call(null, n, keyfn, cljs.core.compare, coll);
};
taoensso.encore.top.cljs$core$IFn$_invoke$arity$4 = function(n, keyfn, cmp, coll) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.take.call(null, n), cljs.core.sort_by.call(null, keyfn, cmp, coll));
};
taoensso.encore.top.cljs$lang$maxFixedArity = 4;
taoensso.encore.contains_in_QMARK_ = function taoensso$encore$contains_in_QMARK_(coll, ks) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.get_in.call(null, coll, cljs.core.butlast.call(null, ks)), cljs.core.last.call(null, ks));
};
taoensso.encore.dissoc_in = function taoensso$encore$dissoc_in(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24544 = arguments.length;
  var i__5744__auto___24545 = 0;
  while (true) {
    if (i__5744__auto___24545 < len__5743__auto___24544) {
      args__5750__auto__.push(arguments[i__5744__auto___24545]);
      var G__24546 = i__5744__auto___24545 + 1;
      i__5744__auto___24545 = G__24546;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic = function(m, ks, dissoc_ks) {
  return taoensso.encore.update_in_STAR_.call(null, m, ks, function(m__$1) {
    return cljs.core.apply.call(null, cljs.core.dissoc, m__$1, dissoc_ks);
  });
};
taoensso.encore.dissoc_in.cljs$lang$maxFixedArity = 2;
taoensso.encore.dissoc_in.cljs$lang$applyTo = function(seq24541) {
  var G__24542 = cljs.core.first.call(null, seq24541);
  var seq24541__$1 = cljs.core.next.call(null, seq24541);
  var G__24543 = cljs.core.first.call(null, seq24541__$1);
  var seq24541__$2 = cljs.core.next.call(null, seq24541__$1);
  return taoensso.encore.dissoc_in.cljs$core$IFn$_invoke$arity$variadic(G__24542, G__24543, seq24541__$2);
};
taoensso.encore.assoc_some = function taoensso$encore$assoc_some(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24559 = arguments.length;
  var i__5744__auto___24560 = 0;
  while (true) {
    if (i__5744__auto___24560 < len__5743__auto___24559) {
      args__5750__auto__.push(arguments[i__5744__auto___24560]);
      var G__24561 = i__5744__auto___24560 + 1;
      i__5744__auto___24560 = G__24561;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic = function(m, kvs) {
  if (cljs.core.truth_(function() {
    var __x = function() {
      try {
        return cljs.core.count.call(null, kvs);
      } catch (e24549) {
        if (e24549 instanceof Error) {
          var __t = e24549;
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(even? (count kvs))", taoensso.truss.impl._invar_undefined_val, __t, null);
        } else {
          throw e24549;
        }
      }
    }();
    try {
      if (cljs.core.even_QMARK_.call(null, __x)) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e24550) {
      if (e24550 instanceof Error) {
        var __t = e24550;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(even? (count kvs))", __x, __t, null);
      } else {
        throw e24550;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  return cljs.core.into.call(null, function() {
    var or__4685__auto__ = m;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }(), function() {
    var iter__5457__auto__ = function taoensso$encore$iter__24551(s__24552) {
      return new cljs.core.LazySeq(null, function() {
        var s__24552__$1 = s__24552;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__24552__$1);
          if (temp__4657__auto__) {
            var s__24552__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__24552__$2)) {
              var c__5455__auto__ = cljs.core.chunk_first.call(null, s__24552__$2);
              var size__5456__auto__ = cljs.core.count.call(null, c__5455__auto__);
              var b__24554 = cljs.core.chunk_buffer.call(null, size__5456__auto__);
              if (function() {
                var i__24553 = 0;
                while (true) {
                  if (i__24553 < size__5456__auto__) {
                    var vec__24557 = cljs.core._nth.call(null, c__5455__auto__, i__24553);
                    var k = cljs.core.nth.call(null, vec__24557, 0, null);
                    var v = cljs.core.nth.call(null, vec__24557, 1, null);
                    if (!(v == null)) {
                      cljs.core.chunk_append.call(null, b__24554, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                      var G__24562 = i__24553 + 1;
                      i__24553 = G__24562;
                      continue;
                    } else {
                      var G__24563 = i__24553 + 1;
                      i__24553 = G__24563;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24554), taoensso$encore$iter__24551.call(null, cljs.core.chunk_rest.call(null, s__24552__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24554), null);
              }
            } else {
              var vec__24558 = cljs.core.first.call(null, s__24552__$2);
              var k = cljs.core.nth.call(null, vec__24558, 0, null);
              var v = cljs.core.nth.call(null, vec__24558, 1, null);
              if (!(v == null)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), taoensso$encore$iter__24551.call(null, cljs.core.rest.call(null, s__24552__$2)));
              } else {
                var G__24564 = cljs.core.rest.call(null, s__24552__$2);
                s__24552__$1 = G__24564;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5457__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
  }());
};
taoensso.encore.assoc_some.cljs$lang$maxFixedArity = 1;
taoensso.encore.assoc_some.cljs$lang$applyTo = function(seq24547) {
  var G__24548 = cljs.core.first.call(null, seq24547);
  var seq24547__$1 = cljs.core.next.call(null, seq24547);
  return taoensso.encore.assoc_some.cljs$core$IFn$_invoke$arity$variadic(G__24548, seq24547__$1);
};
taoensso.encore.assoc_when = function taoensso$encore$assoc_when(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24577 = arguments.length;
  var i__5744__auto___24578 = 0;
  while (true) {
    if (i__5744__auto___24578 < len__5743__auto___24577) {
      args__5750__auto__.push(arguments[i__5744__auto___24578]);
      var G__24579 = i__5744__auto___24578 + 1;
      i__5744__auto___24578 = G__24579;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic = function(m, kvs) {
  if (cljs.core.truth_(function() {
    var __x = function() {
      try {
        return cljs.core.count.call(null, kvs);
      } catch (e24567) {
        if (e24567 instanceof Error) {
          var __t = e24567;
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(even? (count kvs))", taoensso.truss.impl._invar_undefined_val, __t, null);
        } else {
          throw e24567;
        }
      }
    }();
    try {
      if (cljs.core.even_QMARK_.call(null, __x)) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e24568) {
      if (e24568 instanceof Error) {
        var __t = e24568;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(even? (count kvs))", __x, __t, null);
      } else {
        throw e24568;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  return cljs.core.into.call(null, function() {
    var or__4685__auto__ = m;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }(), function() {
    var iter__5457__auto__ = function taoensso$encore$iter__24569(s__24570) {
      return new cljs.core.LazySeq(null, function() {
        var s__24570__$1 = s__24570;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__24570__$1);
          if (temp__4657__auto__) {
            var s__24570__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__24570__$2)) {
              var c__5455__auto__ = cljs.core.chunk_first.call(null, s__24570__$2);
              var size__5456__auto__ = cljs.core.count.call(null, c__5455__auto__);
              var b__24572 = cljs.core.chunk_buffer.call(null, size__5456__auto__);
              if (function() {
                var i__24571 = 0;
                while (true) {
                  if (i__24571 < size__5456__auto__) {
                    var vec__24575 = cljs.core._nth.call(null, c__5455__auto__, i__24571);
                    var k = cljs.core.nth.call(null, vec__24575, 0, null);
                    var v = cljs.core.nth.call(null, vec__24575, 1, null);
                    if (cljs.core.truth_(v)) {
                      cljs.core.chunk_append.call(null, b__24572, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
                      var G__24580 = i__24571 + 1;
                      i__24571 = G__24580;
                      continue;
                    } else {
                      var G__24581 = i__24571 + 1;
                      i__24571 = G__24581;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24572), taoensso$encore$iter__24569.call(null, cljs.core.chunk_rest.call(null, s__24570__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24572), null);
              }
            } else {
              var vec__24576 = cljs.core.first.call(null, s__24570__$2);
              var k = cljs.core.nth.call(null, vec__24576, 0, null);
              var v = cljs.core.nth.call(null, vec__24576, 1, null);
              if (cljs.core.truth_(v)) {
                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), taoensso$encore$iter__24569.call(null, cljs.core.rest.call(null, s__24570__$2)));
              } else {
                var G__24582 = cljs.core.rest.call(null, s__24570__$2);
                s__24570__$1 = G__24582;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5457__auto__.call(null, cljs.core.partition.call(null, 2, kvs));
  }());
};
taoensso.encore.assoc_when.cljs$lang$maxFixedArity = 1;
taoensso.encore.assoc_when.cljs$lang$applyTo = function(seq24565) {
  var G__24566 = cljs.core.first.call(null, seq24565);
  var seq24565__$1 = cljs.core.next.call(null, seq24565);
  return taoensso.encore.assoc_when.cljs$core$IFn$_invoke$arity$variadic(G__24566, seq24565__$1);
};
taoensso.encore.queue_QMARK_ = function taoensso$encore$queue_QMARK_(x) {
  return x instanceof cljs.core.PersistentQueue;
};
taoensso.encore.queue = function taoensso$encore$queue(var_args) {
  var args24583 = [];
  var len__5743__auto___24586 = arguments.length;
  var i__5744__auto___24587 = 0;
  while (true) {
    if (i__5744__auto___24587 < len__5743__auto___24586) {
      args24583.push(arguments[i__5744__auto___24587]);
      var G__24588 = i__5744__auto___24587 + 1;
      i__5744__auto___24587 = G__24588;
      continue;
    } else {
    }
    break;
  }
  var G__24585 = args24583.length;
  switch(G__24585) {
    case 1:
      return taoensso.encore.queue.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 0:
      return taoensso.encore.queue.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24583.length)].join(""));;
  }
};
taoensso.encore.queue.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.into.call(null, taoensso.encore.queue.call(null), coll);
};
taoensso.encore.queue.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentQueue.EMPTY;
};
taoensso.encore.queue.cljs$lang$maxFixedArity = 1;
taoensso.encore.queue_STAR_ = function taoensso$encore$queue_STAR_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24591 = arguments.length;
  var i__5744__auto___24592 = 0;
  while (true) {
    if (i__5744__auto___24592 < len__5743__auto___24591) {
      args__5750__auto__.push(arguments[i__5744__auto___24592]);
      var G__24593 = i__5744__auto___24592 + 1;
      i__5744__auto___24592 = G__24593;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(items) {
  return taoensso.encore.queue.call(null, items);
};
taoensso.encore.queue_STAR_.cljs$lang$maxFixedArity = 0;
taoensso.encore.queue_STAR_.cljs$lang$applyTo = function(seq24590) {
  return taoensso.encore.queue_STAR_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24590));
};
taoensso.encore.seq_kvs = cljs.core.partial.call(null, cljs.core.reduce, cljs.core.concat);
taoensso.encore.mapply = function taoensso$encore$mapply(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24596 = arguments.length;
  var i__5744__auto___24597 = 0;
  while (true) {
    if (i__5744__auto___24597 < len__5743__auto___24596) {
      args__5750__auto__.push(arguments[i__5744__auto___24597]);
      var G__24598 = i__5744__auto___24597 + 1;
      i__5744__auto___24597 = G__24598;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.call(null, f, cljs.core.concat.call(null, cljs.core.butlast.call(null, args), taoensso.encore.seq_kvs.call(null, cljs.core.last.call(null, args))));
};
taoensso.encore.mapply.cljs$lang$maxFixedArity = 1;
taoensso.encore.mapply.cljs$lang$applyTo = function(seq24594) {
  var G__24595 = cljs.core.first.call(null, seq24594);
  var seq24594__$1 = cljs.core.next.call(null, seq24594);
  return taoensso.encore.mapply.cljs$core$IFn$_invoke$arity$variadic(G__24595, seq24594__$1);
};
taoensso.encore.map_kvs = function taoensso$encore$map_kvs(kf, vf, m) {
  if (cljs.core.not.call(null, m)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    var vf__$1 = vf == null ? function(_, v) {
      return v;
    } : vf;
    var kf__$1 = kf == null ? function(vf__$1) {
      return function(k, _) {
        return k;
      };
    }(vf__$1) : cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, kf, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? function(vf__$1) {
      return function(k, _) {
        return cljs.core.keyword.call(null, k);
      };
    }(vf__$1) : kf;
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(vf__$1, kf__$1) {
      return function(m__$1, k, v) {
        return cljs.core.assoc_BANG_.call(null, m__$1, kf__$1.call(null, k, v), vf__$1.call(null, k, v));
      };
    }(vf__$1, kf__$1), cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), m));
  }
};
taoensso.encore.map_vals = function taoensso$encore$map_vals(f, m) {
  return taoensso.encore.map_kvs.call(null, null, function(_, v) {
    return f.call(null, v);
  }, m);
};
taoensso.encore.map_keys = function taoensso$encore$map_keys(f, m) {
  return taoensso.encore.map_kvs.call(null, cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, f, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758) : function(k, _) {
    return f.call(null, k);
  }, null, m);
};
taoensso.encore.filter_kvs = function taoensso$encore$filter_kvs(predk, predv, m) {
  if (cljs.core.not.call(null, m)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(function() {
        var and__4673__auto__ = predk.call(null, k);
        if (cljs.core.truth_(and__4673__auto__)) {
          return predv.call(null, v);
        } else {
          return and__4673__auto__;
        }
      }())) {
        return m__$1;
      } else {
        return cljs.core.dissoc.call(null, m__$1, k);
      }
    }, m, m);
  }
};
taoensso.encore.filter_keys = function taoensso$encore$filter_keys(pred, m) {
  return taoensso.encore.filter_kvs.call(null, pred, cljs.core.constantly.call(null, true), m);
};
taoensso.encore.filter_vals = function taoensso$encore$filter_vals(pred, m) {
  return taoensso.encore.filter_kvs.call(null, cljs.core.constantly.call(null, true), pred, m);
};
taoensso.encore.remove_vals = function taoensso$encore$remove_vals(pred, m) {
  if (cljs.core.not.call(null, m)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      if (cljs.core.truth_(pred.call(null, v))) {
        return cljs.core.dissoc.call(null, m__$1, k);
      } else {
        return m__$1;
      }
    }, m, m);
  }
};
taoensso.encore.keywordize_map = function taoensso$encore$keywordize_map(m) {
  if (cljs.core.not.call(null, m)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
      return cljs.core.assoc.call(null, m__$1, cljs.core.keyword.call(null, k), v);
    }, cljs.core.PersistentArrayMap.EMPTY, m);
  }
};
taoensso.encore.as_map_STAR_ = function taoensso$encore$as_map_STAR_(kf, vf, kvs) {
  return cljs.core.transduce.call(null, cljs.core.partition_all.call(null, 2), cljs.core.completing.call(null, function(acc, p__24605) {
    var vec__24606 = p__24605;
    var k = cljs.core.nth.call(null, vec__24606, 0, null);
    var v = cljs.core.nth.call(null, vec__24606, 1, null);
    return cljs.core.assoc_BANG_.call(null, acc, kf.call(null, k, v), vf.call(null, k, v));
  }, cljs.core.persistent_BANG_), cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), kvs);
};
taoensso.encore.as_map = function taoensso$encore$as_map(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24611 = arguments.length;
  var i__5744__auto___24612 = 0;
  while (true) {
    if (i__5744__auto___24612 < len__5743__auto___24611) {
      args__5750__auto__.push(arguments[i__5744__auto___24612]);
      var G__24613 = i__5744__auto___24612 + 1;
      i__5744__auto___24612 = G__24613;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic = function(kvs, p__24609) {
  var vec__24610 = p__24609;
  var kf = cljs.core.nth.call(null, vec__24610, 0, null);
  var vf = cljs.core.nth.call(null, vec__24610, 1, null);
  if (cljs.core.empty_QMARK_.call(null, kvs)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    var vf__$1 = vf == null ? function(vec__24610, kf, vf) {
      return function(_, v) {
        return v;
      };
    }(vec__24610, kf, vf) : vf;
    var kf__$1 = kf == null ? function(vf__$1, vec__24610, kf, vf) {
      return function(k, _) {
        return k;
      };
    }(vf__$1, vec__24610, kf, vf) : cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, kf, new cljs.core.Keyword(null, "keywordize", "keywordize", 1381210758))) ? function(vf__$1, vec__24610, kf, vf) {
      return function(k, _) {
        return cljs.core.keyword.call(null, k);
      };
    }(vf__$1, vec__24610, kf, vf) : kf;
    return taoensso.encore.as_map_STAR_.call(null, kf__$1, vf__$1, kvs);
  }
};
taoensso.encore.as_map.cljs$lang$maxFixedArity = 1;
taoensso.encore.as_map.cljs$lang$applyTo = function(seq24607) {
  var G__24608 = cljs.core.first.call(null, seq24607);
  var seq24607__$1 = cljs.core.next.call(null, seq24607);
  return taoensso.encore.as_map.cljs$core$IFn$_invoke$arity$variadic(G__24608, seq24607__$1);
};
taoensso.encore.fzipmap = function taoensso$encore$fzipmap(ks, vs) {
  var m = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks__$1 = cljs.core.seq.call(null, ks);
  var vs__$1 = cljs.core.seq.call(null, vs);
  while (true) {
    if (!(ks__$1 && vs__$1)) {
      return cljs.core.persistent_BANG_.call(null, m);
    } else {
      var G__24614 = cljs.core.assoc_BANG_.call(null, m, cljs.core.first.call(null, ks__$1), cljs.core.first.call(null, vs__$1));
      var G__24615 = cljs.core.next.call(null, ks__$1);
      var G__24616 = cljs.core.next.call(null, vs__$1);
      m = G__24614;
      ks__$1 = G__24615;
      vs__$1 = G__24616;
      continue;
    }
    break;
  }
};
taoensso.encore.into_all = function taoensso$encore$into_all(var_args) {
  var args24617 = [];
  var len__5743__auto___24623 = arguments.length;
  var i__5744__auto___24624 = 0;
  while (true) {
    if (i__5744__auto___24624 < len__5743__auto___24623) {
      args24617.push(arguments[i__5744__auto___24624]);
      var G__24625 = i__5744__auto___24624 + 1;
      i__5744__auto___24624 = G__24625;
      continue;
    } else {
    }
    break;
  }
  var G__24622 = args24617.length;
  switch(G__24622) {
    case 2:
      return taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24617.slice(2), 0);
      return taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  return cljs.core.into.call(null, to, from);
};
taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic = function(to, from, more) {
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.into.call(null, to, from), more);
};
taoensso.encore.into_all.cljs$lang$applyTo = function(seq24618) {
  var G__24619 = cljs.core.first.call(null, seq24618);
  var seq24618__$1 = cljs.core.next.call(null, seq24618);
  var G__24620 = cljs.core.first.call(null, seq24618__$1);
  var seq24618__$2 = cljs.core.next.call(null, seq24618__$1);
  return taoensso.encore.into_all.cljs$core$IFn$_invoke$arity$variadic(G__24619, G__24620, seq24618__$2);
};
taoensso.encore.into_all.cljs$lang$maxFixedArity = 2;
taoensso.encore.interleave_all = function taoensso$encore$interleave_all(var_args) {
  var args24627 = [];
  var len__5743__auto___24633 = arguments.length;
  var i__5744__auto___24634 = 0;
  while (true) {
    if (i__5744__auto___24634 < len__5743__auto___24633) {
      args24627.push(arguments[i__5744__auto___24634]);
      var G__24635 = i__5744__auto___24634 + 1;
      i__5744__auto___24634 = G__24635;
      continue;
    } else {
    }
    break;
  }
  var G__24632 = args24627.length;
  switch(G__24632) {
    case 0:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24627.slice(2), 0);
      return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5762__auto__);
  }
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq.call(null, c1);
    var s2 = cljs.core.seq.call(null, c2);
    if (s1 && s2) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), taoensso.encore.interleave_all.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
    } else {
      if (s1) {
        return s1;
      } else {
        if (s2) {
          return s2;
        } else {
          return null;
        }
      }
    }
  }, null, null);
};
taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1)));
    return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, taoensso.encore.interleave_all, cljs.core.map.call(null, cljs.core.rest, ss)));
  }, null, null);
};
taoensso.encore.interleave_all.cljs$lang$applyTo = function(seq24628) {
  var G__24629 = cljs.core.first.call(null, seq24628);
  var seq24628__$1 = cljs.core.next.call(null, seq24628);
  var G__24630 = cljs.core.first.call(null, seq24628__$1);
  var seq24628__$2 = cljs.core.next.call(null, seq24628__$1);
  return taoensso.encore.interleave_all.cljs$core$IFn$_invoke$arity$variadic(G__24629, G__24630, seq24628__$2);
};
taoensso.encore.interleave_all.cljs$lang$maxFixedArity = 2;
taoensso.encore.distinct_by = function taoensso$encore$distinct_by(keyfn, coll) {
  var step = function taoensso$encore$distinct_by_$_step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__24643, seen__$1) {
        while (true) {
          var vec__24644 = p__24643;
          var v = cljs.core.nth.call(null, vec__24644, 0, null);
          var xs__$1 = vec__24644;
          var temp__4657__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            var v_STAR_ = keyfn.call(null, v);
            if (cljs.core.contains_QMARK_.call(null, seen__$1, v_STAR_)) {
              var G__24645 = cljs.core.rest.call(null, s);
              var G__24646 = seen__$1;
              p__24643 = G__24645;
              seen__$1 = G__24646;
              continue;
            } else {
              return cljs.core.cons.call(null, v, taoensso$encore$distinct_by_$_step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, v_STAR_)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
taoensso.encore.xdistinct = function taoensso$encore$xdistinct(var_args) {
  var args24651 = [];
  var len__5743__auto___24654 = arguments.length;
  var i__5744__auto___24655 = 0;
  while (true) {
    if (i__5744__auto___24655 < len__5743__auto___24654) {
      args24651.push(arguments[i__5744__auto___24655]);
      var G__24656 = i__5744__auto___24655 + 1;
      i__5744__auto___24655 = G__24656;
      continue;
    } else {
    }
    break;
  }
  var G__24653 = args24651.length;
  switch(G__24653) {
    case 0:
      return taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24651.length)].join(""));;
  }
};
taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.distinct.call(null);
};
taoensso.encore.xdistinct.cljs$core$IFn$_invoke$arity$1 = function(keyfn) {
  return function(rf) {
    var seen_ = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentHashSet.EMPTY);
    return function(seen_) {
      return function() {
        var G__24658 = null;
        var G__24658__0 = function() {
          return rf.call(null);
        };
        var G__24658__1 = function(acc) {
          return rf.call(null, acc);
        };
        var G__24658__2 = function(acc, input) {
          var k = keyfn.call(null, input);
          if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, seen_), k)) {
            return acc;
          } else {
            cljs.core._vreset_BANG_.call(null, seen_, cljs.core.conj.call(null, cljs.core._deref.call(null, seen_), k));
            return rf.call(null, acc, input);
          }
        };
        G__24658 = function(acc, input) {
          switch(arguments.length) {
            case 0:
              return G__24658__0.call(this);
            case 1:
              return G__24658__1.call(this, acc);
            case 2:
              return G__24658__2.call(this, acc, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__24658.cljs$core$IFn$_invoke$arity$0 = G__24658__0;
        G__24658.cljs$core$IFn$_invoke$arity$1 = G__24658__1;
        G__24658.cljs$core$IFn$_invoke$arity$2 = G__24658__2;
        return G__24658;
      }();
    }(seen_);
  };
};
taoensso.encore.xdistinct.cljs$lang$maxFixedArity = 1;
taoensso.encore.takev = function taoensso$encore$takev(n, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    return taoensso.encore.subvec_STAR_.call(null, coll, 0, n);
  } else {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.take.call(null, n), coll);
  }
};
taoensso.encore.removev = function taoensso$encore$removev(pred, coll) {
  return cljs.core.filterv.call(null, cljs.core.complement.call(null, pred), coll);
};
taoensso.encore.distinctv = function taoensso$encore$distinctv(var_args) {
  var args24663 = [];
  var len__5743__auto___24668 = arguments.length;
  var i__5744__auto___24669 = 0;
  while (true) {
    if (i__5744__auto___24669 < len__5743__auto___24668) {
      args24663.push(arguments[i__5744__auto___24669]);
      var G__24670 = i__5744__auto___24669 + 1;
      i__5744__auto___24669 = G__24670;
      continue;
    } else {
    }
    break;
  }
  var G__24665 = args24663.length;
  switch(G__24665) {
    case 1:
      return taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24663.length)].join(""));;
  }
};
taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return taoensso.encore.distinctv.call(null, cljs.core.identity, coll);
};
taoensso.encore.distinctv.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  var tr = cljs.core.reduce.call(null, function(p__24666, in$) {
    var vec__24667 = p__24666;
    var v = cljs.core.nth.call(null, vec__24667, 0, null);
    var seen = cljs.core.nth.call(null, vec__24667, 1, null);
    var in_STAR_ = keyfn.call(null, in$);
    if (!cljs.core.contains_QMARK_.call(null, seen, in_STAR_)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj_BANG_.call(null, v, in$), cljs.core.conj.call(null, seen, in_STAR_)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, seen], null);
    }
  }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.PersistentHashSet.EMPTY], null), coll);
  return cljs.core.persistent_BANG_.call(null, cljs.core.nth.call(null, tr, 0));
};
taoensso.encore.distinctv.cljs$lang$maxFixedArity = 2;
taoensso.encore.rcompare = function taoensso$encore$rcompare(x, y) {
  return cljs.core.compare.call(null, y, x);
};
taoensso.encore.nested_merge_with = function taoensso$encore$nested_merge_with(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24674 = arguments.length;
  var i__5744__auto___24675 = 0;
  while (true) {
    if (i__5744__auto___24675 < len__5743__auto___24674) {
      args__5750__auto__.push(arguments[i__5744__auto___24675]);
      var G__24676 = i__5744__auto___24675 + 1;
      i__5744__auto___24675 = G__24676;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key.call(null, e);
      var rv = cljs.core.val.call(null, e);
      if (!cljs.core.contains_QMARK_.call(null, m, k)) {
        return cljs.core.assoc.call(null, m, k, rv);
      } else {
        var lv = cljs.core.get.call(null, m, k);
        if (cljs.core.map_QMARK_.call(null, lv) && cljs.core.map_QMARK_.call(null, rv)) {
          return cljs.core.assoc.call(null, m, k, taoensso.encore.nested_merge_with.call(null, f, lv, rv));
        } else {
          return cljs.core.assoc.call(null, m, k, f.call(null, lv, rv));
        }
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry, function() {
          var or__4685__auto__ = m1;
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq.call(null, m2));
      };
    }(merge_entry);
    return cljs.core.reduce.call(null, merge2, maps);
  } else {
    return null;
  }
};
taoensso.encore.nested_merge_with.cljs$lang$maxFixedArity = 1;
taoensso.encore.nested_merge_with.cljs$lang$applyTo = function(seq24672) {
  var G__24673 = cljs.core.first.call(null, seq24672);
  var seq24672__$1 = cljs.core.next.call(null, seq24672);
  return taoensso.encore.nested_merge_with.cljs$core$IFn$_invoke$arity$variadic(G__24673, seq24672__$1);
};
taoensso.encore.nested_merge = cljs.core.partial.call(null, taoensso.encore.nested_merge_with, function(x, y) {
  if (cljs.core.map_QMARK_.call(null, x) && y == null) {
    return x;
  } else {
    return y;
  }
});
taoensso.encore.repeatedly_into = function taoensso$encore$repeatedly_into(coll, n, f) {
  if (function() {
    var and__4673__auto__ = n > 10;
    if (and__4673__auto__) {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition1$ & 4 || coll.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    } else {
      return and__4673__auto__;
    }
  }()) {
    var v = cljs.core.transient$.call(null, coll);
    var idx = 0;
    while (true) {
      if (idx === n) {
        return cljs.core.persistent_BANG_.call(null, v);
      } else {
        var G__24681 = cljs.core.conj_BANG_.call(null, v, f.call(null));
        var G__24682 = idx + 1;
        v = G__24681;
        idx = G__24682;
        continue;
      }
      break;
    }
  } else {
    var v = coll;
    var idx = 0;
    while (true) {
      if (idx === n) {
        return v;
      } else {
        var G__24683 = cljs.core.conj.call(null, v, f.call(null));
        var G__24684 = idx + 1;
        v = G__24683;
        idx = G__24684;
        continue;
      }
      break;
    }
  }
};
taoensso.encore.Swapped = function(new_val, return_val, __meta, __extmap, __hash) {
  this.new_val = new_val;
  this.return_val = return_val;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.encore.Swapped.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5299__auto__, k__5300__auto__) {
  var self__ = this;
  var this__5299__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5299__auto____$1, k__5300__auto__, null);
};
taoensso.encore.Swapped.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5301__auto__, k24686, else__5302__auto__) {
  var self__ = this;
  var this__5301__auto____$1 = this;
  var G__24688 = k24686 instanceof cljs.core.Keyword ? k24686.fqn : null;
  switch(G__24688) {
    case "new-val":
      return self__.new_val;
      break;
    case "return-val":
      return self__.return_val;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24686, else__5302__auto__);
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5313__auto__, writer__5314__auto__, opts__5315__auto__) {
  var self__ = this;
  var this__5313__auto____$1 = this;
  var pr_pair__5316__auto__ = function(this__5313__auto____$1) {
    return function(keyval__5317__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, cljs.core.pr_writer, "", " ", "", opts__5315__auto__, keyval__5317__auto__);
    };
  }(this__5313__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, pr_pair__5316__auto__, "#taoensso.encore.Swapped{", ", ", "}", opts__5315__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "new-val", "new-val", -738158599), self__.new_val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "return-val", "return-val", -512772489), self__.return_val], null)], null), self__.__extmap));
};
taoensso.encore.Swapped.prototype.cljs$core$IIterable$ = true;
taoensso.encore.Swapped.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24685) {
  var self__ = this;
  var G__24685__$1 = this;
  return new cljs.core.RecordIter(0, G__24685__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "new-val", "new-val", -738158599), new cljs.core.Keyword(null, "return-val", "return-val", -512772489)], null), cljs.core._iterator.call(null, self__.__extmap));
};
taoensso.encore.Swapped.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5297__auto__) {
  var self__ = this;
  var this__5297__auto____$1 = this;
  return self__.__meta;
};
taoensso.encore.Swapped.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5293__auto__) {
  var self__ = this;
  var this__5293__auto____$1 = this;
  return new taoensso.encore.Swapped(self__.new_val, self__.return_val, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.encore.Swapped.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5303__auto__) {
  var self__ = this;
  var this__5303__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.encore.Swapped.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5294__auto__) {
  var self__ = this;
  var this__5294__auto____$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_imap.call(null, this__5294__auto____$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5295__auto__, other__5296__auto__) {
  var self__ = this;
  var this__5295__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = other__5296__auto__;
    if (cljs.core.truth_(and__4673__auto__)) {
      var and__4673__auto____$1 = this__5295__auto____$1.constructor === other__5296__auto__.constructor;
      if (and__4673__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5295__auto____$1, other__5296__auto__);
      } else {
        return and__4673__auto____$1;
      }
    } else {
      return and__4673__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5308__auto__, k__5309__auto__) {
  var self__ = this;
  var this__5308__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "return-val", "return-val", -512772489), null, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), null], null), null), k__5309__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5308__auto____$1), self__.__meta), k__5309__auto__);
  } else {
    return new taoensso.encore.Swapped(self__.new_val, self__.return_val, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5309__auto__)), null);
  }
};
taoensso.encore.Swapped.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5306__auto__, k__5307__auto__, G__24685) {
  var self__ = this;
  var this__5306__auto____$1 = this;
  var pred__24689 = cljs.core.keyword_identical_QMARK_;
  var expr__24690 = k__5307__auto__;
  if (cljs.core.truth_(pred__24689.call(null, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), expr__24690))) {
    return new taoensso.encore.Swapped(G__24685, self__.return_val, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24689.call(null, new cljs.core.Keyword(null, "return-val", "return-val", -512772489), expr__24690))) {
      return new taoensso.encore.Swapped(self__.new_val, G__24685, self__.__meta, self__.__extmap, null);
    } else {
      return new taoensso.encore.Swapped(self__.new_val, self__.return_val, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5307__auto__, G__24685), null);
    }
  }
};
taoensso.encore.Swapped.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5311__auto__) {
  var self__ = this;
  var this__5311__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "new-val", "new-val", -738158599), self__.new_val], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "return-val", "return-val", -512772489), self__.return_val], null)], null), 
  self__.__extmap));
};
taoensso.encore.Swapped.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5298__auto__, G__24685) {
  var self__ = this;
  var this__5298__auto____$1 = this;
  return new taoensso.encore.Swapped(self__.new_val, self__.return_val, G__24685, self__.__extmap, self__.__hash);
};
taoensso.encore.Swapped.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5304__auto__, entry__5305__auto__) {
  var self__ = this;
  var this__5304__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5305__auto__)) {
    return cljs.core._assoc.call(null, this__5304__auto____$1, cljs.core._nth.call(null, entry__5305__auto__, 0), cljs.core._nth.call(null, entry__5305__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5304__auto____$1, entry__5305__auto__);
  }
};
taoensso.encore.Swapped.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "new-val", "new-val", 902372928, null), new cljs.core.Symbol(null, "return-val", "return-val", 1127759038, null)], null);
};
taoensso.encore.Swapped.cljs$lang$type = true;
taoensso.encore.Swapped.cljs$lang$ctorPrSeq = function(this__5333__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.encore/Swapped");
};
taoensso.encore.Swapped.cljs$lang$ctorPrWriter = function(this__5333__auto__, writer__5334__auto__) {
  return cljs.core._write.call(null, writer__5334__auto__, "taoensso.encore/Swapped");
};
taoensso.encore.__GT_Swapped = function taoensso$encore$__GT_Swapped(new_val, return_val) {
  return new taoensso.encore.Swapped(new_val, return_val, null, null, null);
};
taoensso.encore.map__GT_Swapped = function taoensso$encore$map__GT_Swapped(G__24687) {
  return new taoensso.encore.Swapped((new cljs.core.Keyword(null, "new-val", "new-val", -738158599)).cljs$core$IFn$_invoke$arity$1(G__24687), (new cljs.core.Keyword(null, "return-val", "return-val", -512772489)).cljs$core$IFn$_invoke$arity$1(G__24687), null, cljs.core.dissoc.call(null, G__24687, new cljs.core.Keyword(null, "new-val", "new-val", -738158599), new cljs.core.Keyword(null, "return-val", "return-val", -512772489)), null);
};
taoensso.encore.swapped = function taoensso$encore$swapped(new_val, return_val) {
  return new taoensso.encore.Swapped(new_val, return_val, null, null, null);
};
taoensso.encore.swapped_QMARK_ = function taoensso$encore$swapped_QMARK_(x) {
  return x instanceof taoensso.encore.Swapped;
};
taoensso.encore.swapped_STAR_ = function taoensso$encore$swapped_STAR_(x) {
  if (cljs.core.truth_(taoensso.encore.swapped_QMARK_.call(null, x))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "new-val", "new-val", -738158599)).cljs$core$IFn$_invoke$arity$1(x), (new cljs.core.Keyword(null, "return-val", "return-val", -512772489)).cljs$core$IFn$_invoke$arity$1(x)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, x], null);
  }
};
taoensso.encore.swapped_STAR__in = function taoensso$encore$swapped_STAR__in(m, ks, f) {
  if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, f, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782)))) {
    return taoensso.encore.swapped_STAR_.call(null, taoensso.encore.dissoc_in.call(null, m, cljs.core.butlast.call(null, ks), cljs.core.last.call(null, ks)));
  } else {
    var old_val_in = cljs.core.get_in.call(null, m, ks);
    var vec__24694 = taoensso.encore.swapped_STAR_.call(null, f.call(null, old_val_in));
    var new_val_in = cljs.core.nth.call(null, vec__24694, 0, null);
    var return_val = cljs.core.nth.call(null, vec__24694, 1, null);
    var new_val = cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, new_val_in, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782))) ? taoensso.encore.dissoc_in.call(null, m, cljs.core.butlast.call(null, ks), cljs.core.last.call(null, ks)) : cljs.core.assoc_in.call(null, m, ks, new_val_in);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_val, return_val], null);
  }
};
taoensso.encore.replace_in_STAR_ = function taoensso$encore$replace_in_STAR_(_QMARK_vf_type, m, ops) {
  return cljs.core.reduce.call(null, function(accum, _QMARK_op) {
    if (cljs.core.not.call(null, _QMARK_op)) {
      return accum;
    } else {
      var vec__24697 = cljs.core.not.call(null, _QMARK_vf_type) ? _QMARK_op : cljs.core.cons.call(null, _QMARK_vf_type, _QMARK_op);
      var vf_type = cljs.core.nth.call(null, vec__24697, 0, null);
      var ks = cljs.core.nth.call(null, vec__24697, 1, null);
      var valf = cljs.core.nth.call(null, vec__24697, 2, null);
      var G__24698 = vf_type instanceof cljs.core.Keyword ? vf_type.fqn : null;
      switch(G__24698) {
        case "reset":
          if (cljs.core.empty_QMARK_.call(null, ks)) {
            return valf;
          } else {
            return cljs.core.assoc_in.call(null, accum, ks, valf);
          }
          break;
        case "swap":
          if (valf == null) {
            return accum;
          } else {
            if (cljs.core.empty_QMARK_.call(null, ks)) {
              return valf.call(null, accum);
            } else {
              return cljs.core.nth.call(null, taoensso.encore.swapped_STAR__in.call(null, accum, ks, valf), 0);
            }
          }
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(vf_type)].join(""));;
      }
    }
  }, m, ops);
};
taoensso.encore.replace_in = function taoensso$encore$replace_in(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24702 = arguments.length;
  var i__5744__auto___24703 = 0;
  while (true) {
    if (i__5744__auto___24703 < len__5743__auto___24702) {
      args__5750__auto__.push(arguments[i__5744__auto___24703]);
      var G__24704 = i__5744__auto___24703 + 1;
      i__5744__auto___24703 = G__24704;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic = function(m, ops) {
  return taoensso.encore.replace_in_STAR_.call(null, null, m, ops);
};
taoensso.encore.replace_in.cljs$lang$maxFixedArity = 1;
taoensso.encore.replace_in.cljs$lang$applyTo = function(seq24700) {
  var G__24701 = cljs.core.first.call(null, seq24700);
  var seq24700__$1 = cljs.core.next.call(null, seq24700);
  return taoensso.encore.replace_in.cljs$core$IFn$_invoke$arity$variadic(G__24701, seq24700__$1);
};
taoensso.encore.platform_cas_BANG_ = function taoensso$encore$platform_cas_BANG_(atom_, old_val, new_val) {
  cljs.core.reset_BANG_.call(null, atom_, new_val);
  return true;
};
taoensso.encore.swap_in_BANG_ = function taoensso$encore$swap_in_BANG_(var_args) {
  var args24705 = [];
  var len__5743__auto___24716 = arguments.length;
  var i__5744__auto___24717 = 0;
  while (true) {
    if (i__5744__auto___24717 < len__5743__auto___24716) {
      args24705.push(arguments[i__5744__auto___24717]);
      var G__24718 = i__5744__auto___24717 + 1;
      i__5744__auto___24717 = G__24718;
      continue;
    } else {
    }
    break;
  }
  var G__24711 = args24705.length;
  switch(G__24711) {
    case 3:
      return taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24705.slice(3), 0);
      return taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3 = function(atom_, ks, f) {
  if (cljs.core.empty_QMARK_.call(null, ks)) {
    while (true) {
      var old_val = cljs.core.deref.call(null, atom_);
      var vec__24712 = taoensso.encore.swapped_STAR_.call(null, f.call(null, old_val));
      var new_val = cljs.core.nth.call(null, vec__24712, 0, null);
      var return_val = cljs.core.nth.call(null, vec__24712, 1, null);
      if (cljs.core.truth_(taoensso.encore.platform_cas_BANG_.call(null, atom_, old_val, new_val))) {
        return return_val;
      } else {
        continue;
      }
      break;
    }
  } else {
    while (true) {
      var old_val = cljs.core.deref.call(null, atom_);
      var vec__24713 = taoensso.encore.swapped_STAR__in.call(null, old_val, ks, f);
      var new_val = cljs.core.nth.call(null, vec__24713, 0, null);
      var return_val = cljs.core.nth.call(null, vec__24713, 1, null);
      if (cljs.core.truth_(taoensso.encore.platform_cas_BANG_.call(null, atom_, old_val, new_val))) {
        return return_val;
      } else {
        continue;
      }
      break;
    }
  }
};
taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(atom_, ks, f, more) {
  if (cljs.core.truth_(function() {
    var __x = function() {
      try {
        return cljs.core.count.call(null, more);
      } catch (e24714) {
        if (e24714 instanceof Error) {
          var __t = e24714;
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(even? (count more))", taoensso.truss.impl._invar_undefined_val, __t, null);
        } else {
          throw e24714;
        }
      }
    }();
    try {
      if (cljs.core.even_QMARK_.call(null, __x)) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e24715) {
      if (e24715 instanceof Error) {
        var __t = e24715;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(even? (count more))", __x, __t, null);
      } else {
        throw e24715;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "more", "more", -418290273, null)))))].join(""));
  }
  var pairs = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ks, f], null)], null), cljs.core.partition.call(null, 2, more));
  while (true) {
    var old_val = cljs.core.deref.call(null, atom_);
    var new_val = taoensso.encore.replace_in_STAR_.call(null, new cljs.core.Keyword(null, "swap", "swap", 228675637), old_val, pairs);
    if (cljs.core.truth_(taoensso.encore.platform_cas_BANG_.call(null, atom_, old_val, new_val))) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "old", "old", -1825222690), old_val, new cljs.core.Keyword(null, "new", "new", -2085437848), new_val], null);
    } else {
      continue;
    }
    break;
  }
};
taoensso.encore.swap_in_BANG_.cljs$lang$applyTo = function(seq24706) {
  var G__24707 = cljs.core.first.call(null, seq24706);
  var seq24706__$1 = cljs.core.next.call(null, seq24706);
  var G__24708 = cljs.core.first.call(null, seq24706__$1);
  var seq24706__$2 = cljs.core.next.call(null, seq24706__$1);
  var G__24709 = cljs.core.first.call(null, seq24706__$2);
  var seq24706__$3 = cljs.core.next.call(null, seq24706__$2);
  return taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__24707, G__24708, G__24709, seq24706__$3);
};
taoensso.encore.swap_in_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.encore.reset_in_BANG_ = function taoensso$encore$reset_in_BANG_(var_args) {
  var args24720 = [];
  var len__5743__auto___24729 = arguments.length;
  var i__5744__auto___24730 = 0;
  while (true) {
    if (i__5744__auto___24730 < len__5743__auto___24729) {
      args24720.push(arguments[i__5744__auto___24730]);
      var G__24731 = i__5744__auto___24730 + 1;
      i__5744__auto___24730 = G__24731;
      continue;
    } else {
    }
    break;
  }
  var G__24726 = args24720.length;
  switch(G__24726) {
    case 3:
      return taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5762__auto__ = new cljs.core.IndexedSeq(args24720.slice(3), 0);
      return taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5762__auto__);
  }
};
taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3 = function(atom_, ks, new_val) {
  if (cljs.core.empty_QMARK_.call(null, ks)) {
    return cljs.core.reset_BANG_.call(null, atom_, new_val);
  } else {
    return cljs.core.swap_BANG_.call(null, atom_, function(old_val) {
      return cljs.core.assoc_in.call(null, old_val, ks, new_val);
    });
  }
};
taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(atom_, ks, new_val, more) {
  if (cljs.core.truth_(function() {
    var __x = function() {
      try {
        return cljs.core.count.call(null, more);
      } catch (e24727) {
        if (e24727 instanceof Error) {
          var __t = e24727;
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(even? (count more))", taoensso.truss.impl._invar_undefined_val, __t, null);
        } else {
          throw e24727;
        }
      }
    }();
    try {
      if (cljs.core.even_QMARK_.call(null, __x)) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e24728) {
      if (e24728 instanceof Error) {
        var __t = e24728;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(even? (count more))", __x, __t, null);
      } else {
        throw e24728;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "more", "more", -418290273, null)))))].join(""));
  }
  var pairs = cljs.core.into.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ks, new_val], null)], null), cljs.core.partition.call(null, 2, more));
  while (true) {
    var old_val = cljs.core.deref.call(null, atom_);
    var new_val__$1 = taoensso.encore.replace_in_STAR_.call(null, new cljs.core.Keyword(null, "reset", "reset", -800929946), old_val, pairs);
    if (cljs.core.truth_(taoensso.encore.platform_cas_BANG_.call(null, atom_, old_val, new_val__$1))) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "old", "old", -1825222690), old_val, new cljs.core.Keyword(null, "new", "new", -2085437848), new_val__$1], null);
    } else {
      continue;
    }
    break;
  }
};
taoensso.encore.reset_in_BANG_.cljs$lang$applyTo = function(seq24721) {
  var G__24722 = cljs.core.first.call(null, seq24721);
  var seq24721__$1 = cljs.core.next.call(null, seq24721);
  var G__24723 = cljs.core.first.call(null, seq24721__$1);
  var seq24721__$2 = cljs.core.next.call(null, seq24721__$1);
  var G__24724 = cljs.core.first.call(null, seq24721__$2);
  var seq24721__$3 = cljs.core.next.call(null, seq24721__$2);
  return taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__24722, G__24723, G__24724, seq24721__$3);
};
taoensso.encore.reset_in_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.encore.str_builder_QMARK_ = function taoensso$encore$str_builder_QMARK_(x) {
  return x instanceof goog.string.StringBuffer;
};
taoensso.encore.str_builder = function() {
  var taoensso$encore$str_builder = null;
  var taoensso$encore$str_builder__0 = function() {
    return new goog.string.StringBuffer;
  };
  var taoensso$encore$str_builder__1 = function(s_init) {
    return new goog.string.StringBuffer(s_init);
  };
  taoensso$encore$str_builder = function(s_init) {
    switch(arguments.length) {
      case 0:
        return taoensso$encore$str_builder__0.call(this);
      case 1:
        return taoensso$encore$str_builder__1.call(this, s_init);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  taoensso$encore$str_builder.cljs$core$IFn$_invoke$arity$0 = taoensso$encore$str_builder__0;
  taoensso$encore$str_builder.cljs$core$IFn$_invoke$arity$1 = taoensso$encore$str_builder__1;
  return taoensso$encore$str_builder;
}();
taoensso.encore.sb_append = function taoensso$encore$sb_append(str_builder, s) {
  return str_builder.append(s);
};
taoensso.encore.str_rf = function() {
  var taoensso$encore$str_rf = null;
  var taoensso$encore$str_rf__0 = function() {
    return taoensso.encore.str_builder.call(null);
  };
  var taoensso$encore$str_rf__1 = function(acc) {
    if (cljs.core.truth_(taoensso.encore.str_builder_QMARK_.call(null, acc))) {
      return acc;
    } else {
      return taoensso.encore.str_builder.call(null, [cljs.core.str(acc)].join(""));
    }
  };
  var taoensso$encore$str_rf__2 = function(acc, in$) {
    return taoensso.encore.sb_append.call(null, cljs.core.truth_(taoensso.encore.str_builder_QMARK_.call(null, acc)) ? acc : taoensso.encore.str_builder.call(null, [cljs.core.str(acc)].join("")), [cljs.core.str(in$)].join(""));
  };
  taoensso$encore$str_rf = function(acc, in$) {
    switch(arguments.length) {
      case 0:
        return taoensso$encore$str_rf__0.call(this);
      case 1:
        return taoensso$encore$str_rf__1.call(this, acc);
      case 2:
        return taoensso$encore$str_rf__2.call(this, acc, in$);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  taoensso$encore$str_rf.cljs$core$IFn$_invoke$arity$0 = taoensso$encore$str_rf__0;
  taoensso$encore$str_rf.cljs$core$IFn$_invoke$arity$1 = taoensso$encore$str_rf__1;
  taoensso$encore$str_rf.cljs$core$IFn$_invoke$arity$2 = taoensso$encore$str_rf__2;
  return taoensso$encore$str_rf;
}();
taoensso.encore.undefined__GT_nil = function taoensso$encore$undefined__GT_nil(x) {
  if (void 0 === x) {
    return null;
  } else {
    return x;
  }
};
taoensso.encore.nil__GT_str = function taoensso$encore$nil__GT_str(x) {
  if (void 0 === x || x == null) {
    return "nil";
  } else {
    return x;
  }
};
taoensso.encore.str_join = function taoensso$encore$str_join(var_args) {
  var args24737 = [];
  var len__5743__auto___24740 = arguments.length;
  var i__5744__auto___24741 = 0;
  while (true) {
    if (i__5744__auto___24741 < len__5743__auto___24740) {
      args24737.push(arguments[i__5744__auto___24741]);
      var G__24742 = i__5744__auto___24741 + 1;
      i__5744__auto___24741 = G__24742;
      continue;
    } else {
    }
    break;
  }
  var G__24739 = args24737.length;
  switch(G__24739) {
    case 1:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24737.length)].join(""));;
  }
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return taoensso.encore.str_join.call(null, null, null, coll);
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  return taoensso.encore.str_join.call(null, separator, null, coll);
};
taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$3 = function(separator, xform, coll) {
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = separator;
    if (cljs.core.truth_(and__4673__auto__)) {
      return cljs.core.not_EQ_.call(null, separator, "");
    } else {
      return and__4673__auto__;
    }
  }())) {
    var sep_xform = cljs.core.interpose.call(null, separator);
    var str_rf_STAR_ = cljs.core.completing.call(null, taoensso.encore.str_rf, cljs.core.str);
    if (cljs.core.truth_(xform)) {
      return cljs.core.transduce.call(null, cljs.core.comp.call(null, xform, sep_xform), str_rf_STAR_, coll);
    } else {
      return cljs.core.transduce.call(null, sep_xform, str_rf_STAR_, coll);
    }
  } else {
    if (cljs.core.truth_(xform)) {
      return cljs.core.transduce.call(null, xform, cljs.core.completing.call(null, taoensso.encore.str_rf, cljs.core.str), coll);
    } else {
      return [cljs.core.str(cljs.core.reduce.call(null, taoensso.encore.str_rf, coll))].join("");
    }
  }
};
taoensso.encore.str_join.cljs$lang$maxFixedArity = 3;
taoensso.encore.format_STAR_ = function taoensso$encore$format_STAR_(fmt, args) {
  var fmt__$1 = function() {
    var or__4685__auto__ = fmt;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return "";
    }
  }();
  var args__$1 = cljs.core.mapv.call(null, taoensso.encore.nil__GT_str, args);
  return cljs.core.apply.call(null, goog.string.format, fmt__$1, args__$1);
};
taoensso.encore.format = function taoensso$encore$format(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24746 = arguments.length;
  var i__5744__auto___24747 = 0;
  while (true) {
    if (i__5744__auto___24747 < len__5743__auto___24746) {
      args__5750__auto__.push(arguments[i__5744__auto___24747]);
      var G__24748 = i__5744__auto___24747 + 1;
      i__5744__auto___24747 = G__24748;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic = function(fmt, args) {
  return taoensso.encore.format_STAR_.call(null, fmt, args);
};
taoensso.encore.format.cljs$lang$maxFixedArity = 1;
taoensso.encore.format.cljs$lang$applyTo = function(seq24744) {
  var G__24745 = cljs.core.first.call(null, seq24744);
  var seq24744__$1 = cljs.core.next.call(null, seq24744);
  return taoensso.encore.format.cljs$core$IFn$_invoke$arity$variadic(G__24745, seq24744__$1);
};
taoensso.encore.str_replace = function taoensso$encore$str_replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      var flags = [cljs.core.str("g"), cljs.core.str(cljs.core.truth_(match.ignoreCase) ? "i" : null), cljs.core.str(cljs.core.truth_(match.multiline) ? "m" : null)].join("");
      var replacement__$1 = typeof replacement === "string" ? replacement : function(flags) {
        return function() {
          var G__24749__delegate = function(args) {
            return replacement.call(null, cljs.core.vec.call(null, args));
          };
          var G__24749 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__24750__i = 0, G__24750__a = new Array(arguments.length - 0);
              while (G__24750__i < G__24750__a.length) {
                G__24750__a[G__24750__i] = arguments[G__24750__i + 0];
                ++G__24750__i;
              }
              args = new cljs.core.IndexedSeq(G__24750__a, 0);
            }
            return G__24749__delegate.call(this, args);
          };
          G__24749.cljs$lang$maxFixedArity = 0;
          G__24749.cljs$lang$applyTo = function(arglist__24751) {
            var args = cljs.core.seq(arglist__24751);
            return G__24749__delegate(args);
          };
          G__24749.cljs$core$IFn$_invoke$arity$variadic = G__24749__delegate;
          return G__24749;
        }();
      }(flags);
      return s.replace(new RegExp(match.source, flags), replacement__$1);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
taoensso.encore.substr = function taoensso$encore$substr(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24759 = arguments.length;
  var i__5744__auto___24760 = 0;
  while (true) {
    if (i__5744__auto___24760 < len__5743__auto___24759) {
      args__5750__auto__.push(arguments[i__5744__auto___24760]);
      var G__24761 = i__5744__auto___24760 + 1;
      i__5744__auto___24760 = G__24761;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic = function(s, start_idx, p__24755) {
  var vec__24756 = p__24755;
  var _QMARK_max_len = cljs.core.nth.call(null, vec__24756, 0, null);
  if (cljs.core.truth_(function() {
    var __x = s;
    try {
      if (typeof __x === "string") {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e24757) {
      if (e24757 instanceof Error) {
        var __t = e24757;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(string? s)", __x, __t, null);
      } else {
        throw e24757;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "s", "s", -948495851, null))))].join(""));
  }
  var vec__24758 = taoensso.encore.sub_indexes.call(null, s, start_idx, new cljs.core.Keyword(null, "max-len", "max-len", -18846016), _QMARK_max_len);
  var start_idx_STAR_ = cljs.core.nth.call(null, vec__24758, 0, null);
  var end_idx_STAR_ = cljs.core.nth.call(null, vec__24758, 1, null);
  return s.substring(start_idx_STAR_, end_idx_STAR_);
};
taoensso.encore.substr.cljs$lang$maxFixedArity = 2;
taoensso.encore.substr.cljs$lang$applyTo = function(seq24752) {
  var G__24753 = cljs.core.first.call(null, seq24752);
  var seq24752__$1 = cljs.core.next.call(null, seq24752);
  var G__24754 = cljs.core.first.call(null, seq24752__$1);
  var seq24752__$2 = cljs.core.next.call(null, seq24752__$1);
  return taoensso.encore.substr.cljs$core$IFn$_invoke$arity$variadic(G__24753, G__24754, seq24752__$2);
};
taoensso.encore.str_contains_QMARK_ = function taoensso$encore$str_contains_QMARK_(s, substr) {
  return cljs.core.not_EQ_.call(null, -1, s.indexOf(substr));
};
taoensso.encore.str_starts_with_QMARK_ = function taoensso$encore$str_starts_with_QMARK_(s, substr) {
  return s.indexOf(substr) === 0;
};
taoensso.encore.str_ends_with_QMARK_ = function taoensso$encore$str_ends_with_QMARK_(s, substr) {
  var s_len = s.length;
  var substr_len = substr.length;
  if (s_len >= substr_len) {
    return cljs.core.not_EQ_.call(null, -1, s.indexOf(substr, s_len - substr_len));
  } else {
    return null;
  }
};
taoensso.encore.str__QMARK_index = function taoensso$encore$str__QMARK_index(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24767 = arguments.length;
  var i__5744__auto___24768 = 0;
  while (true) {
    if (i__5744__auto___24768 < len__5743__auto___24767) {
      args__5750__auto__.push(arguments[i__5744__auto___24768]);
      var G__24769 = i__5744__auto___24768 + 1;
      i__5744__auto___24768 = G__24769;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$variadic = function(s, substr, p__24765) {
  var vec__24766 = p__24765;
  var start_idx = cljs.core.nth.call(null, vec__24766, 0, null);
  var last_QMARK_ = cljs.core.nth.call(null, vec__24766, 1, null);
  var start_idx__$1 = function() {
    var or__4685__auto__ = start_idx;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return 0;
    }
  }() | 0;
  var result = (cljs.core.truth_(last_QMARK_) ? s.lastIndexOf(substr, start_idx__$1) : s.indexOf(substr, start_idx__$1)) | 0;
  if (cljs.core.not_EQ_.call(null, result, -1)) {
    return result;
  } else {
    return null;
  }
};
taoensso.encore.str__QMARK_index.cljs$lang$maxFixedArity = 2;
taoensso.encore.str__QMARK_index.cljs$lang$applyTo = function(seq24762) {
  var G__24763 = cljs.core.first.call(null, seq24762);
  var seq24762__$1 = cljs.core.next.call(null, seq24762);
  var G__24764 = cljs.core.first.call(null, seq24762__$1);
  var seq24762__$2 = cljs.core.next.call(null, seq24762__$1);
  return taoensso.encore.str__QMARK_index.cljs$core$IFn$_invoke$arity$variadic(G__24763, G__24764, seq24762__$2);
};
taoensso.encore.join_once = function taoensso$encore$join_once(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24772 = arguments.length;
  var i__5744__auto___24773 = 0;
  while (true) {
    if (i__5744__auto___24773 < len__5743__auto___24772) {
      args__5750__auto__.push(arguments[i__5744__auto___24773]);
      var G__24774 = i__5744__auto___24773 + 1;
      i__5744__auto___24773 = G__24774;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic = function(separator, coll) {
  return cljs.core.reduce.call(null, function(s1, s2) {
    var s1__$1 = [cljs.core.str(s1)].join("");
    var s2__$1 = [cljs.core.str(s2)].join("");
    if (cljs.core.truth_(taoensso.encore.str_ends_with_QMARK_.call(null, s1__$1, separator))) {
      if (cljs.core.truth_(taoensso.encore.str_starts_with_QMARK_.call(null, s2__$1, separator))) {
        return [cljs.core.str(s1__$1), cljs.core.str(s2__$1.substring(1))].join("");
      } else {
        return [cljs.core.str(s1__$1), cljs.core.str(s2__$1)].join("");
      }
    } else {
      if (cljs.core.truth_(taoensso.encore.str_starts_with_QMARK_.call(null, s2__$1, separator))) {
        return [cljs.core.str(s1__$1), cljs.core.str(s2__$1)].join("");
      } else {
        if (cljs.core._EQ_.call(null, s1__$1, "") || cljs.core._EQ_.call(null, s2__$1, "")) {
          return [cljs.core.str(s1__$1), cljs.core.str(s2__$1)].join("");
        } else {
          return [cljs.core.str(s1__$1), cljs.core.str(separator), cljs.core.str(s2__$1)].join("");
        }
      }
    }
  }, null, coll);
};
taoensso.encore.join_once.cljs$lang$maxFixedArity = 1;
taoensso.encore.join_once.cljs$lang$applyTo = function(seq24770) {
  var G__24771 = cljs.core.first.call(null, seq24770);
  var seq24770__$1 = cljs.core.next.call(null, seq24770);
  return taoensso.encore.join_once.cljs$core$IFn$_invoke$arity$variadic(G__24771, seq24770__$1);
};
taoensso.encore.path = function taoensso$encore$path(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24776 = arguments.length;
  var i__5744__auto___24777 = 0;
  while (true) {
    if (i__5744__auto___24777 < len__5743__auto___24776) {
      args__5750__auto__.push(arguments[i__5744__auto___24777]);
      var G__24778 = i__5744__auto___24777 + 1;
      i__5744__auto___24777 = G__24778;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic = function(parts) {
  return cljs.core.apply.call(null, taoensso.encore.join_once, "/", parts);
};
taoensso.encore.path.cljs$lang$maxFixedArity = 0;
taoensso.encore.path.cljs$lang$applyTo = function(seq24775) {
  return taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24775));
};
taoensso.encore.norm_word_breaks = function taoensso$encore$norm_word_breaks(s) {
  return clojure.string.replace.call(null, [cljs.core.str(s)].join(""), /\s+/, " ");
};
taoensso.encore.count_words = function taoensso$encore$count_words(s) {
  if (clojure.string.blank_QMARK_.call(null, s)) {
    return 0;
  } else {
    return cljs.core.count.call(null, clojure.string.split.call(null, s, /\s+/));
  }
};
taoensso.encore.uuid_str = function taoensso$encore$uuid_str(var_args) {
  var args24779 = [];
  var len__5743__auto___24782 = arguments.length;
  var i__5744__auto___24783 = 0;
  while (true) {
    if (i__5744__auto___24783 < len__5743__auto___24782) {
      args24779.push(arguments[i__5744__auto___24783]);
      var G__24784 = i__5744__auto___24783 + 1;
      i__5744__auto___24783 = G__24784;
      continue;
    } else {
    }
    break;
  }
  var G__24781 = args24779.length;
  switch(G__24781) {
    case 1:
      return taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 0:
      return taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24779.length)].join(""));;
  }
};
taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1 = function(max_length) {
  return taoensso.encore.substr.call(null, taoensso.encore.uuid_str.call(null), 0, max_length);
};
taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0 = function() {
  var hex = function() {
    return cljs.core.rand_int.call(null, 16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int.call(null, 16)).toString(16);
  return [cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), 
  cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str("-"), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), cljs.core.str(hex.call(null)), 
  cljs.core.str(hex.call(null))].join("");
};
taoensso.encore.uuid_str.cljs$lang$maxFixedArity = 1;
taoensso.encore.try_pred = function taoensso$encore$try_pred(pred, x) {
  try {
    return pred.call(null, x);
  } catch (e24787) {
    if (e24787 instanceof Error) {
      var _ = e24787;
      return false;
    } else {
      throw e24787;
    }
  }
};
taoensso.encore.is_BANG_ = function taoensso$encore$is_BANG_(var_args) {
  var args24788 = [];
  var len__5743__auto___24791 = arguments.length;
  var i__5744__auto___24792 = 0;
  while (true) {
    if (i__5744__auto___24792 < len__5743__auto___24791) {
      args24788.push(arguments[i__5744__auto___24792]);
      var G__24793 = i__5744__auto___24792 + 1;
      i__5744__auto___24792 = G__24793;
      continue;
    } else {
    }
    break;
  }
  var G__24790 = args24788.length;
  switch(G__24790) {
    case 1:
      return taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24788.length)].join(""));;
  }
};
taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (cljs.core.truth_(x)) {
    return x;
  } else {
    return taoensso.encore.is_BANG_.call(null, cljs.core.identity, x);
  }
};
taoensso.encore.is_BANG_.cljs$core$IFn$_invoke$arity$2 = function(pred, x) {
  if (cljs.core.truth_(taoensso.encore.try_pred.call(null, pred, x))) {
    return x;
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("`is!` "), cljs.core.str([cljs.core.str(pred)].join("")), cljs.core.str(" failure against arg: "), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arg", "arg", -1747261837), x, new cljs.core.Keyword(null, "arg-type", "arg-type", -2020167363), cljs.core.type.call(null, x)], null));
  }
};
taoensso.encore.is_BANG_.cljs$lang$maxFixedArity = 2;
taoensso.encore.when_QMARK_ = function taoensso$encore$when_QMARK_(pred, x) {
  if (cljs.core.truth_(taoensso.encore.try_pred.call(null, pred, x))) {
    return x;
  } else {
    return null;
  }
};
taoensso.encore.gc_rate = 1 / 16E3;
taoensso.encore.gc_now_QMARK_ = function taoensso$encore$gc_now_QMARK_() {
  return cljs.core.rand.call(null) <= taoensso.encore.gc_rate;
};
taoensso.encore.swap_val_BANG_ = function taoensso$encore$swap_val_BANG_(atom_, k, f) {
  while (true) {
    var old_m = cljs.core.deref.call(null, atom_);
    var new_v = f.call(null, cljs.core.get.call(null, old_m, k));
    var new_m = cljs.core.assoc.call(null, old_m, k, new_v);
    if (cljs.core.truth_(taoensso.encore.platform_cas_BANG_.call(null, atom_, old_m, new_m))) {
      return new_v;
    } else {
      continue;
    }
    break;
  }
};
taoensso.encore.memoize_ = function taoensso$encore$memoize_(f) {
  var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(cache_) {
    return function() {
      var G__24795__delegate = function(args) {
        return cljs.core.deref.call(null, function() {
          var or__4685__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), args);
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return taoensso.encore.swap_val_BANG_.call(null, cache_, args, function(or__4685__auto__, cache_) {
              return function(_QMARK_dv) {
                if (cljs.core.truth_(_QMARK_dv)) {
                  return _QMARK_dv;
                } else {
                  return new cljs.core.Delay(function(or__4685__auto__, cache_) {
                    return function() {
                      return cljs.core.apply.call(null, f, args);
                    };
                  }(or__4685__auto__, cache_), null);
                }
              };
            }(or__4685__auto__, cache_));
          }
        }());
      };
      var G__24795 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__24796__i = 0, G__24796__a = new Array(arguments.length - 0);
          while (G__24796__i < G__24796__a.length) {
            G__24796__a[G__24796__i] = arguments[G__24796__i + 0];
            ++G__24796__i;
          }
          args = new cljs.core.IndexedSeq(G__24796__a, 0);
        }
        return G__24795__delegate.call(this, args);
      };
      G__24795.cljs$lang$maxFixedArity = 0;
      G__24795.cljs$lang$applyTo = function(arglist__24797) {
        var args = cljs.core.seq(arglist__24797);
        return G__24795__delegate(args);
      };
      G__24795.cljs$core$IFn$_invoke$arity$variadic = G__24795__delegate;
      return G__24795;
    }();
  }(cache_);
};
taoensso.encore.memoize_a0_ = function taoensso$encore$memoize_a0_(f) {
  var cache_ = cljs.core.atom.call(null, null);
  return function(cache_) {
    return function() {
      return cljs.core.deref.call(null, function() {
        var or__4685__auto__ = cljs.core.deref.call(null, cache_);
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return cljs.core.swap_BANG_.call(null, cache_, function(or__4685__auto__, cache_) {
            return function(_QMARK_dv) {
              if (cljs.core.truth_(_QMARK_dv)) {
                return _QMARK_dv;
              } else {
                return new cljs.core.Delay(function(or__4685__auto__, cache_) {
                  return function() {
                    return f.call(null);
                  };
                }(or__4685__auto__, cache_), null);
              }
            };
          }(or__4685__auto__, cache_));
        }
      }());
    };
  }(cache_);
};
taoensso.encore.memoize_a1_ = function taoensso$encore$memoize_a1_(f) {
  var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(cache_) {
    return function() {
      var G__24798 = null;
      var G__24798__0 = function() {
        return cljs.core.deref.call(null, function() {
          var or__4685__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), taoensso.encore.sentinel);
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return taoensso.encore.swap_val_BANG_.call(null, cache_, taoensso.encore.sentinel, function(or__4685__auto__, cache_) {
              return function(_QMARK_dv) {
                if (cljs.core.truth_(_QMARK_dv)) {
                  return _QMARK_dv;
                } else {
                  return new cljs.core.Delay(function(or__4685__auto__, cache_) {
                    return function() {
                      return f.call(null);
                    };
                  }(or__4685__auto__, cache_), null);
                }
              };
            }(or__4685__auto__, cache_));
          }
        }());
      };
      var G__24798__1 = function(x) {
        return cljs.core.deref.call(null, function() {
          var or__4685__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), x);
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return taoensso.encore.swap_val_BANG_.call(null, cache_, x, function(or__4685__auto__, cache_) {
              return function(_QMARK_dv) {
                if (cljs.core.truth_(_QMARK_dv)) {
                  return _QMARK_dv;
                } else {
                  return new cljs.core.Delay(function(or__4685__auto__, cache_) {
                    return function() {
                      return f.call(null, x);
                    };
                  }(or__4685__auto__, cache_), null);
                }
              };
            }(or__4685__auto__, cache_));
          }
        }());
      };
      G__24798 = function(x) {
        switch(arguments.length) {
          case 0:
            return G__24798__0.call(this);
          case 1:
            return G__24798__1.call(this, x);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24798.cljs$core$IFn$_invoke$arity$0 = G__24798__0;
      G__24798.cljs$core$IFn$_invoke$arity$1 = G__24798__1;
      return G__24798;
    }();
  }(cache_);
};
taoensso.encore.memoize1 = function taoensso$encore$memoize1(f) {
  var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(cache_) {
    return function() {
      var G__24799__delegate = function(args) {
        return cljs.core.deref.call(null, function() {
          var or__4685__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), args);
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, cache_, function(or__4685__auto__, cache_) {
              return function(cache) {
                if (cljs.core.truth_(cljs.core.get.call(null, cache, args))) {
                  return cache;
                } else {
                  return cljs.core.PersistentArrayMap.fromArray([args, new cljs.core.Delay(function(or__4685__auto__, cache_) {
                    return function() {
                      return cljs.core.apply.call(null, f, args);
                    };
                  }(or__4685__auto__, cache_), null)], true, false);
                }
              };
            }(or__4685__auto__, cache_)), args);
          }
        }());
      };
      var G__24799 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__24800__i = 0, G__24800__a = new Array(arguments.length - 0);
          while (G__24800__i < G__24800__a.length) {
            G__24800__a[G__24800__i] = arguments[G__24800__i + 0];
            ++G__24800__i;
          }
          args = new cljs.core.IndexedSeq(G__24800__a, 0);
        }
        return G__24799__delegate.call(this, args);
      };
      G__24799.cljs$lang$maxFixedArity = 0;
      G__24799.cljs$lang$applyTo = function(arglist__24801) {
        var args = cljs.core.seq(arglist__24801);
        return G__24799__delegate(args);
      };
      G__24799.cljs$core$IFn$_invoke$arity$variadic = G__24799__delegate;
      return G__24799;
    }();
  }(cache_);
};
taoensso.encore.memoized = function taoensso$encore$memoized(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24805 = arguments.length;
  var i__5744__auto___24806 = 0;
  while (true) {
    if (i__5744__auto___24806 < len__5743__auto___24805) {
      args__5750__auto__.push(arguments[i__5744__auto___24806]);
      var G__24807 = i__5744__auto___24806 + 1;
      i__5744__auto___24806 = G__24807;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic = function(cache, f, args) {
  if (cljs.core.not.call(null, cache)) {
    return cljs.core.apply.call(null, f, args);
  } else {
    return cljs.core.deref.call(null, taoensso.encore.swap_val_BANG_.call(null, cache, args, function(_QMARK_dv) {
      if (cljs.core.truth_(_QMARK_dv)) {
        return _QMARK_dv;
      } else {
        return new cljs.core.Delay(function() {
          return cljs.core.apply.call(null, f, args);
        }, null);
      }
    }));
  }
};
taoensso.encore.memoized.cljs$lang$maxFixedArity = 2;
taoensso.encore.memoized.cljs$lang$applyTo = function(seq24802) {
  var G__24803 = cljs.core.first.call(null, seq24802);
  var seq24802__$1 = cljs.core.next.call(null, seq24802);
  var G__24804 = cljs.core.first.call(null, seq24802__$1);
  var seq24802__$2 = cljs.core.next.call(null, seq24802__$1);
  return taoensso.encore.memoized.cljs$core$IFn$_invoke$arity$variadic(G__24803, G__24804, seq24802__$2);
};
taoensso.encore.memoize_STAR_ = function taoensso$encore$memoize_STAR_(var_args) {
  var args24808 = [];
  var len__5743__auto___24831 = arguments.length;
  var i__5744__auto___24832 = 0;
  while (true) {
    if (i__5744__auto___24832 < len__5743__auto___24831) {
      args24808.push(arguments[i__5744__auto___24832]);
      var G__24833 = i__5744__auto___24832 + 1;
      i__5744__auto___24832 = G__24833;
      continue;
    } else {
    }
    break;
  }
  var G__24810 = args24808.length;
  switch(G__24810) {
    case 1:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24808.length)].join(""));;
  }
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$1 = function(f) {
  var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(cache_) {
    return function() {
      var G__24835__delegate = function(p__24811) {
        var vec__24812 = p__24811;
        var arg1 = cljs.core.nth.call(null, vec__24812, 0, null);
        var argn = cljs.core.nthnext.call(null, vec__24812, 1);
        var args = vec__24812;
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "debug", "mem/debug", -1608833359)))) {
          return cache_;
        } else {
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, argn), new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
              cljs.core.reset_BANG_.call(null, cache_, cljs.core.PersistentArrayMap.EMPTY);
            } else {
              cljs.core.swap_BANG_.call(null, cache_, cljs.core.dissoc, argn);
            }
            return null;
          } else {
            var fresh_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133));
            var args__$1 = cljs.core.truth_(fresh_QMARK_) ? argn : args;
            return cljs.core.deref.call(null, function() {
              var or__4685__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, cache_), args__$1);
              if (cljs.core.truth_(or__4685__auto__)) {
                return or__4685__auto__;
              } else {
                return taoensso.encore.swap_val_BANG_.call(null, cache_, args__$1, function(or__4685__auto__, fresh_QMARK_, args__$1, vec__24812, arg1, argn, args, cache_) {
                  return function(_QMARK_dv) {
                    if (cljs.core.truth_(function() {
                      var and__4673__auto__ = _QMARK_dv;
                      if (cljs.core.truth_(and__4673__auto__)) {
                        return cljs.core.not.call(null, fresh_QMARK_);
                      } else {
                        return and__4673__auto__;
                      }
                    }())) {
                      return _QMARK_dv;
                    } else {
                      return new cljs.core.Delay(function(or__4685__auto__, fresh_QMARK_, args__$1, vec__24812, arg1, argn, args, cache_) {
                        return function() {
                          return cljs.core.apply.call(null, f, args__$1);
                        };
                      }(or__4685__auto__, fresh_QMARK_, args__$1, vec__24812, arg1, argn, args, cache_), null);
                    }
                  };
                }(or__4685__auto__, fresh_QMARK_, args__$1, vec__24812, arg1, argn, args, cache_));
              }
            }());
          }
        }
      };
      var G__24835 = function(var_args) {
        var p__24811 = null;
        if (arguments.length > 0) {
          var G__24836__i = 0, G__24836__a = new Array(arguments.length - 0);
          while (G__24836__i < G__24836__a.length) {
            G__24836__a[G__24836__i] = arguments[G__24836__i + 0];
            ++G__24836__i;
          }
          p__24811 = new cljs.core.IndexedSeq(G__24836__a, 0);
        }
        return G__24835__delegate.call(this, p__24811);
      };
      G__24835.cljs$lang$maxFixedArity = 0;
      G__24835.cljs$lang$applyTo = function(arglist__24837) {
        var p__24811 = cljs.core.seq(arglist__24837);
        return G__24835__delegate(p__24811);
      };
      G__24835.cljs$core$IFn$_invoke$arity$variadic = G__24835__delegate;
      return G__24835;
    }();
  }(cache_);
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$2 = function(ttl_ms, f) {
  var __x_24838 = ttl_ms;
  try {
    if (cljs.core.truth_(taoensso.encore.pos_int_QMARK_.call(null, __x_24838))) {
    } else {
      taoensso.truss.impl._invar_violation_BANG_.call(null);
    }
  } catch (e24813) {
    if (e24813 instanceof Error) {
      var __t_24839 = e24813;
      taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(pos-int? ttl-ms)", __x_24838, __t_24839, null);
    } else {
      throw e24813;
    }
  }
  var cache_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var gc_running_QMARK__ = cljs.core.atom.call(null, false);
  var ttl_ms__$1 = cljs.core.long$.call(null, ttl_ms);
  var gc_fn = function(cache_, gc_running_QMARK__, ttl_ms__$1) {
    return function() {
      if (cljs.core.truth_(function() {
        var and__4673__auto__ = taoensso.encore.gc_now_QMARK_.call(null);
        if (cljs.core.truth_(and__4673__auto__)) {
          return taoensso.encore.swap_in_BANG_.call(null, gc_running_QMARK__, cljs.core.PersistentVector.EMPTY, function(and__4673__auto__, cache_, gc_running_QMARK__, ttl_ms__$1) {
            return function(b) {
              return taoensso.encore.swapped.call(null, true, cljs.core.not.call(null, b));
            };
          }(and__4673__auto__, cache_, gc_running_QMARK__, ttl_ms__$1));
        } else {
          return and__4673__auto__;
        }
      }())) {
        var instant = taoensso.encore.now_udt.call(null);
        var snapshot = cljs.core.deref.call(null, cache_);
        var ks_to_gc = cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(instant, snapshot, cache_, gc_running_QMARK__, ttl_ms__$1) {
          return function(acc, k, p__24814) {
            var vec__24815 = p__24814;
            var dv = cljs.core.nth.call(null, vec__24815, 0, null);
            var udt = cljs.core.nth.call(null, vec__24815, 1, null);
            var cv = vec__24815;
            if (instant - udt > ttl_ms__$1) {
              return cljs.core.conj_BANG_.call(null, acc, k);
            } else {
              return acc;
            }
          };
        }(instant, snapshot, cache_, gc_running_QMARK__, ttl_ms__$1), cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), snapshot));
        cljs.core.swap_BANG_.call(null, cache_, function(instant, snapshot, ks_to_gc, cache_, gc_running_QMARK__, ttl_ms__$1) {
          return function(m) {
            return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(instant, snapshot, ks_to_gc, cache_, gc_running_QMARK__, ttl_ms__$1) {
              return function(acc, in$) {
                return cljs.core.dissoc_BANG_.call(null, acc, in$);
              };
            }(instant, snapshot, ks_to_gc, cache_, gc_running_QMARK__, ttl_ms__$1), cljs.core.transient$.call(null, m), ks_to_gc));
          };
        }(instant, snapshot, ks_to_gc, cache_, gc_running_QMARK__, ttl_ms__$1));
        return cljs.core.reset_BANG_.call(null, gc_running_QMARK__, false);
      } else {
        return null;
      }
    };
  }(cache_, gc_running_QMARK__, ttl_ms__$1);
  return function(cache_, gc_running_QMARK__, ttl_ms__$1, gc_fn) {
    return function() {
      var G__24840__delegate = function(p__24816) {
        var vec__24817 = p__24816;
        var arg1 = cljs.core.nth.call(null, vec__24817, 0, null);
        var argn = cljs.core.nthnext.call(null, vec__24817, 1);
        var args = vec__24817;
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "debug", "mem/debug", -1608833359)))) {
          return cache_;
        } else {
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, argn), new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
              cljs.core.reset_BANG_.call(null, cache_, cljs.core.PersistentArrayMap.EMPTY);
            } else {
              cljs.core.swap_BANG_.call(null, cache_, cljs.core.dissoc, argn);
            }
            return null;
          } else {
            gc_fn.call(null);
            var fresh_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133));
            var args__$1 = cljs.core.truth_(fresh_QMARK_) ? argn : args;
            var instant = taoensso.encore.now_udt.call(null);
            var vec__24818 = taoensso.encore.swap_val_BANG_.call(null, cache_, args__$1, function(fresh_QMARK_, args__$1, instant, vec__24817, arg1, argn, args, cache_, gc_running_QMARK__, ttl_ms__$1, gc_fn) {
              return function(_QMARK_cv) {
                if (cljs.core.truth_(function() {
                  var and__4673__auto__ = _QMARK_cv;
                  if (cljs.core.truth_(and__4673__auto__)) {
                    var and__4673__auto____$1 = cljs.core.not.call(null, fresh_QMARK_);
                    if (and__4673__auto____$1) {
                      var vec__24820 = _QMARK_cv;
                      var _dv = cljs.core.nth.call(null, vec__24820, 0, null);
                      var udt = cljs.core.nth.call(null, vec__24820, 1, null);
                      return instant - udt < ttl_ms__$1;
                    } else {
                      return and__4673__auto____$1;
                    }
                  } else {
                    return and__4673__auto__;
                  }
                }())) {
                  return _QMARK_cv;
                } else {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Delay(function(fresh_QMARK_, args__$1, instant, vec__24817, arg1, argn, args, cache_, gc_running_QMARK__, ttl_ms__$1, gc_fn) {
                    return function() {
                      return cljs.core.apply.call(null, f, args__$1);
                    };
                  }(fresh_QMARK_, args__$1, instant, vec__24817, arg1, argn, args, cache_, gc_running_QMARK__, ttl_ms__$1, gc_fn), null), instant], null);
                }
              };
            }(fresh_QMARK_, args__$1, instant, vec__24817, arg1, argn, args, cache_, gc_running_QMARK__, ttl_ms__$1, gc_fn));
            var dv = cljs.core.nth.call(null, vec__24818, 0, null);
            return cljs.core.deref.call(null, dv);
          }
        }
      };
      var G__24840 = function(var_args) {
        var p__24816 = null;
        if (arguments.length > 0) {
          var G__24841__i = 0, G__24841__a = new Array(arguments.length - 0);
          while (G__24841__i < G__24841__a.length) {
            G__24841__a[G__24841__i] = arguments[G__24841__i + 0];
            ++G__24841__i;
          }
          p__24816 = new cljs.core.IndexedSeq(G__24841__a, 0);
        }
        return G__24840__delegate.call(this, p__24816);
      };
      G__24840.cljs$lang$maxFixedArity = 0;
      G__24840.cljs$lang$applyTo = function(arglist__24842) {
        var p__24816 = cljs.core.seq(arglist__24842);
        return G__24840__delegate(p__24816);
      };
      G__24840.cljs$core$IFn$_invoke$arity$variadic = G__24840__delegate;
      return G__24840;
    }();
  }(cache_, gc_running_QMARK__, ttl_ms__$1, gc_fn);
};
taoensso.encore.memoize_STAR_.cljs$core$IFn$_invoke$arity$3 = function(cache_size, ttl_ms, f) {
  var __x_24843 = ttl_ms;
  if (cljs.core.truth_(function(__x_24843) {
    return function(__x__$1) {
      var or__4685__auto__ = taoensso.truss.impl.non_throwing.call(null, cljs.core.nil_QMARK_).call(null, __x__$1);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return taoensso.truss.impl.non_throwing.call(null, taoensso.encore.pos_int_QMARK_).call(null, __x__$1);
      }
    };
  }(__x_24843).call(null, __x_24843))) {
  } else {
    taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "([:or nil? pos-int?] ttl-ms)", __x_24843, null, null);
  }
  var __x_24844 = cache_size;
  try {
    if (cljs.core.truth_(taoensso.encore.pos_int_QMARK_.call(null, __x_24844))) {
    } else {
      taoensso.truss.impl._invar_violation_BANG_.call(null);
    }
  } catch (e24821) {
    if (e24821 instanceof Error) {
      var __t_24845 = e24821;
      taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(pos-int? cache-size)", __x_24844, __t_24845, null);
    } else {
      throw e24821;
    }
  }
  var state_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tick", "tick", -835886976), 0], null));
  var gc_running_QMARK__ = cljs.core.atom.call(null, false);
  var ttl_ms_QMARK_ = !(ttl_ms == null);
  var ttl_ms__$1 = cljs.core.long$.call(null, function() {
    var or__4685__auto__ = ttl_ms;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return 0;
    }
  }());
  var cache_size__$1 = cljs.core.long$.call(null, cache_size);
  var gc_fn = function(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1) {
    return function() {
      if (cljs.core.truth_(function() {
        var and__4673__auto__ = taoensso.encore.gc_now_QMARK_.call(null);
        if (cljs.core.truth_(and__4673__auto__)) {
          return taoensso.encore.swap_in_BANG_.call(null, gc_running_QMARK__, cljs.core.PersistentVector.EMPTY, function(and__4673__auto__, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1) {
            return function(b) {
              return taoensso.encore.swapped.call(null, true, cljs.core.not.call(null, b));
            };
          }(and__4673__auto__, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1));
        } else {
          return and__4673__auto__;
        }
      }())) {
        var instant = taoensso.encore.now_udt.call(null);
        if (ttl_ms_QMARK_) {
          var snapshot_24846 = cljs.core.dissoc.call(null, cljs.core.deref.call(null, state_), new cljs.core.Keyword(null, "tick", "tick", -835886976));
          var ks_to_gc_24847 = cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(snapshot_24846, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1) {
            return function(acc, k, p__24822) {
              var vec__24823 = p__24822;
              var dv = cljs.core.nth.call(null, vec__24823, 0, null);
              var udt = cljs.core.nth.call(null, vec__24823, 1, null);
              var _ = cljs.core.nth.call(null, vec__24823, 2, null);
              var ___$1 = cljs.core.nth.call(null, vec__24823, 3, null);
              var cv = vec__24823;
              if (instant - udt > ttl_ms__$1) {
                return cljs.core.conj_BANG_.call(null, acc, k);
              } else {
                return acc;
              }
            };
          }(snapshot_24846, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1), cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), snapshot_24846));
          cljs.core.swap_BANG_.call(null, state_, function(snapshot_24846, ks_to_gc_24847, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1) {
            return function(m) {
              return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(snapshot_24846, ks_to_gc_24847, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1) {
                return function(acc, in$) {
                  return cljs.core.dissoc_BANG_.call(null, acc, in$);
                };
              }(snapshot_24846, ks_to_gc_24847, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1), cljs.core.transient$.call(null, m), ks_to_gc_24847));
            };
          }(snapshot_24846, ks_to_gc_24847, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1));
        } else {
        }
        var snapshot_24848 = cljs.core.dissoc.call(null, cljs.core.deref.call(null, state_), new cljs.core.Keyword(null, "tick", "tick", -835886976));
        var n_to_gc_24849 = cljs.core.count.call(null, snapshot_24848) - cache_size__$1;
        if (n_to_gc_24849 > 64) {
          var ks_to_gc_24850 = taoensso.encore.top.call(null, n_to_gc_24849, function(snapshot_24848, n_to_gc_24849, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1) {
            return function(k) {
              var vec__24824 = snapshot_24848.call(null, k);
              var _ = cljs.core.nth.call(null, vec__24824, 0, null);
              var ___$1 = cljs.core.nth.call(null, vec__24824, 1, null);
              var tick_lru = cljs.core.nth.call(null, vec__24824, 2, null);
              var tick_lfu = cljs.core.nth.call(null, vec__24824, 3, null);
              return tick_lru + tick_lfu;
            };
          }(snapshot_24848, n_to_gc_24849, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1), cljs.core.keys.call(null, snapshot_24848));
          cljs.core.swap_BANG_.call(null, state_, function(ks_to_gc_24850, snapshot_24848, n_to_gc_24849, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1) {
            return function(m) {
              return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ks_to_gc_24850, snapshot_24848, n_to_gc_24849, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1) {
                return function(acc, in$) {
                  return cljs.core.dissoc_BANG_.call(null, acc, in$);
                };
              }(ks_to_gc_24850, snapshot_24848, n_to_gc_24849, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1), cljs.core.transient$.call(null, m), ks_to_gc_24850));
            };
          }(ks_to_gc_24850, snapshot_24848, n_to_gc_24849, instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1));
        } else {
        }
        return cljs.core.reset_BANG_.call(null, gc_running_QMARK__, false);
      } else {
        return null;
      }
    };
  }(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1);
  var cv_fn = !ttl_ms_QMARK_ ? function(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn) {
    return function(args, fresh_QMARK_, tick) {
      return taoensso.encore.swap_val_BANG_.call(null, state_, args, function(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn) {
        return function(_QMARK_cv) {
          if (cljs.core.truth_(function() {
            var and__4673__auto__ = _QMARK_cv;
            if (cljs.core.truth_(and__4673__auto__)) {
              return cljs.core.not.call(null, fresh_QMARK_);
            } else {
              return and__4673__auto__;
            }
          }())) {
            return _QMARK_cv;
          } else {
            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Delay(function(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn) {
              return function() {
                return cljs.core.apply.call(null, f, args);
              };
            }(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn), null), null, tick, 1], null);
          }
        };
      }(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn));
    };
  }(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn) : function(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn) {
    return function(args, fresh_QMARK_, tick) {
      var instant = taoensso.encore.now_udt.call(null);
      return taoensso.encore.swap_val_BANG_.call(null, state_, args, function(instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn) {
        return function(_QMARK_cv) {
          if (cljs.core.truth_(function() {
            var and__4673__auto__ = _QMARK_cv;
            if (cljs.core.truth_(and__4673__auto__)) {
              var and__4673__auto____$1 = cljs.core.not.call(null, fresh_QMARK_);
              if (and__4673__auto____$1) {
                var vec__24826 = _QMARK_cv;
                var _dv = cljs.core.nth.call(null, vec__24826, 0, null);
                var udt = cljs.core.nth.call(null, vec__24826, 1, null);
                return instant - udt < ttl_ms__$1;
              } else {
                return and__4673__auto____$1;
              }
            } else {
              return and__4673__auto__;
            }
          }())) {
            return _QMARK_cv;
          } else {
            return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Delay(function(instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn) {
              return function() {
                return cljs.core.apply.call(null, f, args);
              };
            }(instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn), null), instant, tick, 1], null);
          }
        };
      }(instant, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn));
    };
  }(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn);
  return function(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn, cv_fn) {
    return function() {
      var G__24851__delegate = function(p__24827) {
        var vec__24828 = p__24827;
        var arg1 = cljs.core.nth.call(null, vec__24828, 0, null);
        var argn = cljs.core.nthnext.call(null, vec__24828, 1);
        var args = vec__24828;
        if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "debug", "mem/debug", -1608833359)))) {
          return state_;
        } else {
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "del", "mem/del", 574870667)))) {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, cljs.core.first.call(null, argn), new cljs.core.Keyword("mem", "all", "mem/all", 892075139)))) {
              cljs.core.reset_BANG_.call(null, state_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tick", "tick", -835886976), 0], null));
            } else {
              cljs.core.swap_BANG_.call(null, state_, cljs.core.dissoc, argn);
            }
            return null;
          } else {
            gc_fn.call(null);
            var fresh_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, arg1, new cljs.core.Keyword("mem", "fresh", "mem/fresh", -1179989133));
            var args__$1 = cljs.core.truth_(fresh_QMARK_) ? argn : args;
            var tick = (new cljs.core.Keyword(null, "tick", "tick", -835886976)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, state_));
            var vec__24829 = cv_fn.call(null, args__$1, fresh_QMARK_, tick);
            var dv = cljs.core.nth.call(null, vec__24829, 0, null);
            cljs.core.swap_BANG_.call(null, state_, function(fresh_QMARK_, args__$1, tick, vec__24829, dv, vec__24828, arg1, argn, args, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn, cv_fn) {
              return function(m) {
                var temp__4655__auto__ = cljs.core.get.call(null, m, args__$1);
                if (cljs.core.truth_(temp__4655__auto__)) {
                  var vec__24830 = temp__4655__auto__;
                  var dv__$1 = cljs.core.nth.call(null, vec__24830, 0, null);
                  var _QMARK_udt = cljs.core.nth.call(null, vec__24830, 1, null);
                  var tick_lru = cljs.core.nth.call(null, vec__24830, 2, null);
                  var tick_lfu = cljs.core.nth.call(null, vec__24830, 3, null);
                  var cv = vec__24830;
                  return cljs.core.merge.call(null, m, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "tick", "tick", -835886976), tick + 1, args__$1, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [dv__$1, _QMARK_udt, tick, tick_lfu + 1], null)], true, false));
                } else {
                  return cljs.core.merge.call(null, m, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tick", "tick", -835886976), tick + 1], null));
                }
              };
            }(fresh_QMARK_, args__$1, tick, vec__24829, dv, vec__24828, arg1, argn, args, state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn, cv_fn));
            return cljs.core.deref.call(null, dv);
          }
        }
      };
      var G__24851 = function(var_args) {
        var p__24827 = null;
        if (arguments.length > 0) {
          var G__24852__i = 0, G__24852__a = new Array(arguments.length - 0);
          while (G__24852__i < G__24852__a.length) {
            G__24852__a[G__24852__i] = arguments[G__24852__i + 0];
            ++G__24852__i;
          }
          p__24827 = new cljs.core.IndexedSeq(G__24852__a, 0);
        }
        return G__24851__delegate.call(this, p__24827);
      };
      G__24851.cljs$lang$maxFixedArity = 0;
      G__24851.cljs$lang$applyTo = function(arglist__24853) {
        var p__24827 = cljs.core.seq(arglist__24853);
        return G__24851__delegate(p__24827);
      };
      G__24851.cljs$core$IFn$_invoke$arity$variadic = G__24851__delegate;
      return G__24851;
    }();
  }(state_, gc_running_QMARK__, ttl_ms_QMARK_, ttl_ms__$1, cache_size__$1, gc_fn, cv_fn);
};
taoensso.encore.memoize_STAR_.cljs$lang$maxFixedArity = 3;
taoensso.encore.rate_limiter_STAR_ = function taoensso$encore$rate_limiter_STAR_(specs) {
  if (cljs.core.empty_QMARK_.call(null, specs)) {
    return cljs.core.constantly.call(null, null);
  } else {
    var vspecs = cljs.core.vec.call(null, specs);
    var vstates_ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var max_win_ms = cljs.core.long$.call(null, cljs.core.reduce.call(null, cljs.core.max, 0, cljs.core.mapv.call(null, function(vspecs, vstates_) {
      return function(p__24889) {
        var vec__24890 = p__24889;
        var _ = cljs.core.nth.call(null, vec__24890, 0, null);
        var win_ms = cljs.core.nth.call(null, vec__24890, 1, null);
        var ___$1 = cljs.core.nth.call(null, vec__24890, 2, null);
        var spec = vec__24890;
        return win_ms;
      };
    }(vspecs, vstates_), vspecs)));
    var nspecs = cljs.core.count.call(null, vspecs);
    var nid_specs = cljs.core.count.call(null, cljs.core.filterv.call(null, function(vspecs, vstates_, max_win_ms, nspecs) {
      return function(p__24891) {
        var vec__24892 = p__24891;
        var _ = cljs.core.nth.call(null, vec__24892, 0, null);
        var ___$1 = cljs.core.nth.call(null, vec__24892, 1, null);
        var id = cljs.core.nth.call(null, vec__24892, 2, null);
        return id;
      };
    }(vspecs, vstates_, max_win_ms, nspecs), vspecs));
    var _ = nid_specs === 0 || cljs.core._EQ_.call(null, nid_specs, nspecs) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), new cljs.core.Symbol(null, "nid-specs", "nid-specs", -1204406222, null)), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "nid-specs", "nid-specs", -1204406222, null), new cljs.core.Symbol(null, 
      "nspecs", "nspecs", -1621596945, null)))))].join(""));
    }();
    var return_ids_QMARK_ = !(nid_specs === 0);
    return function(vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
      return function() {
        var taoensso$encore$rate_limiter_STAR__$_check_rate_limits__delegate = function(p__24893) {
          var vec__24909 = p__24893;
          var _QMARK_a1 = cljs.core.nth.call(null, vec__24909, 0, null);
          var _QMARK_a2 = cljs.core.nth.call(null, vec__24909, 1, null);
          if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, _QMARK_a1, new cljs.core.Keyword("rl", "debug", "rl/debug", -1608167914)))) {
            return vstates_;
          } else {
            if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, _QMARK_a1, new cljs.core.Keyword("rl", "reset", "rl/reset", -800926172)))) {
              if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, _QMARK_a2, new cljs.core.Keyword("rl", "all", "rl/all", 892118056)))) {
                cljs.core.reset_BANG_.call(null, vstates_, cljs.core.PersistentArrayMap.EMPTY);
              } else {
                cljs.core.swap_BANG_.call(null, vstates_, cljs.core.dissoc, _QMARK_a2);
              }
              return null;
            } else {
              var peek_QMARK_ = taoensso.encore.kw_identical_QMARK_.call(null, _QMARK_a1, new cljs.core.Keyword("rl", "peek", "rl/peek", -291391771));
              var req_id = cljs.core.truth_(peek_QMARK_) ? _QMARK_a2 : _QMARK_a1;
              var instant = taoensso.encore.now_udt.call(null);
              if (cljs.core.truth_(function() {
                var and__4673__auto__ = req_id;
                if (cljs.core.truth_(and__4673__auto__)) {
                  return taoensso.encore.gc_now_QMARK_.call(null);
                } else {
                  return and__4673__auto__;
                }
              }())) {
                taoensso.encore.swap_in_BANG_.call(null, vstates_, cljs.core.PersistentVector.EMPTY, function(peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
                  return function taoensso$encore$rate_limiter_STAR__$_check_rate_limits_$_gc(m) {
                    return cljs.core.reduce_kv.call(null, function(peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
                      return function(m_STAR_, req_id__$1, vstate) {
                        var max_udt_win_start = cljs.core.reduce.call(null, function(peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
                          return function(acc, p__24912) {
                            var vec__24913 = p__24912;
                            var ___$1 = cljs.core.nth.call(null, vec__24913, 0, null);
                            var udt = cljs.core.nth.call(null, vec__24913, 1, null);
                            var ___$2 = cljs.core.nth.call(null, vec__24913, 2, null);
                            var x__5016__auto__ = acc;
                            var y__5017__auto__ = udt;
                            return x__5016__auto__ > y__5017__auto__ ? x__5016__auto__ : y__5017__auto__;
                          };
                        }(peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_), 0, vstate);
                        var min_win_ms_elapsed = instant - max_udt_win_start;
                        if (min_win_ms_elapsed > max_win_ms) {
                          return cljs.core.dissoc.call(null, m_STAR_, req_id__$1);
                        } else {
                          return m_STAR_;
                        }
                      };
                    }(peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_), m, m);
                  };
                }(peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_));
              } else {
              }
              return taoensso.encore.swap_in_BANG_.call(null, vstates_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [req_id], null), function(peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
                return function(_QMARK_vstate) {
                  if (cljs.core.not.call(null, _QMARK_vstate)) {
                    if (cljs.core.truth_(peek_QMARK_)) {
                      return taoensso.encore.swapped.call(null, _QMARK_vstate, null);
                    } else {
                      return taoensso.encore.swapped.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, nspecs, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, instant], null))), null);
                    }
                  } else {
                    var vec__24914 = function() {
                      var in_vspecs = vspecs;
                      var in_vstate = _QMARK_vstate;
                      var out_vstate = cljs.core.PersistentVector.EMPTY;
                      var _QMARK_worst_limit_offence = null;
                      while (true) {
                        var vec__24915 = in_vspecs;
                        var vec__24916 = cljs.core.nth.call(null, vec__24915, 0, null);
                        var ncalls_limit = cljs.core.nth.call(null, vec__24916, 0, null);
                        var win_ms = cljs.core.nth.call(null, vec__24916, 1, null);
                        var _QMARK_spec_id = cljs.core.nth.call(null, vec__24916, 2, null);
                        var next_in_vspecs = cljs.core.nthnext.call(null, vec__24915, 1);
                        var vec__24917 = in_vstate;
                        var vec__24918 = cljs.core.nth.call(null, vec__24917, 0, null);
                        var ncalls = cljs.core.nth.call(null, vec__24918, 0, null);
                        var udt_win_start = cljs.core.nth.call(null, vec__24918, 1, null);
                        var next_in_vstate = cljs.core.nthnext.call(null, vec__24917, 1);
                        var win_ms_elapsed = instant - udt_win_start;
                        var reset_due_QMARK_ = win_ms_elapsed >= win_ms;
                        var rate_limited_QMARK_ = !reset_due_QMARK_ && ncalls >= ncalls_limit;
                        var new_out_vstate = cljs.core.conj.call(null, out_vstate, reset_due_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, instant], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls, udt_win_start], null));
                        var new__QMARK_worst_limit_offence = !rate_limited_QMARK_ ? _QMARK_worst_limit_offence : function() {
                          var ms_wait = win_ms - win_ms_elapsed;
                          if (function() {
                            var or__4685__auto__ = _QMARK_worst_limit_offence == null;
                            if (or__4685__auto__) {
                              return or__4685__auto__;
                            } else {
                              var vec__24920 = _QMARK_worst_limit_offence;
                              var max_ms_wait = cljs.core.nth.call(null, vec__24920, 0, null);
                              var ___$1 = cljs.core.nth.call(null, vec__24920, 1, null);
                              return ms_wait > max_ms_wait;
                            }
                          }()) {
                            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms_wait, _QMARK_spec_id], null);
                          } else {
                            return _QMARK_worst_limit_offence;
                          }
                        }();
                        if (cljs.core.not.call(null, next_in_vspecs)) {
                          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_out_vstate, new__QMARK_worst_limit_offence], null);
                        } else {
                          var G__24924 = next_in_vspecs;
                          var G__24925 = next_in_vstate;
                          var G__24926 = new_out_vstate;
                          var G__24927 = new__QMARK_worst_limit_offence;
                          in_vspecs = G__24924;
                          in_vstate = G__24925;
                          out_vstate = G__24926;
                          _QMARK_worst_limit_offence = G__24927;
                          continue;
                        }
                        break;
                      }
                    }();
                    var vstate_with_resets = cljs.core.nth.call(null, vec__24914, 0, null);
                    var _QMARK_worst_limit_offence = cljs.core.nth.call(null, vec__24914, 1, null);
                    var all_limits_pass_QMARK_ = _QMARK_worst_limit_offence == null;
                    var new_vstate = cljs.core.truth_(peek_QMARK_) ? _QMARK_vstate : !all_limits_pass_QMARK_ ? vstate_with_resets : cljs.core.mapv.call(null, function(vec__24914, vstate_with_resets, _QMARK_worst_limit_offence, all_limits_pass_QMARK_, peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_) {
                      return function(p__24921) {
                        var vec__24922 = p__24921;
                        var ncalls = cljs.core.nth.call(null, vec__24922, 0, null);
                        var udt_win_start = cljs.core.nth.call(null, vec__24922, 1, null);
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls + 1, udt_win_start], null);
                      };
                    }(vec__24914, vstate_with_resets, _QMARK_worst_limit_offence, all_limits_pass_QMARK_, peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_), vstate_with_resets);
                    var result = function() {
                      var temp__4657__auto__ = _QMARK_worst_limit_offence;
                      if (cljs.core.truth_(temp__4657__auto__)) {
                        var wlo = temp__4657__auto__;
                        if (return_ids_QMARK_) {
                          return wlo;
                        } else {
                          var vec__24923 = wlo;
                          var ms_wait = cljs.core.nth.call(null, vec__24923, 0, null);
                          var ___$1 = cljs.core.nth.call(null, vec__24923, 1, null);
                          return ms_wait;
                        }
                      } else {
                        return null;
                      }
                    }();
                    return taoensso.encore.swapped.call(null, new_vstate, result);
                  }
                };
              }(peek_QMARK_, req_id, instant, vec__24909, _QMARK_a1, _QMARK_a2, vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_));
            }
          }
        };
        var taoensso$encore$rate_limiter_STAR__$_check_rate_limits = function(var_args) {
          var p__24893 = null;
          if (arguments.length > 0) {
            var G__24928__i = 0, G__24928__a = new Array(arguments.length - 0);
            while (G__24928__i < G__24928__a.length) {
              G__24928__a[G__24928__i] = arguments[G__24928__i + 0];
              ++G__24928__i;
            }
            p__24893 = new cljs.core.IndexedSeq(G__24928__a, 0);
          }
          return taoensso$encore$rate_limiter_STAR__$_check_rate_limits__delegate.call(this, p__24893);
        };
        taoensso$encore$rate_limiter_STAR__$_check_rate_limits.cljs$lang$maxFixedArity = 0;
        taoensso$encore$rate_limiter_STAR__$_check_rate_limits.cljs$lang$applyTo = function(arglist__24929) {
          var p__24893 = cljs.core.seq(arglist__24929);
          return taoensso$encore$rate_limiter_STAR__$_check_rate_limits__delegate(p__24893);
        };
        taoensso$encore$rate_limiter_STAR__$_check_rate_limits.cljs$core$IFn$_invoke$arity$variadic = taoensso$encore$rate_limiter_STAR__$_check_rate_limits__delegate;
        return taoensso$encore$rate_limiter_STAR__$_check_rate_limits;
      }();
    }(vspecs, vstates_, max_win_ms, nspecs, nid_specs, _, return_ids_QMARK_);
  }
};
taoensso.encore.rate_limit = function taoensso$encore$rate_limit(specs, f) {
  var rl = taoensso.encore.rate_limiter_STAR_.call(null, specs);
  return function(rl) {
    return function() {
      var G__24930__delegate = function(args) {
        var temp__4655__auto__ = rl.call(null);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var backoff = temp__4655__auto__;
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, backoff], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), null], null);
        }
      };
      var G__24930 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__24931__i = 0, G__24931__a = new Array(arguments.length - 0);
          while (G__24931__i < G__24931__a.length) {
            G__24931__a[G__24931__i] = arguments[G__24931__i + 0];
            ++G__24931__i;
          }
          args = new cljs.core.IndexedSeq(G__24931__a, 0);
        }
        return G__24930__delegate.call(this, args);
      };
      G__24930.cljs$lang$maxFixedArity = 0;
      G__24930.cljs$lang$applyTo = function(arglist__24932) {
        var args = cljs.core.seq(arglist__24932);
        return G__24930__delegate(args);
      };
      G__24930.cljs$core$IFn$_invoke$arity$variadic = G__24930__delegate;
      return G__24930;
    }();
  }(rl);
};
taoensso.encore.nano_time = function() {
  var temp__4655__auto__ = function() {
    var and__4673__auto__ = typeof window !== "undefined";
    if (and__4673__auto__) {
      return window["performance"];
    } else {
      return and__4673__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var perf = temp__4655__auto__;
    var temp__4655__auto____$1 = function() {
      var or__4685__auto__ = perf["now"];
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = perf["mozNow"];
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          var or__4685__auto____$2 = perf["msNow"];
          if (cljs.core.truth_(or__4685__auto____$2)) {
            return or__4685__auto____$2;
          } else {
            var or__4685__auto____$3 = perf["oNow"];
            if (cljs.core.truth_(or__4685__auto____$3)) {
              return or__4685__auto____$3;
            } else {
              return perf["webkitNow"];
            }
          }
        }
      }
    }();
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var f = temp__4655__auto____$1;
      return function(f, temp__4655__auto____$1, perf, temp__4655__auto__) {
        return function() {
          return cljs.core.long$.call(null, 1E6 * f.call(perf));
        };
      }(f, temp__4655__auto____$1, perf, temp__4655__auto__);
    } else {
      return function(temp__4655__auto____$1, perf, temp__4655__auto__) {
        return function() {
          return 1E6 * taoensso.encore.now_udt.call(null);
        };
      }(temp__4655__auto____$1, perf, temp__4655__auto__);
    }
  } else {
    return function(temp__4655__auto__) {
      return function() {
        return 1E6 * taoensso.encore.now_udt.call(null);
      };
    }(temp__4655__auto__);
  }
}();
taoensso.encore.spaced_str_with_nils;
taoensso.encore.console_log = function() {
  var temp__4655__auto__ = function() {
    var and__4673__auto__ = typeof console !== "undefined";
    if (and__4673__auto__) {
      return console.log;
    } else {
      return and__4673__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var f = temp__4655__auto__;
    return function(f, temp__4655__auto__) {
      return function(xs) {
        return f.apply(console, cljs.core.into_array.call(null, xs));
      };
    }(f, temp__4655__auto__);
  } else {
    return function(temp__4655__auto__) {
      return function(xs) {
        return null;
      };
    }(temp__4655__auto__);
  }
}();
taoensso.encore.log = function taoensso$encore$log(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24940 = arguments.length;
  var i__5744__auto___24941 = 0;
  while (true) {
    if (i__5744__auto___24941 < len__5743__auto___24940) {
      args__5750__auto__.push(arguments[i__5744__auto___24941]);
      var G__24942 = i__5744__auto___24941 + 1;
      i__5744__auto___24941 = G__24942;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.encore.log.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.encore.log.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return taoensso.encore.console_log.call(null, xs);
};
taoensso.encore.log.cljs$lang$maxFixedArity = 0;
taoensso.encore.log.cljs$lang$applyTo = function(seq24933) {
  return taoensso.encore.log.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24933));
};
taoensso.encore.logp = function taoensso$encore$logp(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24943 = arguments.length;
  var i__5744__auto___24944 = 0;
  while (true) {
    if (i__5744__auto___24944 < len__5743__auto___24943) {
      args__5750__auto__.push(arguments[i__5744__auto___24944]);
      var G__24945 = i__5744__auto___24944 + 1;
      i__5744__auto___24944 = G__24945;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return taoensso.encore.console_log.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.encore.spaced_str_with_nils.call(null, xs)], null));
};
taoensso.encore.logp.cljs$lang$maxFixedArity = 0;
taoensso.encore.logp.cljs$lang$applyTo = function(seq24934) {
  return taoensso.encore.logp.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24934));
};
taoensso.encore.logf = function taoensso$encore$logf(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24946 = arguments.length;
  var i__5744__auto___24947 = 0;
  while (true) {
    if (i__5744__auto___24947 < len__5743__auto___24946) {
      args__5750__auto__.push(arguments[i__5744__auto___24947]);
      var G__24948 = i__5744__auto___24947 + 1;
      i__5744__auto___24947 = G__24948;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  return taoensso.encore.console_log.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.encore.format_STAR_.call(null, fmt, xs)], null));
};
taoensso.encore.logf.cljs$lang$maxFixedArity = 1;
taoensso.encore.logf.cljs$lang$applyTo = function(seq24935) {
  var G__24936 = cljs.core.first.call(null, seq24935);
  var seq24935__$1 = cljs.core.next.call(null, seq24935);
  return taoensso.encore.logf.cljs$core$IFn$_invoke$arity$variadic(G__24936, seq24935__$1);
};
taoensso.encore.sayp = function taoensso$encore$sayp(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24949 = arguments.length;
  var i__5744__auto___24950 = 0;
  while (true) {
    if (i__5744__auto___24950 < len__5743__auto___24949) {
      args__5750__auto__.push(arguments[i__5744__auto___24950]);
      var G__24951 = i__5744__auto___24950 + 1;
      i__5744__auto___24950 = G__24951;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return alert(taoensso.encore.spaced_str_with_nils.call(null, xs));
};
taoensso.encore.sayp.cljs$lang$maxFixedArity = 0;
taoensso.encore.sayp.cljs$lang$applyTo = function(seq24937) {
  return taoensso.encore.sayp.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24937));
};
taoensso.encore.sayf = function taoensso$encore$sayf(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___24952 = arguments.length;
  var i__5744__auto___24953 = 0;
  while (true) {
    if (i__5744__auto___24953 < len__5743__auto___24952) {
      args__5750__auto__.push(arguments[i__5744__auto___24953]);
      var G__24954 = i__5744__auto___24953 + 1;
      i__5744__auto___24953 = G__24954;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  return alert(taoensso.encore.format_STAR_.call(null, fmt, xs));
};
taoensso.encore.sayf.cljs$lang$maxFixedArity = 1;
taoensso.encore.sayf.cljs$lang$applyTo = function(seq24938) {
  var G__24939 = cljs.core.first.call(null, seq24938);
  var seq24938__$1 = cljs.core.next.call(null, seq24938);
  return taoensso.encore.sayf.cljs$core$IFn$_invoke$arity$variadic(G__24939, seq24938__$1);
};
taoensso.encore.get_window_location = function taoensso$encore$get_window_location() {
  var loc_STAR_ = window.location;
  var loc = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "href", "href", -793805698), loc_STAR_.href, new cljs.core.Keyword(null, "protocol", "protocol", 652470118), loc_STAR_.protocol, new cljs.core.Keyword(null, "hostname", "hostname", 2105669933), loc_STAR_.hostname, new cljs.core.Keyword(null, "host", "host", -1558485167), loc_STAR_.host, new cljs.core.Keyword(null, "pathname", "pathname", -1420497528), loc_STAR_.pathname, new cljs.core.Keyword(null, "search", "search", 
  1564939822), loc_STAR_.search, new cljs.core.Keyword(null, "hash", "hash", -13781596), loc_STAR_.hash], null);
  return loc;
};
taoensso.encore.xhr_pool_ = new cljs.core.Delay(function() {
  return new goog.net.XhrIoPool;
}, null);
taoensso.encore.get_pooled_xhr_BANG_ = function taoensso$encore$get_pooled_xhr_BANG_() {
  var result = cljs.core.deref.call(null, taoensso.encore.xhr_pool_).getObject();
  if (void 0 === result) {
    return null;
  } else {
    return result;
  }
};
taoensso.encore.coerce_xhr_params = function taoensso$encore$coerce_xhr_params(uri, method, params) {
  if (cljs.core.truth_(function() {
    var __x = params;
    if (cljs.core.truth_(function(__x) {
      return function(__x__$1) {
        var or__4685__auto__ = taoensso.truss.impl.non_throwing.call(null, cljs.core.nil_QMARK_).call(null, __x__$1);
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return taoensso.truss.impl.non_throwing.call(null, cljs.core.map_QMARK_).call(null, __x__$1);
        }
      };
    }(__x).call(null, __x))) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "([:or nil? map?] params)", __x, null, null);
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null)], null), new cljs.core.Symbol(null, "params", "params", -1943919534, 
    null))))].join(""));
  }
  var _QMARK_pstr = cljs.core.empty_QMARK_.call(null, params) ? null : function() {
    var s = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cljs.core.clj__GT_js.call(null, params))).toString();
    if (clojure.string.blank_QMARK_.call(null, s)) {
      return null;
    } else {
      return s;
    }
  }();
  var G__24956 = method instanceof cljs.core.Keyword ? method.fqn : null;
  switch(G__24956) {
    case "get":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(_QMARK_pstr) ? [cljs.core.str(uri), cljs.core.str("?"), cljs.core.str(_QMARK_pstr)].join("") : uri, null], null);
      break;
    case "post":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, _QMARK_pstr], null);
      break;
    case "put":
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uri, _QMARK_pstr], null);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(method)].join(""));;
  }
};
taoensso.encore.ajax_lite = function taoensso$encore$ajax_lite(uri, p__24960, callback) {
  var map__24978 = p__24960;
  var map__24978__$1 = (!(map__24978 == null) ? map__24978.cljs$lang$protocol_mask$partition0$ & 64 || map__24978.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24978) : map__24978;
  var opts = map__24978__$1;
  var method = cljs.core.get.call(null, map__24978__$1, new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755));
  var params = cljs.core.get.call(null, map__24978__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var headers = cljs.core.get.call(null, map__24978__$1, new cljs.core.Keyword(null, "headers", "headers", -835030129));
  var timeout_ms = cljs.core.get.call(null, map__24978__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), 1E4);
  var resp_type = cljs.core.get.call(null, map__24978__$1, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "auto", "auto", -566279492));
  var with_credentials_QMARK_ = cljs.core.get.call(null, map__24978__$1, new cljs.core.Keyword(null, "with-credentials?", "with-credentials?", -1773202222));
  var progress_fn = cljs.core.get.call(null, map__24978__$1, new cljs.core.Keyword(null, "progress-fn", "progress-fn", -1146547855));
  var errorf = cljs.core.get.call(null, map__24978__$1, new cljs.core.Keyword(null, "errorf", "errorf", -620376044), taoensso.encore.logf);
  if (cljs.core.truth_(function() {
    var __x = timeout_ms;
    if (cljs.core.truth_(function(__x, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf) {
      return function(__x__$1) {
        var or__4685__auto__ = taoensso.truss.impl.non_throwing.call(null, cljs.core.nil_QMARK_).call(null, __x__$1);
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return taoensso.truss.impl.non_throwing.call(null, taoensso.encore.nneg_int_QMARK_).call(null, __x__$1);
        }
      };
    }(__x, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf).call(null, __x))) {
      return true;
    } else {
      return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "([:or nil? nneg-int?] timeout-ms)", __x, null, null);
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "or", "or", 235744169), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "nneg-int?", "nneg-int?", 803479360, null)], null), new cljs.core.Symbol(null, "timeout-ms", "timeout-ms", 
    -1900214363, null))))].join(""));
  }
  var temp__4655__auto__ = taoensso.encore.get_pooled_xhr_BANG_.call(null);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var xhr = temp__4655__auto__;
    try {
      var timeout_ms__$1 = function() {
        var or__4685__auto__ = (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(opts);
        if (cljs.core.truth_(or__4685__auto__)) {
          return or__4685__auto__;
        } else {
          return timeout_ms;
        }
      }();
      var method_STAR_ = function() {
        var G__24982 = method instanceof cljs.core.Keyword ? method.fqn : null;
        switch(G__24982) {
          case "get":
            return "GET";
            break;
          case "post":
            return "POST";
            break;
          case "put":
            return "PUT";
            break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(method)].join(""));;
        }
      }();
      var params__$1 = taoensso.encore.map_keys.call(null, cljs.core.name, params);
      var headers__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, ["X-Requested-With", "XMLHTTPRequest"], null), taoensso.encore.map_keys.call(null, cljs.core.name, headers));
      var vec__24981 = taoensso.encore.coerce_xhr_params.call(null, uri, method, params__$1);
      var uri_STAR_ = cljs.core.nth.call(null, vec__24981, 0, null);
      var post_content_STAR_ = cljs.core.nth.call(null, vec__24981, 1, null);
      var headers_STAR_ = cljs.core.clj__GT_js.call(null, cljs.core.not.call(null, post_content_STAR_) ? headers__$1 : cljs.core.assoc.call(null, headers__$1, "Content-Type", "application/x-www-form-urlencoded; charset\x3dUTF-8"));
      var G__24983_24996 = xhr;
      goog.events.listenOnce(G__24983_24996, goog.net.EventType.READY, function(G__24983_24996, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__24981, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4655__auto__, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf) {
        return function(_) {
          return cljs.core.deref.call(null, taoensso.encore.xhr_pool_).releaseObject(xhr);
        };
      }(G__24983_24996, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__24981, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4655__auto__, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf));
      goog.events.listenOnce(G__24983_24996, goog.net.EventType.COMPLETE, function(G__24983_24996, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__24981, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4655__auto__, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf) {
        return function taoensso$encore$ajax_lite_$_wrapped_callback(resp) {
          var status = xhr.getStatus();
          var success_QMARK_ = xhr.isSuccess();
          var _QMARK_http_status = cljs.core.not_EQ_.call(null, status, -1) ? status : null;
          var _QMARK_content_type = cljs.core.truth_(_QMARK_http_status) ? xhr.getResponseHeader("Content-Type") : null;
          var _QMARK_content = cljs.core.truth_(_QMARK_http_status) ? function() {
            var resp_type__$1 = !cljs.core._EQ_.call(null, resp_type, new cljs.core.Keyword(null, "auto", "auto", -566279492)) ? resp_type : function() {
              var pred__24989 = function(status, success_QMARK_, _QMARK_http_status, _QMARK_content_type, G__24983_24996, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__24981, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4655__auto__, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf) {
                return function(p1__24959_SHARP_, p2__24958_SHARP_) {
                  return taoensso.encore.str_contains_QMARK_.call(null, p2__24958_SHARP_, p1__24959_SHARP_);
                };
              }(status, success_QMARK_, _QMARK_http_status, _QMARK_content_type, G__24983_24996, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__24981, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4655__auto__, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf);
              var expr__24990 = [cljs.core.str(_QMARK_content_type)].join("");
              if (cljs.core.truth_(pred__24989.call(null, "/edn", expr__24990))) {
                return new cljs.core.Keyword(null, "edn", "edn", 1317840885);
              } else {
                if (cljs.core.truth_(pred__24989.call(null, "/json", expr__24990))) {
                  return new cljs.core.Keyword(null, "json", "json", 1279968570);
                } else {
                  if (cljs.core.truth_(pred__24989.call(null, "/xml", expr__24990))) {
                    return new cljs.core.Keyword(null, "xml", "xml", -1170142052);
                  } else {
                    if (cljs.core.truth_(pred__24989.call(null, "/html", expr__24990))) {
                      return new cljs.core.Keyword(null, "text", "text", -1790561697);
                    } else {
                      return new cljs.core.Keyword(null, "text", "text", -1790561697);
                    }
                  }
                }
              }
            }();
            try {
              var G__24993 = resp_type__$1 instanceof cljs.core.Keyword ? resp_type__$1.fqn : null;
              switch(G__24993) {
                case "text":
                  return xhr.getResponseText();
                  break;
                case "json":
                  return xhr.getResponseJson();
                  break;
                case "xml":
                  return xhr.getResponseXml();
                  break;
                case "edn":
                  return taoensso.encore.read_edn.call(null, xhr.getResponseText());
                  break;
                default:
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(resp_type__$1)].join(""));;
              }
            } catch (e24992) {
              if (e24992 instanceof Error) {
                var e = e24992;
                return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("ajax", "bad-response-type", "ajax/bad-response-type", 789441015), resp_type__$1, new cljs.core.Keyword("ajax", "resp-as-text", "ajax/resp-as-text", 141416819), xhr.getResponseText()], null);
              } else {
                throw e24992;
              }
            }
          }() : null;
          var cb_arg = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "raw-resp", "raw-resp", -1924342506), resp, new cljs.core.Keyword(null, "xhr", "xhr", -177710851), xhr, new cljs.core.Keyword(null, "success?", "success?", -122854052), success_QMARK_, new cljs.core.Keyword(null, "?content-type", "?content-type", -2129759049), cljs.core.truth_(_QMARK_http_status) ? _QMARK_content_type : null, new cljs.core.Keyword(null, "?content", "?content", 1697782054), _QMARK_content, 
          new cljs.core.Keyword(null, "?status", "?status", 938730360), _QMARK_http_status, new cljs.core.Keyword(null, "?error", "?error", 1070752222), function() {
            var or__4685__auto__ = cljs.core.truth_(_QMARK_http_status) ? function() {
              var n = _QMARK_http_status;
              if (cljs.core.truth_(success_QMARK_)) {
                return null;
              } else {
                return _QMARK_http_status;
              }
            }() : cljs.core.get.call(null, cljs.core.PersistentArrayMap.fromArray([goog.net.ErrorCode.EXCEPTION, new cljs.core.Keyword(null, "exception", "exception", -335277064), goog.net.ErrorCode.HTTP_ERROR, new cljs.core.Keyword(null, "http-error", "http-error", -1040049553), goog.net.ErrorCode.ABORT, new cljs.core.Keyword(null, "abort", "abort", 521193198), goog.net.ErrorCode.TIMEOUT, new cljs.core.Keyword(null, "timeout", "timeout", -318625318)], true, false), xhr.getLastErrorCode(), new cljs.core.Keyword(null, 
            "unknown", "unknown", -935977881));
            if (cljs.core.truth_(or__4685__auto__)) {
              return or__4685__auto__;
            } else {
              if (_QMARK_content == null && cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [204, null, 1223, null], null), null)).call(null, _QMARK_http_status))) {
                return new cljs.core.Keyword(null, "no-content", "no-content", -1860206018);
              } else {
                return null;
              }
            }
          }()], null);
          return callback.call(null, cb_arg);
        };
      }(G__24983_24996, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__24981, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4655__auto__, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf));
      var temp__4657__auto___24998 = progress_fn;
      if (cljs.core.truth_(temp__4657__auto___24998)) {
        var pf_24999 = temp__4657__auto___24998;
        goog.events.listen(xhr, goog.net.EventType.PROGRESS, function(pf_24999, temp__4657__auto___24998, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__24981, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4655__auto__, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf) {
          return function(ev) {
            var length_computable_QMARK_ = ev.lengthComputable;
            var loaded = ev.loaded;
            var total = ev.total;
            var _QMARK_ratio = cljs.core.truth_(function() {
              var and__4673__auto__ = length_computable_QMARK_;
              if (cljs.core.truth_(and__4673__auto__)) {
                return cljs.core.not_EQ_.call(null, total, 0);
              } else {
                return and__4673__auto__;
              }
            }()) ? loaded / total : null;
            return pf_24999.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "?ratio", "?ratio", -1275760831), _QMARK_ratio, new cljs.core.Keyword(null, "length-computable?", "length-computable?", 1915473276), length_computable_QMARK_, new cljs.core.Keyword(null, "loaded", "loaded", -1246482293), loaded, new cljs.core.Keyword(null, "total", "total", 1916810418), total, new cljs.core.Keyword(null, "ev", "ev", -406827324), ev], null));
          };
        }(pf_24999, temp__4657__auto___24998, timeout_ms__$1, method_STAR_, params__$1, headers__$1, vec__24981, uri_STAR_, post_content_STAR_, headers_STAR_, xhr, temp__4655__auto__, map__24978, map__24978__$1, opts, method, params, headers, timeout_ms, resp_type, with_credentials_QMARK_, progress_fn, errorf));
      } else {
      }
      var G__24994_25000 = xhr;
      var temp__4657__auto___25001 = new cljs.core.Keyword(null, "always", "always", -1772028770);
      if (cljs.core.truth_(temp__4657__auto___25001)) {
        var x_25002 = temp__4657__auto___25001;
        G__24994_25000.setTimeoutInterval(function() {
          var or__4685__auto__ = timeout_ms__$1;
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return 0;
          }
        }());
      } else {
      }
      var temp__4657__auto___25003 = with_credentials_QMARK_;
      if (cljs.core.truth_(temp__4657__auto___25003)) {
        var x_25004 = temp__4657__auto___25003;
        G__24994_25000.setWithCredentials(true);
      } else {
      }
      var temp__4657__auto___25005 = new cljs.core.Keyword(null, "always", "always", -1772028770);
      if (cljs.core.truth_(temp__4657__auto___25005)) {
        var x_25006 = temp__4657__auto___25005;
        G__24994_25000.send(uri_STAR_, method_STAR_, post_content_STAR_, headers_STAR_);
      } else {
      }
      return xhr;
    } catch (e24980) {
      if (e24980 instanceof Error) {
        var e = e24980;
        cljs.core.deref.call(null, taoensso.encore.xhr_pool_).releaseObject(xhr);
        return null;
      } else {
        throw e24980;
      }
    }
  } else {
    callback.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "?error", "?error", 1070752222), new cljs.core.Keyword(null, "xhr-pool-depleted", "xhr-pool-depleted", -1812092376)], null));
    return null;
  }
};
taoensso.encore.url_encode = function taoensso$encore$url_encode(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, encodeURIComponent([cljs.core.str(s)].join(""), s), "*", "%2A"), "'", "%27");
  } else {
    return null;
  }
};
taoensso.encore.url_decode = function taoensso$encore$url_decode(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25011 = arguments.length;
  var i__5744__auto___25012 = 0;
  while (true) {
    if (i__5744__auto___25012 < len__5743__auto___25011) {
      args__5750__auto__.push(arguments[i__5744__auto___25012]);
      var G__25013 = i__5744__auto___25012 + 1;
      i__5744__auto___25012 = G__25013;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic = function(s, p__25009) {
  var vec__25010 = p__25009;
  var encoding = cljs.core.nth.call(null, vec__25010, 0, null);
  if (cljs.core.truth_(s)) {
    return decodeURIComponent(s);
  } else {
    return null;
  }
};
taoensso.encore.url_decode.cljs$lang$maxFixedArity = 1;
taoensso.encore.url_decode.cljs$lang$applyTo = function(seq25007) {
  var G__25008 = cljs.core.first.call(null, seq25007);
  var seq25007__$1 = cljs.core.next.call(null, seq25007);
  return taoensso.encore.url_decode.cljs$core$IFn$_invoke$arity$variadic(G__25008, seq25007__$1);
};
taoensso.encore.format_query_string = function taoensso$encore$format_query_string(m) {
  var param = function(k, v) {
    return [cljs.core.str(taoensso.encore.url_encode.call(null, taoensso.encore.qname.call(null, k))), cljs.core.str("\x3d"), cljs.core.str(taoensso.encore.url_encode.call(null, function() {
      var or__4685__auto__ = taoensso.encore.as__QMARK_qname.call(null, v);
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return [cljs.core.str(v)].join("");
      }
    }()))].join("");
  };
  var join = function(param) {
    return function(strs) {
      return clojure.string.join.call(null, "\x26", strs);
    };
  }(param);
  if (cljs.core.empty_QMARK_.call(null, m)) {
    return "";
  } else {
    return join.call(null, function() {
      var iter__5457__auto__ = function(param, join) {
        return function taoensso$encore$format_query_string_$_iter__25022(s__25023) {
          return new cljs.core.LazySeq(null, function(param, join) {
            return function() {
              var s__25023__$1 = s__25023;
              while (true) {
                var temp__4657__auto__ = cljs.core.seq.call(null, s__25023__$1);
                if (temp__4657__auto__) {
                  var s__25023__$2 = temp__4657__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__25023__$2)) {
                    var c__5455__auto__ = cljs.core.chunk_first.call(null, s__25023__$2);
                    var size__5456__auto__ = cljs.core.count.call(null, c__5455__auto__);
                    var b__25025 = cljs.core.chunk_buffer.call(null, size__5456__auto__);
                    if (function() {
                      var i__25024 = 0;
                      while (true) {
                        if (i__25024 < size__5456__auto__) {
                          var vec__25028 = cljs.core._nth.call(null, c__5455__auto__, i__25024);
                          var k = cljs.core.nth.call(null, vec__25028, 0, null);
                          var v = cljs.core.nth.call(null, vec__25028, 1, null);
                          if (cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, v))) {
                            cljs.core.chunk_append.call(null, b__25025, cljs.core.sequential_QMARK_.call(null, v) ? join.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, param, k), function() {
                              var or__4685__auto__ = cljs.core.seq.call(null, v);
                              if (or__4685__auto__) {
                                return or__4685__auto__;
                              } else {
                                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [""], null);
                              }
                            }())) : param.call(null, k, v));
                            var G__25030 = i__25024 + 1;
                            i__25024 = G__25030;
                            continue;
                          } else {
                            var G__25031 = i__25024 + 1;
                            i__25024 = G__25031;
                            continue;
                          }
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25025), taoensso$encore$format_query_string_$_iter__25022.call(null, cljs.core.chunk_rest.call(null, s__25023__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25025), null);
                    }
                  } else {
                    var vec__25029 = cljs.core.first.call(null, s__25023__$2);
                    var k = cljs.core.nth.call(null, vec__25029, 0, null);
                    var v = cljs.core.nth.call(null, vec__25029, 1, null);
                    if (cljs.core.truth_(taoensso.encore.nnil_QMARK_.call(null, v))) {
                      return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, v) ? join.call(null, cljs.core.mapv.call(null, cljs.core.partial.call(null, param, k), function() {
                        var or__4685__auto__ = cljs.core.seq.call(null, v);
                        if (or__4685__auto__) {
                          return or__4685__auto__;
                        } else {
                          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [""], null);
                        }
                      }())) : param.call(null, k, v), taoensso$encore$format_query_string_$_iter__25022.call(null, cljs.core.rest.call(null, s__25023__$2)));
                    } else {
                      var G__25032 = cljs.core.rest.call(null, s__25023__$2);
                      s__25023__$1 = G__25032;
                      continue;
                    }
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(param, join), null, null);
        };
      }(param, join);
      return iter__5457__auto__.call(null, m);
    }());
  }
};
taoensso.encore.assoc_conj = function taoensso$encore$assoc_conj(m, k, v) {
  return cljs.core.assoc.call(null, m, k, function() {
    var temp__4655__auto__ = cljs.core.get.call(null, m, k);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var cur = temp__4655__auto__;
      if (cljs.core.vector_QMARK_.call(null, cur)) {
        return cljs.core.conj.call(null, cur, v);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cur, v], null);
      }
    } else {
      return v;
    }
  }());
};
taoensso.encore.parse_query_params = function taoensso$encore$parse_query_params(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25039 = arguments.length;
  var i__5744__auto___25040 = 0;
  while (true) {
    if (i__5744__auto___25040 < len__5743__auto___25039) {
      args__5750__auto__.push(arguments[i__5744__auto___25040]);
      var G__25041 = i__5744__auto___25040 + 1;
      i__5744__auto___25040 = G__25041;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic = function(s, p__25035) {
  var vec__25036 = p__25035;
  var keywordize_QMARK_ = cljs.core.nth.call(null, vec__25036, 0, null);
  var encoding = cljs.core.nth.call(null, vec__25036, 1, null);
  var _PERCENT_ = clojure.string.blank_QMARK_.call(null, s) ? cljs.core.PersistentArrayMap.EMPTY : function() {
    var s__$1 = cljs.core.truth_(taoensso.encore.str_starts_with_QMARK_.call(null, s, "?")) ? taoensso.encore.substr.call(null, s, 1) : s;
    if (cljs.core.not.call(null, taoensso.encore.str_contains_QMARK_.call(null, s__$1, "\x3d"))) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      var m = cljs.core.reduce.call(null, function(s__$1, vec__25036, keywordize_QMARK_, encoding) {
        return function(m, param) {
          var temp__4655__auto__ = clojure.string.split.call(null, param, /=/, 2);
          if (cljs.core.truth_(temp__4655__auto__)) {
            var vec__25037 = temp__4655__auto__;
            var k = cljs.core.nth.call(null, vec__25037, 0, null);
            var v = cljs.core.nth.call(null, vec__25037, 1, null);
            return taoensso.encore.assoc_conj.call(null, m, taoensso.encore.url_decode.call(null, k, encoding), taoensso.encore.url_decode.call(null, v, encoding));
          } else {
            return m;
          }
        };
      }(s__$1, vec__25036, keywordize_QMARK_, encoding), cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, s__$1, /&/));
      if (cljs.core.not.call(null, keywordize_QMARK_)) {
        return m;
      } else {
        return taoensso.encore.keywordize_map.call(null, m);
      }
    }
  }();
  if (cljs.core.truth_(function() {
    var __x = _PERCENT_;
    try {
      if (cljs.core.map_QMARK_.call(null, __x)) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e25038) {
      if (e25038 instanceof Error) {
        var __t = e25038;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.encore", null, "(map? %)", __x, __t, null);
      } else {
        throw e25038;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "%", "%", -950237169, null))))].join(""));
  }
  return _PERCENT_;
};
taoensso.encore.parse_query_params.cljs$lang$maxFixedArity = 1;
taoensso.encore.parse_query_params.cljs$lang$applyTo = function(seq25033) {
  var G__25034 = cljs.core.first.call(null, seq25033);
  var seq25033__$1 = cljs.core.next.call(null, seq25033);
  return taoensso.encore.parse_query_params.cljs$core$IFn$_invoke$arity$variadic(G__25034, seq25033__$1);
};
taoensso.encore.merge_url_with_query_string = function taoensso$encore$merge_url_with_query_string(url, m) {
  var vec__25043 = clojure.string.split.call(null, [cljs.core.str(url)].join(""), /\?/, 2);
  var url__$1 = cljs.core.nth.call(null, vec__25043, 0, null);
  var _QMARK_qstr = cljs.core.nth.call(null, vec__25043, 1, null);
  var qmap = cljs.core.merge.call(null, cljs.core.truth_(_QMARK_qstr) ? taoensso.encore.keywordize_map.call(null, taoensso.encore.parse_query_params.call(null, _QMARK_qstr)) : null, taoensso.encore.keywordize_map.call(null, m));
  var _QMARK_qstr__$1 = taoensso.encore.as__QMARK_nblank.call(null, taoensso.encore.format_query_string.call(null, qmap));
  var temp__4655__auto__ = _QMARK_qstr__$1;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var qstr = temp__4655__auto__;
    return [cljs.core.str(url__$1), cljs.core.str("?"), cljs.core.str(qstr)].join("");
  } else {
    return url__$1;
  }
};
taoensso.encore.a0_memoize_ = taoensso.encore.memoize_a0_;
taoensso.encore.a1_memoize_ = taoensso.encore.memoize_a1_;
taoensso.encore.spaced_str_with_nils = function taoensso$encore$spaced_str_with_nils(xs) {
  return clojure.string.join.call(null, " ", cljs.core.mapv.call(null, taoensso.encore.nil__GT_str, xs));
};
taoensso.encore.spaced_str = function taoensso$encore$spaced_str(xs) {
  return clojure.string.join.call(null, " ", cljs.core.mapv.call(null, taoensso.encore.undefined__GT_nil, xs));
};
taoensso.encore.backport_run_BANG_ = taoensso.encore.run_BANG__STAR_;
taoensso.encore.fq_name = taoensso.encore.qname;
taoensso.encore.memoize_1 = taoensso.encore.memoize1;
taoensso.encore.round = function taoensso$encore$round(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25048 = arguments.length;
  var i__5744__auto___25049 = 0;
  while (true) {
    if (i__5744__auto___25049 < len__5743__auto___25048) {
      args__5750__auto__.push(arguments[i__5744__auto___25049]);
      var G__25050 = i__5744__auto___25049 + 1;
      i__5744__auto___25049 = G__25050;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic = function(n, p__25046) {
  var vec__25047 = p__25046;
  var type = cljs.core.nth.call(null, vec__25047, 0, null);
  var nplaces = cljs.core.nth.call(null, vec__25047, 1, null);
  return taoensso.encore.round_STAR_.call(null, function() {
    var or__4685__auto__ = type;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return new cljs.core.Keyword(null, "round", "round", 2009433328);
    }
  }(), nplaces, n);
};
taoensso.encore.round.cljs$lang$maxFixedArity = 1;
taoensso.encore.round.cljs$lang$applyTo = function(seq25044) {
  var G__25045 = cljs.core.first.call(null, seq25044);
  var seq25044__$1 = cljs.core.next.call(null, seq25044);
  return taoensso.encore.round.cljs$core$IFn$_invoke$arity$variadic(G__25045, seq25044__$1);
};
taoensso.encore.logging_level = cljs.core.atom.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596));
taoensso.encore.set_exp_backoff_timeout_BANG_ = function taoensso$encore$set_exp_backoff_timeout_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25055 = arguments.length;
  var i__5744__auto___25056 = 0;
  while (true) {
    if (i__5744__auto___25056 < len__5743__auto___25055) {
      args__5750__auto__.push(arguments[i__5744__auto___25056]);
      var G__25057 = i__5744__auto___25056 + 1;
      i__5744__auto___25056 = G__25057;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(nullary_f, p__25053) {
  var vec__25054 = p__25053;
  var nattempt = cljs.core.nth.call(null, vec__25054, 0, null);
  return window.setTimeout(nullary_f, taoensso.encore.exp_backoff.call(null, function() {
    var or__4685__auto__ = nattempt;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return 0;
    }
  }()));
};
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$lang$applyTo = function(seq25051) {
  var G__25052 = cljs.core.first.call(null, seq25051);
  var seq25051__$1 = cljs.core.next.call(null, seq25051);
  return taoensso.encore.set_exp_backoff_timeout_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__25052, seq25051__$1);
};
taoensso.encore.keys_EQ_ = function taoensso$encore$keys_EQ_(m, ks) {
  return taoensso.encore.ks_EQ_.call(null, ks, m);
};
taoensso.encore.keys_LT__EQ_ = function taoensso$encore$keys_LT__EQ_(m, ks) {
  return taoensso.encore.ks_LT__EQ_.call(null, ks, m);
};
taoensso.encore.keys_GT__EQ_ = function taoensso$encore$keys_GT__EQ_(m, ks) {
  return taoensso.encore.ks_GT__EQ_.call(null, ks, m);
};
taoensso.encore.keys_EQ_nnil_QMARK_ = function taoensso$encore$keys_EQ_nnil_QMARK_(m, ks) {
  return taoensso.encore.ks_nnil_QMARK_.call(null, ks, m);
};
taoensso.encore.parse_bool = taoensso.encore.as__QMARK_bool;
taoensso.encore.parse_int = taoensso.encore.as__QMARK_int;
taoensso.encore.parse_float = taoensso.encore.as__QMARK_float;
taoensso.encore.merge_deep_with = taoensso.encore.nested_merge_with;
taoensso.encore.merge_deep = taoensso.encore.nested_merge;
taoensso.encore.rate_limiter = function taoensso$encore$rate_limiter(ncalls_limit, window_ms) {
  return taoensso.encore.rate_limiter_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls_limit, window_ms], null)], null));
};
taoensso.encore.rate_limited = function taoensso$encore$rate_limited(ncalls_limit, window_ms, f) {
  var rl = taoensso.encore.rate_limiter_STAR_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ncalls_limit, window_ms], null)], null));
  return function(rl) {
    return function() {
      var G__25058__delegate = function(args) {
        var temp__4655__auto__ = rl.call(null);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var backoff_ms = temp__4655__auto__;
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "backoff-ms", "backoff-ms", 1679281507), backoff_ms], null);
        } else {
          return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "result", "result", 1415092211), f.call(null)], null);
        }
      };
      var G__25058 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__25059__i = 0, G__25059__a = new Array(arguments.length - 0);
          while (G__25059__i < G__25059__a.length) {
            G__25059__a[G__25059__i] = arguments[G__25059__i + 0];
            ++G__25059__i;
          }
          args = new cljs.core.IndexedSeq(G__25059__a, 0);
        }
        return G__25058__delegate.call(this, args);
      };
      G__25058.cljs$lang$maxFixedArity = 0;
      G__25058.cljs$lang$applyTo = function(arglist__25060) {
        var args = cljs.core.seq(arglist__25060);
        return G__25058__delegate(args);
      };
      G__25058.cljs$core$IFn$_invoke$arity$variadic = G__25058__delegate;
      return G__25058;
    }();
  }(rl);
};
if (typeof taoensso.encore._STAR_log_level_STAR_ !== "undefined") {
} else {
  taoensso.encore._STAR_log_level_STAR_ = new cljs.core.Keyword(null, "debug", "debug", -1608172596);
}
taoensso.encore.log_QMARK_ = function() {
  var __GT_n = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "trace", "trace", -1082747415), 1, new cljs.core.Keyword(null, "debug", "debug", -1608172596), 2, new cljs.core.Keyword(null, "info", "info", -317069002), 3, new cljs.core.Keyword(null, "warn", "warn", -436710552), 4, new cljs.core.Keyword(null, "error", "error", -978969032), 5, new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), 6, new cljs.core.Keyword(null, "report", "report", 1394055010), 7], null);
  return function(__GT_n) {
    return function(level) {
      return __GT_n.call(null, level) >= __GT_n.call(null, taoensso.encore._STAR_log_level_STAR_);
    };
  }(__GT_n);
}();
taoensso.encore.tracef = function taoensso$encore$tracef(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25075 = arguments.length;
  var i__5744__auto___25076 = 0;
  while (true) {
    if (i__5744__auto___25076 < len__5743__auto___25075) {
      args__5750__auto__.push(arguments[i__5744__auto___25076]);
      var G__25077 = i__5744__auto___25076 + 1;
      i__5744__auto___25076 = G__25077;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "trace", "trace", -1082747415)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
  } else {
    return null;
  }
};
taoensso.encore.tracef.cljs$lang$maxFixedArity = 1;
taoensso.encore.tracef.cljs$lang$applyTo = function(seq25061) {
  var G__25062 = cljs.core.first.call(null, seq25061);
  var seq25061__$1 = cljs.core.next.call(null, seq25061);
  return taoensso.encore.tracef.cljs$core$IFn$_invoke$arity$variadic(G__25062, seq25061__$1);
};
taoensso.encore.debugf = function taoensso$encore$debugf(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25078 = arguments.length;
  var i__5744__auto___25079 = 0;
  while (true) {
    if (i__5744__auto___25079 < len__5743__auto___25078) {
      args__5750__auto__.push(arguments[i__5744__auto___25079]);
      var G__25080 = i__5744__auto___25079 + 1;
      i__5744__auto___25079 = G__25080;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "debug", "debug", -1608172596)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
  } else {
    return null;
  }
};
taoensso.encore.debugf.cljs$lang$maxFixedArity = 1;
taoensso.encore.debugf.cljs$lang$applyTo = function(seq25063) {
  var G__25064 = cljs.core.first.call(null, seq25063);
  var seq25063__$1 = cljs.core.next.call(null, seq25063);
  return taoensso.encore.debugf.cljs$core$IFn$_invoke$arity$variadic(G__25064, seq25063__$1);
};
taoensso.encore.infof = function taoensso$encore$infof(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25081 = arguments.length;
  var i__5744__auto___25082 = 0;
  while (true) {
    if (i__5744__auto___25082 < len__5743__auto___25081) {
      args__5750__auto__.push(arguments[i__5744__auto___25082]);
      var G__25083 = i__5744__auto___25082 + 1;
      i__5744__auto___25082 = G__25083;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "info", "info", -317069002)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
  } else {
    return null;
  }
};
taoensso.encore.infof.cljs$lang$maxFixedArity = 1;
taoensso.encore.infof.cljs$lang$applyTo = function(seq25065) {
  var G__25066 = cljs.core.first.call(null, seq25065);
  var seq25065__$1 = cljs.core.next.call(null, seq25065);
  return taoensso.encore.infof.cljs$core$IFn$_invoke$arity$variadic(G__25066, seq25065__$1);
};
taoensso.encore.warnf = function taoensso$encore$warnf(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25084 = arguments.length;
  var i__5744__auto___25085 = 0;
  while (true) {
    if (i__5744__auto___25085 < len__5743__auto___25084) {
      args__5750__auto__.push(arguments[i__5744__auto___25085]);
      var G__25086 = i__5744__auto___25085 + 1;
      i__5744__auto___25085 = G__25086;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "warn", "warn", -436710552)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("WARN: "), cljs.core.str(fmt)].join(""), xs);
  } else {
    return null;
  }
};
taoensso.encore.warnf.cljs$lang$maxFixedArity = 1;
taoensso.encore.warnf.cljs$lang$applyTo = function(seq25067) {
  var G__25068 = cljs.core.first.call(null, seq25067);
  var seq25067__$1 = cljs.core.next.call(null, seq25067);
  return taoensso.encore.warnf.cljs$core$IFn$_invoke$arity$variadic(G__25068, seq25067__$1);
};
taoensso.encore.errorf = function taoensso$encore$errorf(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25087 = arguments.length;
  var i__5744__auto___25088 = 0;
  while (true) {
    if (i__5744__auto___25088 < len__5743__auto___25087) {
      args__5750__auto__.push(arguments[i__5744__auto___25088]);
      var G__25089 = i__5744__auto___25088 + 1;
      i__5744__auto___25088 = G__25089;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("ERROR: "), cljs.core.str(fmt)].join(""), xs);
  } else {
    return null;
  }
};
taoensso.encore.errorf.cljs$lang$maxFixedArity = 1;
taoensso.encore.errorf.cljs$lang$applyTo = function(seq25069) {
  var G__25070 = cljs.core.first.call(null, seq25069);
  var seq25069__$1 = cljs.core.next.call(null, seq25069);
  return taoensso.encore.errorf.cljs$core$IFn$_invoke$arity$variadic(G__25070, seq25069__$1);
};
taoensso.encore.fatalf = function taoensso$encore$fatalf(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25090 = arguments.length;
  var i__5744__auto___25091 = 0;
  while (true) {
    if (i__5744__auto___25091 < len__5743__auto___25090) {
      args__5750__auto__.push(arguments[i__5744__auto___25091]);
      var G__25092 = i__5744__auto___25091 + 1;
      i__5744__auto___25091 = G__25092;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "fatal", "fatal", 1874419888)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, [cljs.core.str("FATAL: "), cljs.core.str(fmt)].join(""), xs);
  } else {
    return null;
  }
};
taoensso.encore.fatalf.cljs$lang$maxFixedArity = 1;
taoensso.encore.fatalf.cljs$lang$applyTo = function(seq25071) {
  var G__25072 = cljs.core.first.call(null, seq25071);
  var seq25071__$1 = cljs.core.next.call(null, seq25071);
  return taoensso.encore.fatalf.cljs$core$IFn$_invoke$arity$variadic(G__25072, seq25071__$1);
};
taoensso.encore.reportf = function taoensso$encore$reportf(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25093 = arguments.length;
  var i__5744__auto___25094 = 0;
  while (true) {
    if (i__5744__auto___25094 < len__5743__auto___25093) {
      args__5750__auto__.push(arguments[i__5744__auto___25094]);
      var G__25095 = i__5744__auto___25094 + 1;
      i__5744__auto___25094 = G__25095;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic = function(fmt, xs) {
  if (cljs.core.truth_(taoensso.encore.log_QMARK_.call(null, new cljs.core.Keyword(null, "report", "report", 1394055010)))) {
    return cljs.core.apply.call(null, taoensso.encore.logf, fmt, xs);
  } else {
    return null;
  }
};
taoensso.encore.reportf.cljs$lang$maxFixedArity = 1;
taoensso.encore.reportf.cljs$lang$applyTo = function(seq25073) {
  var G__25074 = cljs.core.first.call(null, seq25073);
  var seq25073__$1 = cljs.core.next.call(null, seq25073);
  return taoensso.encore.reportf.cljs$core$IFn$_invoke$arity$variadic(G__25074, seq25073__$1);
};
taoensso.encore.greatest = function taoensso$encore$greatest(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25102 = arguments.length;
  var i__5744__auto___25103 = 0;
  while (true) {
    if (i__5744__auto___25103 < len__5743__auto___25102) {
      args__5750__auto__.push(arguments[i__5744__auto___25103]);
      var G__25104 = i__5744__auto___25103 + 1;
      i__5744__auto___25103 = G__25104;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic = function(coll, p__25100) {
  var vec__25101 = p__25100;
  var _QMARK_comparator = cljs.core.nth.call(null, vec__25101, 0, null);
  var comparator = function() {
    var or__4685__auto__ = _QMARK_comparator;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return taoensso.encore.rcompare;
    }
  }();
  return cljs.core.reduce.call(null, function(comparator, vec__25101, _QMARK_comparator) {
    return function(p1__25096_SHARP_, p2__25097_SHARP_) {
      if (comparator.call(null, p1__25096_SHARP_, p2__25097_SHARP_) > 0) {
        return p2__25097_SHARP_;
      } else {
        return p1__25096_SHARP_;
      }
    };
  }(comparator, vec__25101, _QMARK_comparator), coll);
};
taoensso.encore.greatest.cljs$lang$maxFixedArity = 1;
taoensso.encore.greatest.cljs$lang$applyTo = function(seq25098) {
  var G__25099 = cljs.core.first.call(null, seq25098);
  var seq25098__$1 = cljs.core.next.call(null, seq25098);
  return taoensso.encore.greatest.cljs$core$IFn$_invoke$arity$variadic(G__25099, seq25098__$1);
};
taoensso.encore.least = function taoensso$encore$least(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25111 = arguments.length;
  var i__5744__auto___25112 = 0;
  while (true) {
    if (i__5744__auto___25112 < len__5743__auto___25111) {
      args__5750__auto__.push(arguments[i__5744__auto___25112]);
      var G__25113 = i__5744__auto___25112 + 1;
      i__5744__auto___25112 = G__25113;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic = function(coll, p__25109) {
  var vec__25110 = p__25109;
  var _QMARK_comparator = cljs.core.nth.call(null, vec__25110, 0, null);
  var comparator = function() {
    var or__4685__auto__ = _QMARK_comparator;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return taoensso.encore.rcompare;
    }
  }();
  return cljs.core.reduce.call(null, function(comparator, vec__25110, _QMARK_comparator) {
    return function(p1__25105_SHARP_, p2__25106_SHARP_) {
      if (comparator.call(null, p1__25105_SHARP_, p2__25106_SHARP_) < 0) {
        return p2__25106_SHARP_;
      } else {
        return p1__25105_SHARP_;
      }
    };
  }(comparator, vec__25110, _QMARK_comparator), coll);
};
taoensso.encore.least.cljs$lang$maxFixedArity = 1;
taoensso.encore.least.cljs$lang$applyTo = function(seq25107) {
  var G__25108 = cljs.core.first.call(null, seq25107);
  var seq25107__$1 = cljs.core.next.call(null, seq25107);
  return taoensso.encore.least.cljs$core$IFn$_invoke$arity$variadic(G__25108, seq25107__$1);
};
taoensso.encore.clj1098 = function taoensso$encore$clj1098(x) {
  var or__4685__auto__ = x;
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
};
goog.provide("taoensso.sente.interfaces");
goog.require("cljs.core");
goog.require("taoensso.encore");
taoensso.sente.interfaces.IServerChan = function() {
};
taoensso.sente.interfaces.sch_open_QMARK_ = function taoensso$sente$interfaces$sch_open_QMARK_(server_ch) {
  if (!(server_ch == null) && !(server_ch.taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$arity$1 == null)) {
    return server_ch.taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$arity$1(server_ch);
  } else {
    var x__5340__auto__ = server_ch == null ? null : server_ch;
    var m__5341__auto__ = taoensso.sente.interfaces.sch_open_QMARK_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, server_ch);
    } else {
      var m__5341__auto____$1 = taoensso.sente.interfaces.sch_open_QMARK_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, server_ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "IServerChan.sch-open?", server_ch);
      }
    }
  }
};
taoensso.sente.interfaces.sch_close_BANG_ = function taoensso$sente$interfaces$sch_close_BANG_(server_ch) {
  if (!(server_ch == null) && !(server_ch.taoensso$sente$interfaces$IServerChan$sch_close_BANG_$arity$1 == null)) {
    return server_ch.taoensso$sente$interfaces$IServerChan$sch_close_BANG_$arity$1(server_ch);
  } else {
    var x__5340__auto__ = server_ch == null ? null : server_ch;
    var m__5341__auto__ = taoensso.sente.interfaces.sch_close_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, server_ch);
    } else {
      var m__5341__auto____$1 = taoensso.sente.interfaces.sch_close_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, server_ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "IServerChan.sch-close!", server_ch);
      }
    }
  }
};
taoensso.sente.interfaces._sch_send_BANG_ = function taoensso$sente$interfaces$_sch_send_BANG_(server_ch, msg, close_after_send_QMARK_) {
  if (!(server_ch == null) && !(server_ch.taoensso$sente$interfaces$IServerChan$_sch_send_BANG_$arity$3 == null)) {
    return server_ch.taoensso$sente$interfaces$IServerChan$_sch_send_BANG_$arity$3(server_ch, msg, close_after_send_QMARK_);
  } else {
    var x__5340__auto__ = server_ch == null ? null : server_ch;
    var m__5341__auto__ = taoensso.sente.interfaces._sch_send_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, server_ch, msg, close_after_send_QMARK_);
    } else {
      var m__5341__auto____$1 = taoensso.sente.interfaces._sch_send_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, server_ch, msg, close_after_send_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "IServerChan.-sch-send!", server_ch);
      }
    }
  }
};
taoensso.sente.interfaces.sch_send_BANG_ = function taoensso$sente$interfaces$sch_send_BANG_(var_args) {
  var args25137 = [];
  var len__5743__auto___25140 = arguments.length;
  var i__5744__auto___25141 = 0;
  while (true) {
    if (i__5744__auto___25141 < len__5743__auto___25140) {
      args25137.push(arguments[i__5744__auto___25141]);
      var G__25142 = i__5744__auto___25141 + 1;
      i__5744__auto___25141 = G__25142;
      continue;
    } else {
    }
    break;
  }
  var G__25139 = args25137.length;
  switch(G__25139) {
    case 2:
      return taoensso.sente.interfaces.sch_send_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.sente.interfaces.sch_send_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25137.length)].join(""));;
  }
};
taoensso.sente.interfaces.sch_send_BANG_.cljs$core$IFn$_invoke$arity$2 = function(server_ch, msg) {
  return taoensso.sente.interfaces._sch_send_BANG_.call(null, server_ch, msg, false);
};
taoensso.sente.interfaces.sch_send_BANG_.cljs$core$IFn$_invoke$arity$3 = function(server_ch, msg, close_after_send_QMARK_) {
  return taoensso.sente.interfaces._sch_send_BANG_.call(null, server_ch, msg, close_after_send_QMARK_);
};
taoensso.sente.interfaces.sch_send_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.sente.interfaces.IServerChanAdapter = function() {
};
taoensso.sente.interfaces.ring_req__GT_server_ch_resp = function taoensso$sente$interfaces$ring_req__GT_server_ch_resp(server_ch_adapter, ring_req, callbacks_map) {
  if (!(server_ch_adapter == null) && !(server_ch_adapter.taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$arity$3 == null)) {
    return server_ch_adapter.taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$arity$3(server_ch_adapter, ring_req, callbacks_map);
  } else {
    var x__5340__auto__ = server_ch_adapter == null ? null : server_ch_adapter;
    var m__5341__auto__ = taoensso.sente.interfaces.ring_req__GT_server_ch_resp[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, server_ch_adapter, ring_req, callbacks_map);
    } else {
      var m__5341__auto____$1 = taoensso.sente.interfaces.ring_req__GT_server_ch_resp["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, server_ch_adapter, ring_req, callbacks_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "IServerChanAdapter.ring-req-\x3eserver-ch-resp", server_ch_adapter);
      }
    }
  }
};
taoensso.sente.interfaces.IPacker = function() {
};
taoensso.sente.interfaces.pack = function taoensso$sente$interfaces$pack(_, x) {
  if (!(_ == null) && !(_.taoensso$sente$interfaces$IPacker$pack$arity$2 == null)) {
    return _.taoensso$sente$interfaces$IPacker$pack$arity$2(_, x);
  } else {
    var x__5340__auto__ = _ == null ? null : _;
    var m__5341__auto__ = taoensso.sente.interfaces.pack[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, _, x);
    } else {
      var m__5341__auto____$1 = taoensso.sente.interfaces.pack["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, _, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPacker.pack", _);
      }
    }
  }
};
taoensso.sente.interfaces.unpack = function taoensso$sente$interfaces$unpack(_, x) {
  if (!(_ == null) && !(_.taoensso$sente$interfaces$IPacker$unpack$arity$2 == null)) {
    return _.taoensso$sente$interfaces$IPacker$unpack$arity$2(_, x);
  } else {
    var x__5340__auto__ = _ == null ? null : _;
    var m__5341__auto__ = taoensso.sente.interfaces.unpack[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, _, x);
    } else {
      var m__5341__auto____$1 = taoensso.sente.interfaces.unpack["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, _, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPacker.unpack", _);
      }
    }
  }
};
taoensso.sente.interfaces.EdnPacker = function() {
};
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = true;
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.encore.pr_edn.call(null, x);
};
taoensso.sente.interfaces.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return taoensso.encore.read_edn.call(null, s);
};
taoensso.sente.interfaces.EdnPacker.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
taoensso.sente.interfaces.EdnPacker.cljs$lang$type = true;
taoensso.sente.interfaces.EdnPacker.cljs$lang$ctorStr = "taoensso.sente.interfaces/EdnPacker";
taoensso.sente.interfaces.EdnPacker.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "taoensso.sente.interfaces/EdnPacker");
};
taoensso.sente.interfaces.__GT_EdnPacker = function taoensso$sente$interfaces$__GT_EdnPacker() {
  return new taoensso.sente.interfaces.EdnPacker;
};
taoensso.sente.interfaces.edn_packer = taoensso.sente.interfaces.__GT_EdnPacker.call(null);
taoensso.sente.interfaces.coerce_packer = function taoensso$sente$interfaces$coerce_packer(x) {
  if (cljs.core._EQ_.call(null, x, new cljs.core.Keyword(null, "edn", "edn", 1317840885))) {
    return taoensso.sente.interfaces.edn_packer;
  } else {
    if (!(x == null) ? false || x.taoensso$sente$interfaces$IPacker$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IPacker, x) : false : cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IPacker, x)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Given packer doesn't satisfy IPacker protocol?")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IPacker", "IPacker", 266151414, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
    }
    return x;
  }
};
goog.provide("taoensso.timbre.appenders.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("taoensso.encore");
taoensso.timbre.appenders.core.println_appender = function taoensso$timbre$appenders$core$println_appender(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25121 = arguments.length;
  var i__5744__auto___25122 = 0;
  while (true) {
    if (i__5744__auto___25122 < len__5743__auto___25121) {
      args__5750__auto__.push(arguments[i__5744__auto___25122]);
      var G__25123 = i__5744__auto___25122 + 1;
      i__5744__auto___25122 = G__25123;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic = function(p__25117) {
  var vec__25118 = p__25117;
  var _opts = cljs.core.nth.call(null, vec__25118, 0, null);
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057), true, new cljs.core.Keyword(null, "async?", "async?", 1523057758), false, new cljs.core.Keyword(null, "min-level", "min-level", 1634684919), null, new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022), null, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), new cljs.core.Keyword(null, "inherit", "inherit", -1840815422), new cljs.core.Keyword(null, "fn", 
  "fn", -1175266204), function(vec__25118, _opts) {
    return function(data) {
      var map__25119 = data;
      var map__25119__$1 = (!(map__25119 == null) ? map__25119.cljs$lang$protocol_mask$partition0$ & 64 || map__25119.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25119) : map__25119;
      var output_fn = cljs.core.get.call(null, map__25119__$1, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539));
      return cljs.core.println.call(null, output_fn.call(null, data));
    };
  }(vec__25118, _opts)], null);
};
taoensso.timbre.appenders.core.println_appender.cljs$lang$maxFixedArity = 0;
taoensso.timbre.appenders.core.println_appender.cljs$lang$applyTo = function(seq25116) {
  return taoensso.timbre.appenders.core.println_appender.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq25116));
};
taoensso.timbre.appenders.core.console_appender = function taoensso$timbre$appenders$core$console_appender(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___25132 = arguments.length;
  var i__5744__auto___25133 = 0;
  while (true) {
    if (i__5744__auto___25133 < len__5743__auto___25132) {
      args__5750__auto__.push(arguments[i__5744__auto___25133]);
      var G__25134 = i__5744__auto___25133 + 1;
      i__5744__auto___25133 = G__25134;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.timbre.appenders.core.console_appender.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.timbre.appenders.core.console_appender.cljs$core$IFn$_invoke$arity$variadic = function(p__25125) {
  var vec__25126 = p__25125;
  var map__25127 = cljs.core.nth.call(null, vec__25126, 0, null);
  var map__25127__$1 = (!(map__25127 == null) ? map__25127.cljs$lang$protocol_mask$partition0$ & 64 || map__25127.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25127) : map__25127;
  var raw_output_QMARK_ = cljs.core.get.call(null, map__25127__$1, new cljs.core.Keyword(null, "raw-output?", "raw-output?", 1301869164));
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057), true, new cljs.core.Keyword(null, "async?", "async?", 1523057758), false, new cljs.core.Keyword(null, "min-level", "min-level", 1634684919), null, new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022), null, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), new cljs.core.Keyword(null, "inherit", "inherit", -1840815422), new cljs.core.Keyword(null, "fn", 
  "fn", -1175266204), cljs.core.truth_(function() {
    var and__4673__auto__ = typeof console !== "undefined";
    if (and__4673__auto__) {
      return console.log;
    } else {
      return and__4673__auto__;
    }
  }()) ? function() {
    var level__GT_logger = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "trace", "trace", -1082747415), function() {
      var or__4685__auto__ = console.trace;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return console.log;
      }
    }(), new cljs.core.Keyword(null, "debug", "debug", -1608172596), function() {
      var or__4685__auto__ = console.debug;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return console.log;
      }
    }(), new cljs.core.Keyword(null, "info", "info", -317069002), function() {
      var or__4685__auto__ = console.info;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return console.log;
      }
    }(), new cljs.core.Keyword(null, "warn", "warn", -436710552), function() {
      var or__4685__auto__ = console.warn;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return console.log;
      }
    }(), new cljs.core.Keyword(null, "error", "error", -978969032), function() {
      var or__4685__auto__ = console.error;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return console.log;
      }
    }(), new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), function() {
      var or__4685__auto__ = console.error;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return console.log;
      }
    }(), new cljs.core.Keyword(null, "report", "report", 1394055010), function() {
      var or__4685__auto__ = console.info;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return console.log;
      }
    }()], null);
    return function(level__GT_logger, vec__25126, map__25127, map__25127__$1, raw_output_QMARK_) {
      return function(data) {
        var map__25129 = data;
        var map__25129__$1 = (!(map__25129 == null) ? map__25129.cljs$lang$protocol_mask$partition0$ & 64 || map__25129.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25129) : map__25129;
        var level = cljs.core.get.call(null, map__25129__$1, new cljs.core.Keyword(null, "level", "level", 1290497552));
        var output_fn = cljs.core.get.call(null, map__25129__$1, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539));
        var vargs_ = cljs.core.get.call(null, map__25129__$1, new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148));
        var vargs = cljs.core.deref.call(null, vargs_);
        var vec__25130 = taoensso.encore.vsplit_first.call(null, vargs);
        var v1 = cljs.core.nth.call(null, vec__25130, 0, null);
        var vnext = cljs.core.nth.call(null, vec__25130, 1, null);
        var logger = level__GT_logger.call(null, level, console.log);
        if (cljs.core.truth_(function() {
          var or__4685__auto__ = raw_output_QMARK_;
          if (cljs.core.truth_(or__4685__auto__)) {
            return or__4685__auto__;
          } else {
            return cljs.core._EQ_.call(null, v1, new cljs.core.Keyword("timbre", "raw", "timbre/raw", -1823417723));
          }
        }())) {
          var output = output_fn.call(null, cljs.core.merge.call(null, data, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3), new cljs.core.Delay(function(map__25129, map__25129__$1, level, output_fn, vargs_, vargs, vec__25130, v1, vnext, logger, level__GT_logger, vec__25126, map__25127, map__25127__$1, raw_output_QMARK_) {
            return function() {
              return "";
            };
          }(map__25129, map__25129__$1, level, output_fn, vargs_, vargs, vec__25130, v1, vnext, logger, level__GT_logger, vec__25126, map__25127, map__25127__$1, raw_output_QMARK_), null), new cljs.core.Keyword(null, "?err_", "?err_", 789480858), new cljs.core.Delay(function(map__25129, map__25129__$1, level, output_fn, vargs_, vargs, vec__25130, v1, vnext, logger, level__GT_logger, vec__25126, map__25127, map__25127__$1, raw_output_QMARK_) {
            return function() {
              return null;
            };
          }(map__25129, map__25129__$1, level, output_fn, vargs_, vargs, vec__25130, v1, vnext, logger, level__GT_logger, vec__25126, map__25127, map__25127__$1, raw_output_QMARK_), null)], null)));
          var args = cljs.core.cons.call(null, output, cljs.core.cons.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "?err_", "?err_", 789480858)).cljs$core$IFn$_invoke$arity$1(data)), vnext));
          return logger.apply(console, cljs.core.into_array.call(null, args));
        } else {
          return logger.call(console, output_fn.call(null, data));
        }
      };
    }(level__GT_logger, vec__25126, map__25127, map__25127__$1, raw_output_QMARK_);
  }() : function(vec__25126, map__25127, map__25127__$1, raw_output_QMARK_) {
    return function(data) {
      return null;
    };
  }(vec__25126, map__25127, map__25127__$1, raw_output_QMARK_)], null);
};
taoensso.timbre.appenders.core.console_appender.cljs$lang$maxFixedArity = 0;
taoensso.timbre.appenders.core.console_appender.cljs$lang$applyTo = function(seq25124) {
  return taoensso.timbre.appenders.core.console_appender.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq25124));
};
taoensso.timbre.appenders.core.console__QMARK_appender = taoensso.timbre.appenders.core.console_appender;
goog.provide("taoensso.timbre");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("taoensso.encore");
goog.require("taoensso.timbre.appenders.core");
if (cljs.core.vector_QMARK_.call(null, taoensso.encore.encore_version)) {
  taoensso.encore.assert_min_encore_version.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 33, 0], null));
} else {
  taoensso.encore.assert_min_encore_version.call(null, 2.33);
}
taoensso.timbre.stacktrace;
taoensso.timbre.default_output_fn = function taoensso$timbre$default_output_fn(var_args) {
  var args29068 = [];
  var len__5743__auto___29076 = arguments.length;
  var i__5744__auto___29077 = 0;
  while (true) {
    if (i__5744__auto___29077 < len__5743__auto___29076) {
      args29068.push(arguments[i__5744__auto___29077]);
      var G__29078 = i__5744__auto___29077 + 1;
      i__5744__auto___29077 = G__29078;
      continue;
    } else {
    }
    break;
  }
  var G__29070 = args29068.length;
  switch(G__29070) {
    case 1:
      return taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29068.length)].join(""));;
  }
};
taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$1 = function(data) {
  return taoensso.timbre.default_output_fn.call(null, null, data);
};
taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2 = function(p__29071, data) {
  var map__29072 = p__29071;
  var map__29072__$1 = (!(map__29072 == null) ? map__29072.cljs$lang$protocol_mask$partition0$ & 64 || map__29072.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29072) : map__29072;
  var opts = map__29072__$1;
  var no_stacktrace_QMARK_ = cljs.core.get.call(null, map__29072__$1, new cljs.core.Keyword(null, "no-stacktrace?", "no-stacktrace?", 1701072694));
  var stacktrace_fonts = cljs.core.get.call(null, map__29072__$1, new cljs.core.Keyword(null, "stacktrace-fonts", "stacktrace-fonts", 830799382));
  var map__29074 = data;
  var map__29074__$1 = (!(map__29074 == null) ? map__29074.cljs$lang$protocol_mask$partition0$ & 64 || map__29074.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29074) : map__29074;
  var level = cljs.core.get.call(null, map__29074__$1, new cljs.core.Keyword(null, "level", "level", 1290497552));
  var _QMARK_err_ = cljs.core.get.call(null, map__29074__$1, new cljs.core.Keyword(null, "?err_", "?err_", 789480858));
  var vargs_ = cljs.core.get.call(null, map__29074__$1, new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148));
  var msg_ = cljs.core.get.call(null, map__29074__$1, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3));
  var _QMARK_ns_str = cljs.core.get.call(null, map__29074__$1, new cljs.core.Keyword(null, "?ns-str", "?ns-str", 2012733966));
  var hostname_ = cljs.core.get.call(null, map__29074__$1, new cljs.core.Keyword(null, "hostname_", "hostname_", -2091647379));
  var timestamp_ = cljs.core.get.call(null, map__29074__$1, new cljs.core.Keyword(null, "timestamp_", "timestamp_", -954533417));
  var _QMARK_line = cljs.core.get.call(null, map__29074__$1, new cljs.core.Keyword(null, "?line", "?line", -631853385));
  return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.name.call(null, level))), cljs.core.str(" "), cljs.core.str("["), cljs.core.str(function() {
    var or__4685__auto__ = _QMARK_ns_str;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return "?";
    }
  }()), cljs.core.str(":"), cljs.core.str(function() {
    var or__4685__auto__ = _QMARK_line;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return "?";
    }
  }()), cljs.core.str("] - "), cljs.core.str(cljs.core.force.call(null, msg_)), cljs.core.str(cljs.core.truth_(no_stacktrace_QMARK_) ? null : function() {
    var temp__4657__auto__ = cljs.core.force.call(null, _QMARK_err_);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var err = temp__4657__auto__;
      return [cljs.core.str("\n"), cljs.core.str(taoensso.timbre.stacktrace.call(null, err, opts))].join("");
    } else {
      return null;
    }
  }())].join("");
};
taoensso.timbre.default_output_fn.cljs$lang$maxFixedArity = 2;
taoensso.timbre.default_err;
taoensso.timbre.default_out;
taoensso.timbre.println_appender = taoensso.timbre.appenders.core.println_appender;
taoensso.timbre.console_appender = taoensso.timbre.appenders.core.console_appender;
taoensso.timbre.example_config = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "level", "level", 1290497552), new cljs.core.Keyword(null, "debug", "debug", -1608172596), new cljs.core.Keyword(null, "ns-whitelist", "ns-whitelist", -1717299774), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "ns-blacklist", "ns-blacklist", 1957763142), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "middleware", "middleware", 1462115504), cljs.core.PersistentVector.EMPTY, 
new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), taoensso.timbre.default_output_fn, new cljs.core.Keyword(null, "appenders", "appenders", 1245583998), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "console", "console", 1228072057), taoensso.timbre.console_appender.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)], null);
if (typeof taoensso.timbre._STAR_config_STAR_ !== "undefined") {
} else {
  taoensso.timbre._STAR_config_STAR_ = taoensso.timbre.example_config;
}
taoensso.timbre.swap_config_BANG_ = function taoensso$timbre$swap_config_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___29082 = arguments.length;
  var i__5744__auto___29083 = 0;
  while (true) {
    if (i__5744__auto___29083 < len__5743__auto___29082) {
      args__5750__auto__.push(arguments[i__5744__auto___29083]);
      var G__29084 = i__5744__auto___29083 + 1;
      i__5744__auto___29083 = G__29084;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return taoensso.timbre._STAR_config_STAR_ = cljs.core.apply.call(null, f, taoensso.timbre._STAR_config_STAR_, args);
};
taoensso.timbre.swap_config_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.timbre.swap_config_BANG_.cljs$lang$applyTo = function(seq29080) {
  var G__29081 = cljs.core.first.call(null, seq29080);
  var seq29080__$1 = cljs.core.next.call(null, seq29080);
  return taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29081, seq29080__$1);
};
taoensso.timbre.set_config_BANG_ = function taoensso$timbre$set_config_BANG_(m) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(_old) {
    return m;
  });
};
taoensso.timbre.merge_config_BANG_ = function taoensso$timbre$merge_config_BANG_(m) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(old) {
    return taoensso.encore.nested_merge.call(null, old, m);
  });
};
taoensso.timbre.set_level_BANG_ = function taoensso$timbre$set_level_BANG_(level) {
  return taoensso.timbre.swap_config_BANG_.call(null, function(m) {
    return cljs.core.merge.call(null, m, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "level", "level", 1290497552), level], null));
  });
};
taoensso.timbre.ordered_levels = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trace", "trace", -1082747415), new cljs.core.Keyword(null, "debug", "debug", -1608172596), new cljs.core.Keyword(null, "info", "info", -317069002), new cljs.core.Keyword(null, "warn", "warn", -436710552), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "fatal", "fatal", 1874419888), new cljs.core.Keyword(null, "report", 
"report", 1394055010)], null);
taoensso.timbre.scored_levels = cljs.core.zipmap.call(null, taoensso.timbre.ordered_levels, cljs.core.next.call(null, cljs.core.range.call(null)));
taoensso.timbre.valid_levels = cljs.core.set.call(null, taoensso.timbre.ordered_levels);
taoensso.timbre.valid_level = function taoensso$timbre$valid_level(level) {
  var or__4685__auto__ = taoensso.timbre.valid_levels.call(null, level);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Invalid logging level: "), cljs.core.str(level)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "level", "level", 1290497552), level], null));
  }
};
taoensso.timbre.level_GT__EQ_ = function taoensso$timbre$level_GT__EQ_(x, y) {
  return cljs.core.long$.call(null, taoensso.timbre.scored_levels.call(null, taoensso.timbre.valid_level.call(null, x))) >= cljs.core.long$.call(null, taoensso.timbre.scored_levels.call(null, taoensso.timbre.valid_level.call(null, y)));
};
taoensso.timbre.compile_ns_filters = function() {
  var __GT_re_pattern = function(x) {
    if (cljs.core.truth_(taoensso.encore.re_pattern_QMARK_.call(null, x))) {
      return x;
    } else {
      if (typeof x === "string") {
        var s = clojure.string.replace.call(null, clojure.string.replace.call(null, [cljs.core.str("^"), cljs.core.str(x), cljs.core.str("$")].join(""), ".", "\\."), "*", "(.*)");
        return cljs.core.re_pattern.call(null, s);
      } else {
        throw cljs.core.ex_info.call(null, "No matching clause", cljs.core.PersistentArrayMap.EMPTY);
      }
    }
  };
  return taoensso.encore.memoize_.call(null, function(__GT_re_pattern) {
    return function(whitelist, blacklist) {
      var whitelist_STAR_ = cljs.core.mapv.call(null, __GT_re_pattern, whitelist);
      var blacklist_STAR_ = cljs.core.mapv.call(null, __GT_re_pattern, blacklist);
      var white_filter = cljs.core.empty_QMARK_.call(null, whitelist_STAR_) ? function(whitelist_STAR_, blacklist_STAR_, __GT_re_pattern) {
        return function(ns) {
          return true;
        };
      }(whitelist_STAR_, blacklist_STAR_, __GT_re_pattern) : function(whitelist_STAR_, blacklist_STAR_, __GT_re_pattern) {
        return function(ns) {
          return cljs.core.some.call(null, function(whitelist_STAR_, blacklist_STAR_, __GT_re_pattern) {
            return function(p1__29085_SHARP_) {
              return cljs.core.re_find.call(null, p1__29085_SHARP_, ns);
            };
          }(whitelist_STAR_, blacklist_STAR_, __GT_re_pattern), whitelist_STAR_);
        };
      }(whitelist_STAR_, blacklist_STAR_, __GT_re_pattern);
      var black_filter = cljs.core.empty_QMARK_.call(null, blacklist_STAR_) ? function(whitelist_STAR_, blacklist_STAR_, white_filter, __GT_re_pattern) {
        return function(ns) {
          return true;
        };
      }(whitelist_STAR_, blacklist_STAR_, white_filter, __GT_re_pattern) : function(whitelist_STAR_, blacklist_STAR_, white_filter, __GT_re_pattern) {
        return function(ns) {
          return cljs.core.not.call(null, cljs.core.some.call(null, function(whitelist_STAR_, blacklist_STAR_, white_filter, __GT_re_pattern) {
            return function(p1__29086_SHARP_) {
              return cljs.core.re_find.call(null, p1__29086_SHARP_, ns);
            };
          }(whitelist_STAR_, blacklist_STAR_, white_filter, __GT_re_pattern), blacklist_STAR_));
        };
      }(whitelist_STAR_, blacklist_STAR_, white_filter, __GT_re_pattern);
      return function(whitelist_STAR_, blacklist_STAR_, white_filter, black_filter, __GT_re_pattern) {
        return function(ns) {
          if (cljs.core.truth_(function() {
            var and__4673__auto__ = white_filter.call(null, ns);
            if (cljs.core.truth_(and__4673__auto__)) {
              return black_filter.call(null, ns);
            } else {
              return and__4673__auto__;
            }
          }())) {
            return ns;
          } else {
            return null;
          }
        };
      }(whitelist_STAR_, blacklist_STAR_, white_filter, black_filter, __GT_re_pattern);
    };
  }(__GT_re_pattern));
}();
taoensso.timbre.ns_filter = taoensso.encore.memoize_.call(null, function(whitelist, blacklist, ns) {
  if (cljs.core.truth_(function() {
    var __x = ns;
    try {
      if (typeof __x === "string") {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e29087) {
      if (e29087 instanceof Error) {
        var __t = e29087;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.timbre", null, "(string? ns)", __x, __t, null);
      } else {
        throw e29087;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null))))].join(""));
  }
  return taoensso.timbre.compile_ns_filters.call(null, whitelist, blacklist).call(null, ns);
});
taoensso.timbre.get_hostname;
taoensso.timbre.__GT_delay = function taoensso$timbre$__GT_delay(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return x;
  } else {
    return new cljs.core.Delay(function() {
      return x;
    }, null);
  }
};
taoensso.timbre.str_join = function taoensso$timbre$str_join(xs) {
  return taoensso.encore.str_join.call(null, " ", cljs.core.map.call(null, function(x) {
    var x__$1 = taoensso.encore.nil__GT_str.call(null, x);
    if (cljs.core.record_QMARK_.call(null, x__$1)) {
      return cljs.core.pr_str.call(null, x__$1);
    } else {
      return x__$1;
    }
  }), xs);
};
taoensso.timbre.default_data_hash_fn = function taoensso$timbre$default_data_hash_fn(data) {
  var map__29090 = data;
  var map__29090__$1 = (!(map__29090 == null) ? map__29090.cljs$lang$protocol_mask$partition0$ & 64 || map__29090.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29090) : map__29090;
  var _QMARK_hash_arg = cljs.core.get.call(null, map__29090__$1, new cljs.core.Keyword(null, "?hash-arg", "?hash-arg", 1219916229));
  var _QMARK_ns_str = cljs.core.get.call(null, map__29090__$1, new cljs.core.Keyword(null, "?ns-str", "?ns-str", 2012733966));
  var _QMARK_line = cljs.core.get.call(null, map__29090__$1, new cljs.core.Keyword(null, "?line", "?line", -631853385));
  var vargs_ = cljs.core.get.call(null, map__29090__$1, new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148));
  return [cljs.core.str(function() {
    var or__4685__auto__ = _QMARK_hash_arg;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_ns_str, function() {
        var or__4685__auto____$1 = _QMARK_line;
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          return cljs.core.deref.call(null, vargs_);
        }
      }()], null);
    }
  }())].join("");
};
if (typeof taoensso.timbre.get_rate_limiter !== "undefined") {
} else {
  taoensso.timbre.get_rate_limiter = taoensso.encore.memoize_.call(null, function(appender_id, specs) {
    return taoensso.encore.rate_limiter_STAR_.call(null, specs);
  });
}
taoensso.timbre.inherit_over = function taoensso$timbre$inherit_over(k, appender, config, default$) {
  var or__4685__auto__ = function() {
    var a = cljs.core.get.call(null, appender, k);
    if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, a, new cljs.core.Keyword(null, "inherit", "inherit", -1840815422)))) {
      return null;
    } else {
      return a;
    }
  }();
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    var or__4685__auto____$1 = cljs.core.get.call(null, config, k);
    if (cljs.core.truth_(or__4685__auto____$1)) {
      return or__4685__auto____$1;
    } else {
      return default$;
    }
  }
};
taoensso.timbre.inherit_into = function taoensso$timbre$inherit_into(k, appender, config, default$) {
  return cljs.core.merge.call(null, default$, cljs.core.get.call(null, config, k), function() {
    var a = cljs.core.get.call(null, appender, k);
    if (cljs.core.truth_(taoensso.encore.kw_identical_QMARK_.call(null, a, new cljs.core.Keyword(null, "inherit", "inherit", -1840815422)))) {
      return null;
    } else {
      return a;
    }
  }());
};
taoensso.timbre._STAR_context_STAR_ = null;
taoensso.timbre.log_QMARK_ = function taoensso$timbre$log_QMARK_(var_args) {
  var args29092 = [];
  var len__5743__auto___29095 = arguments.length;
  var i__5744__auto___29096 = 0;
  while (true) {
    if (i__5744__auto___29096 < len__5743__auto___29095) {
      args29092.push(arguments[i__5744__auto___29096]);
      var G__29097 = i__5744__auto___29096 + 1;
      i__5744__auto___29096 = G__29097;
      continue;
    } else {
    }
    break;
  }
  var G__29094 = args29092.length;
  switch(G__29094) {
    case 1:
      return taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29092.length)].join(""));;
  }
};
taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return taoensso.timbre.log_QMARK_.call(null, level, null, null);
};
taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(level, _QMARK_ns_str) {
  return taoensso.timbre.log_QMARK_.call(null, level, _QMARK_ns_str, null);
};
taoensso.timbre.log_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(level, _QMARK_ns_str, config) {
  var config__$1 = function() {
    var or__4685__auto__ = config;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return taoensso.timbre._STAR_config_STAR_;
    }
  }();
  var active_level = function() {
    var or__4685__auto__ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$1(config__$1);
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return new cljs.core.Keyword(null, "report", "report", 1394055010);
    }
  }();
  var and__4673__auto__ = taoensso.timbre.level_GT__EQ_.call(null, level, active_level);
  if (cljs.core.truth_(and__4673__auto__)) {
    var and__4673__auto____$1 = taoensso.timbre.ns_filter.call(null, (new cljs.core.Keyword(null, "ns-whitelist", "ns-whitelist", -1717299774)).cljs$core$IFn$_invoke$arity$1(config__$1), (new cljs.core.Keyword(null, "ns-blacklist", "ns-blacklist", 1957763142)).cljs$core$IFn$_invoke$arity$1(config__$1), function() {
      var or__4685__auto__ = _QMARK_ns_str;
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return "";
      }
    }());
    if (cljs.core.truth_(and__4673__auto____$1)) {
      return true;
    } else {
      return and__4673__auto____$1;
    }
  } else {
    return and__4673__auto__;
  }
};
taoensso.timbre.log_QMARK_.cljs$lang$maxFixedArity = 3;
taoensso.timbre.vargs__GT_margs = function taoensso$timbre$vargs__GT_margs(vargs, a0_err_QMARK_) {
  var vec__29103 = vargs;
  var v0 = cljs.core.nth.call(null, vec__29103, 0, null);
  var v = vec__29103;
  var vec__29104 = cljs.core.truth_(function() {
    var and__4673__auto__ = a0_err_QMARK_;
    if (cljs.core.truth_(and__4673__auto__)) {
      return taoensso.encore.error_QMARK_.call(null, v0);
    } else {
      return and__4673__auto__;
    }
  }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v0, taoensso.encore.vnext.call(null, v)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, v], null);
  var _QMARK_err = cljs.core.nth.call(null, vec__29104, 0, null);
  var v__$1 = cljs.core.nth.call(null, vec__29104, 1, null);
  var vec__29105 = v__$1;
  var v0__$1 = cljs.core.nth.call(null, vec__29105, 0, null);
  var v__$2 = vec__29105;
  var vec__29106 = cljs.core.map_QMARK_.call(null, v0__$1) && cljs.core.contains_QMARK_.call(null, v0__$1, new cljs.core.Keyword("timbre", "hash", "timbre/hash", -221081827)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("timbre", "hash", "timbre/hash", -221081827)).cljs$core$IFn$_invoke$arity$1(v0__$1), taoensso.encore.vnext.call(null, v__$2)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 
  v__$2], null);
  var _QMARK_hash_arg = cljs.core.nth.call(null, vec__29106, 0, null);
  var v__$3 = cljs.core.nth.call(null, vec__29106, 1, null);
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "?err", "?err", 549653299), _QMARK_err, new cljs.core.Keyword(null, "?hash-arg", "?hash-arg", 1219916229), _QMARK_hash_arg, new cljs.core.Keyword(null, "vargs", "vargs", -966597273), v__$3], null);
};
taoensso.timbre._log_BANG_ = function taoensso$timbre$_log_BANG_(config, level, _QMARK_ns_str, _QMARK_file, _QMARK_line, msg_type, _QMARK_err, vargs_, _QMARK_base_data) {
  if (cljs.core.truth_(taoensso.timbre.log_QMARK_.call(null, level, _QMARK_ns_str, config))) {
    var instant_29117 = taoensso.encore.now_dt.call(null);
    var context_29118 = taoensso.timbre._STAR_context_STAR_;
    var a0_err_QMARK__29119 = taoensso.encore.kw_identical_QMARK_.call(null, _QMARK_err, new cljs.core.Keyword(null, "auto", "auto", -566279492));
    var margs__29120 = new cljs.core.Delay(function(instant_29117, context_29118, a0_err_QMARK__29119) {
      return function() {
        return taoensso.timbre.vargs__GT_margs.call(null, cljs.core.deref.call(null, vargs_), a0_err_QMARK__29119);
      };
    }(instant_29117, context_29118, a0_err_QMARK__29119), null);
    var _QMARK_err__29121 = new cljs.core.Delay(function(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120) {
      return function() {
        if (cljs.core.truth_(a0_err_QMARK__29119)) {
          return (new cljs.core.Keyword(null, "?err", "?err", 549653299)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, margs__29120));
        } else {
          return _QMARK_err;
        }
      };
    }(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120), null);
    var _QMARK_hash_arg__29122 = new cljs.core.Delay(function(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121) {
      return function() {
        return (new cljs.core.Keyword(null, "?hash-arg", "?hash-arg", 1219916229)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, margs__29120));
      };
    }(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121), null);
    var vargs__29123__$1 = new cljs.core.Delay(function(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122) {
      return function() {
        return (new cljs.core.Keyword(null, "vargs", "vargs", -966597273)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, margs__29120));
      };
    }(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122), null);
    var data_29124 = cljs.core.merge.call(null, _QMARK_base_data, cljs.core.map_QMARK_.call(null, context_29118) ? context_29118 : null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "instant", "instant", 655498374), new cljs.core.Keyword(null, "config", "config", 994861415), new cljs.core.Keyword(null, "?file", "?file", 1533429675), new cljs.core.Keyword(null, "error-level?", "error-level?", 778415885), new cljs.core.Keyword(null, "?ns-str", "?ns-str", 2012733966), new cljs.core.Keyword(null, 
    "level", "level", 1290497552), new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148), new cljs.core.Keyword(null, "?hash-arg_", "?hash-arg_", -1971558602), new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "?line", "?line", -631853385), new cljs.core.Keyword(null, "?err_", "?err_", 789480858)], [instant_29117, config, _QMARK_file, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fatal", 
    "fatal", 1874419888), null, new cljs.core.Keyword(null, "error", "error", -978969032), null], null), null)).call(null, level), _QMARK_ns_str, level, vargs__29123__$1, _QMARK_hash_arg__29122, context_29118, _QMARK_line, _QMARK_err__29121]));
    var msg_fn_29125 = function(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124) {
      return function(vargs___$2) {
        if (msg_type == null) {
          return null;
        } else {
          var temp__4657__auto__ = function() {
            var __x = function() {
              try {
                return cljs.core.deref.call(null, vargs___$2);
              } catch (e29112) {
                if (e29112 instanceof Error) {
                  var __t = e29112;
                  return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.timbre", null, "([:or nil? vector?] (clojure.core/deref vargs_))", taoensso.truss.impl._invar_undefined_val, __t, null);
                } else {
                  throw e29112;
                }
              }
            }();
            if (cljs.core.truth_(function(__x, instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124) {
              return function(__x__$1) {
                var or__4685__auto__ = taoensso.truss.impl.non_throwing.call(null, cljs.core.nil_QMARK_).call(null, __x__$1);
                if (cljs.core.truth_(or__4685__auto__)) {
                  return or__4685__auto__;
                } else {
                  return taoensso.truss.impl.non_throwing.call(null, cljs.core.vector_QMARK_).call(null, __x__$1);
                }
              };
            }(__x, instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124).call(null, __x))) {
              return __x;
            } else {
              return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.timbre", null, "([:or nil? vector?] (clojure.core/deref vargs_))", __x, null, null);
            }
          }();
          if (cljs.core.truth_(temp__4657__auto__)) {
            var vargs = temp__4657__auto__;
            var G__29113 = msg_type instanceof cljs.core.Keyword ? msg_type.fqn : null;
            switch(G__29113) {
              case "p":
                return taoensso.timbre.str_join.call(null, vargs);
                break;
              case "f":
                var vec__29114 = taoensso.encore.vsplit_first.call(null, vargs);
                var fmt = cljs.core.nth.call(null, vec__29114, 0, null);
                var args = cljs.core.nth.call(null, vec__29114, 1, null);
                return taoensso.encore.format_STAR_.call(null, fmt, args);
                break;
              default:
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(msg_type)].join(""));;
            }
          } else {
            return null;
          }
        }
      };
    }(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124);
    var _QMARK_data_29126 = cljs.core.reduce.call(null, function(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124, msg_fn_29125) {
      return function(acc, mf) {
        var result = mf.call(null, acc);
        if (result == null) {
          return cljs.core.reduced.call(null, null);
        } else {
          return result;
        }
      };
    }(instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124, msg_fn_29125), data_29124, (new cljs.core.Keyword(null, "middleware", "middleware", 1462115504)).cljs$core$IFn$_invoke$arity$1(config));
    var _QMARK_data_29127__$1 = function() {
      var temp__4657__auto__ = _QMARK_data_29126;
      if (cljs.core.truth_(temp__4657__auto__)) {
        var data__$1 = temp__4657__auto__;
        return cljs.core.merge.call(null, data__$1, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "?err_", "?err_", 789480858), taoensso.timbre.__GT_delay.call(null, (new cljs.core.Keyword(null, "?err_", "?err_", 789480858)).cljs$core$IFn$_invoke$arity$1(data__$1)), new cljs.core.Keyword(null, "?hash-arg_", "?hash-arg_", -1971558602), taoensso.timbre.__GT_delay.call(null, (new cljs.core.Keyword(null, "?hash-arg_", "?hash-arg_", -1971558602)).cljs$core$IFn$_invoke$arity$1(data__$1)), 
        new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148), taoensso.timbre.__GT_delay.call(null, (new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148)).cljs$core$IFn$_invoke$arity$1(data__$1))], null));
      } else {
        return null;
      }
    }();
    var temp__4657__auto___29129 = _QMARK_data_29127__$1;
    if (cljs.core.truth_(temp__4657__auto___29129)) {
      var data_29130__$1 = temp__4657__auto___29129;
      cljs.core.reduce_kv.call(null, function(data_29130__$1, temp__4657__auto___29129, instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124, msg_fn_29125, _QMARK_data_29126, _QMARK_data_29127__$1) {
        return function(_, id, appender) {
          if (cljs.core.truth_(function() {
            var and__4673__auto__ = (new cljs.core.Keyword(null, "enabled?", "enabled?", -1376075057)).cljs$core$IFn$_invoke$arity$1(appender);
            if (cljs.core.truth_(and__4673__auto__)) {
              return taoensso.timbre.level_GT__EQ_.call(null, level, function() {
                var or__4685__auto__ = (new cljs.core.Keyword(null, "min-level", "min-level", 1634684919)).cljs$core$IFn$_invoke$arity$1(appender);
                if (cljs.core.truth_(or__4685__auto__)) {
                  return or__4685__auto__;
                } else {
                  return new cljs.core.Keyword(null, "trace", "trace", -1082747415);
                }
              }());
            } else {
              return and__4673__auto__;
            }
          }())) {
            var rate_limit_specs = (new cljs.core.Keyword(null, "rate-limit", "rate-limit", 1748082022)).cljs$core$IFn$_invoke$arity$1(appender);
            var data_hash_fn = taoensso.timbre.inherit_over.call(null, new cljs.core.Keyword(null, "data-hash-fn", "data-hash-fn", 1552406760), appender, config, taoensso.timbre.default_data_hash_fn);
            var rate_limit_okay_QMARK_ = function() {
              var or__4685__auto__ = cljs.core.empty_QMARK_.call(null, rate_limit_specs);
              if (or__4685__auto__) {
                return or__4685__auto__;
              } else {
                var rl_fn = taoensso.timbre.get_rate_limiter.call(null, id, rate_limit_specs);
                var data_hash = data_hash_fn.call(null, data_29130__$1);
                return cljs.core.not.call(null, rl_fn.call(null, data_hash));
              }
            }();
            if (rate_limit_okay_QMARK_) {
              var map__29115 = appender;
              var map__29115__$1 = (!(map__29115 == null) ? map__29115.cljs$lang$protocol_mask$partition0$ & 64 || map__29115.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29115) : map__29115;
              var apfn = cljs.core.get.call(null, map__29115__$1, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
              var async_QMARK_ = cljs.core.get.call(null, map__29115__$1, new cljs.core.Keyword(null, "async?", "async?", 1523057758));
              var msg_ = new cljs.core.Delay(function(map__29115, map__29115__$1, apfn, async_QMARK_, rate_limit_specs, data_hash_fn, rate_limit_okay_QMARK_, data_29130__$1, temp__4657__auto___29129, instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124, msg_fn_29125, _QMARK_data_29126, _QMARK_data_29127__$1) {
                return function() {
                  return msg_fn_29125.call(null, (new cljs.core.Keyword(null, "vargs_", "vargs_", 552132148)).cljs$core$IFn$_invoke$arity$1(data_29130__$1));
                };
              }(map__29115, map__29115__$1, apfn, async_QMARK_, rate_limit_specs, data_hash_fn, rate_limit_okay_QMARK_, data_29130__$1, temp__4657__auto___29129, instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124, msg_fn_29125, _QMARK_data_29126, _QMARK_data_29127__$1), null);
              var output_fn = taoensso.timbre.inherit_over.call(null, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), appender, config, taoensso.timbre.default_output_fn);
              var data__$2 = cljs.core.merge.call(null, data_29130__$1, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "appender-id", "appender-id", -1917983538), id, new cljs.core.Keyword(null, "appender", "appender", 1267426510), appender, new cljs.core.Keyword(null, "msg_", "msg_", -1925147E3), msg_, new cljs.core.Keyword(null, "msg-fn", "msg-fn", -1873033940), msg_fn_29125, new cljs.core.Keyword(null, "output-fn", "output-fn", 1600951539), output_fn, new cljs.core.Keyword(null, 
              "data-hash-fn", "data-hash-fn", 1552406760), data_hash_fn], null));
              if (cljs.core.not.call(null, async_QMARK_)) {
                return apfn.call(null, data__$2);
              } else {
                return apfn.call(null, data__$2);
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(data_29130__$1, temp__4657__auto___29129, instant_29117, context_29118, a0_err_QMARK__29119, margs__29120, _QMARK_err__29121, _QMARK_hash_arg__29122, vargs__29123__$1, data_29124, msg_fn_29125, _QMARK_data_29126, _QMARK_data_29127__$1), null, taoensso.encore.clj1098.call(null, (new cljs.core.Keyword(null, "appenders", "appenders", 1245583998)).cljs$core$IFn$_invoke$arity$1(config)));
    } else {
    }
  } else {
  }
  return null;
};
taoensso.timbre.fline = function taoensso$timbre$fline(and_form) {
  return (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, and_form));
};
taoensso.timbre.stacktrace = function taoensso$timbre$stacktrace(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___29137 = arguments.length;
  var i__5744__auto___29138 = 0;
  while (true) {
    if (i__5744__auto___29138 < len__5743__auto___29137) {
      args__5750__auto__.push(arguments[i__5744__auto___29138]);
      var G__29139 = i__5744__auto___29138 + 1;
      i__5744__auto___29138 = G__29139;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$variadic = function(err, p__29133) {
  var vec__29134 = p__29133;
  var map__29135 = cljs.core.nth.call(null, vec__29134, 0, null);
  var map__29135__$1 = (!(map__29135 == null) ? map__29135.cljs$lang$protocol_mask$partition0$ & 64 || map__29135.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29135) : map__29135;
  var opts = map__29135__$1;
  var stacktrace_fonts = cljs.core.get.call(null, map__29135__$1, new cljs.core.Keyword(null, "stacktrace-fonts", "stacktrace-fonts", 830799382));
  return [cljs.core.str(err)].join("");
};
taoensso.timbre.stacktrace.cljs$lang$maxFixedArity = 1;
taoensso.timbre.stacktrace.cljs$lang$applyTo = function(seq29131) {
  var G__29132 = cljs.core.first.call(null, seq29131);
  var seq29131__$1 = cljs.core.next.call(null, seq29131);
  return taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$variadic(G__29132, seq29131__$1);
};
taoensso.timbre.console__QMARK_appender = taoensso.timbre.appenders.core.console_appender;
taoensso.timbre.logging_enabled_QMARK_ = function taoensso$timbre$logging_enabled_QMARK_(level, compile_time_ns) {
  return taoensso.timbre.log_QMARK_.call(null, level, [cljs.core.str(compile_time_ns)].join(""));
};
taoensso.timbre.str_println = function taoensso$timbre$str_println(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___29141 = arguments.length;
  var i__5744__auto___29142 = 0;
  while (true) {
    if (i__5744__auto___29142 < len__5743__auto___29141) {
      args__5750__auto__.push(arguments[i__5744__auto___29142]);
      var G__29143 = i__5744__auto___29142 + 1;
      i__5744__auto___29142 = G__29143;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return taoensso.timbre.str_join.call(null, xs);
};
taoensso.timbre.str_println.cljs$lang$maxFixedArity = 0;
taoensso.timbre.str_println.cljs$lang$applyTo = function(seq29140) {
  return taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq29140));
};
goog.provide("taoensso.sente");
goog.require("cljs.core");
goog.require("taoensso.timbre");
goog.require("taoensso.sente.interfaces");
goog.require("cljs.core.async");
goog.require("taoensso.encore");
goog.require("clojure.string");
if (cljs.core.vector_QMARK_.call(null, taoensso.encore.encore_version)) {
  taoensso.encore.assert_min_encore_version.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 11, 0], null));
} else {
  taoensso.encore.assert_min_encore_version.call(null, 2.11);
}
taoensso.sente.validate_event = function taoensso$sente$validate_event(x) {
  if (!cljs.core.vector_QMARK_.call(null, x)) {
    return new cljs.core.Keyword(null, "wrong-type", "wrong-type", 929556915);
  } else {
    if (cljs.core.not.call(null, (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [1, null, 2, null], null), null)).call(null, cljs.core.count.call(null, x)))) {
      return new cljs.core.Keyword(null, "wrong-length", "wrong-length", 1367572281);
    } else {
      var vec__29147 = x;
      var ev_id = cljs.core.nth.call(null, vec__29147, 0, null);
      var _ = cljs.core.nth.call(null, vec__29147, 1, null);
      if (!(ev_id instanceof cljs.core.Keyword)) {
        return new cljs.core.Keyword(null, "wrong-id-type", "wrong-id-type", -1213601689);
      } else {
        if (cljs.core.not.call(null, cljs.core.namespace.call(null, ev_id))) {
          return new cljs.core.Keyword(null, "unnamespaced-id", "unnamespaced-id", 1976189772);
        } else {
          return null;
        }
      }
    }
  }
};
taoensso.sente.event_QMARK_ = function taoensso$sente$event_QMARK_(x) {
  return taoensso.sente.validate_event.call(null, x) == null;
};
taoensso.sente.as_event = function taoensso$sente$as_event(x) {
  if (cljs.core.truth_(taoensso.sente.event_QMARK_.call(null, x))) {
    return x;
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "bad-event", "chsk/bad-event", -565206930), x], null);
  }
};
taoensso.sente.assert_event = function taoensso$sente$assert_event(x) {
  var temp__4657__auto__ = taoensso.sente.validate_event.call(null, x);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var _QMARK_err = temp__4657__auto__;
    var err_fmt = [cljs.core.str(function() {
      var G__29149 = _QMARK_err instanceof cljs.core.Keyword ? _QMARK_err.fqn : null;
      switch(G__29149) {
        case "wrong-type":
          return "Malformed event (wrong type).";
          break;
        case "wrong-length":
          return "Malformed event (wrong length).";
          break;
        case "wrong-id-type":
          return "Malformed event (`ev-id` should be a namespaced keyword).";
          break;
        case "unnamespaced-id":
          return "Malformed event (`ev-id` should be a namespaced keyword).";
          break;
        case "else":
          return "Malformed event (unknown error).";
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(_QMARK_err)].join(""));;
      }
    }()), cljs.core.str(" Event should be of `[ev-id ?ev-data]` form: %s")].join("");
    throw cljs.core.ex_info.call(null, taoensso.encore.format.call(null, err_fmt, [cljs.core.str(x)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "malformed-event", "malformed-event", -2090896605), x], null));
  } else {
    return null;
  }
};
taoensso.sente.client_event_msg_QMARK_ = function taoensso$sente$client_event_msg_QMARK_(x) {
  var and__4673__auto__ = cljs.core.map_QMARK_.call(null, x);
  if (and__4673__auto__) {
    var and__4673__auto____$1 = taoensso.encore.keys_EQ_.call(null, x, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "event", "event", 301435442), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "?data", "?data", -9471433), null, new cljs.core.Keyword(null, 
    "send-fn", "send-fn", 351002041), null], null), null));
    if (cljs.core.truth_(and__4673__auto____$1)) {
      var map__29153 = x;
      var map__29153__$1 = (!(map__29153 == null) ? map__29153.cljs$lang$protocol_mask$partition0$ & 64 || map__29153.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29153) : map__29153;
      var ch_recv = cljs.core.get.call(null, map__29153__$1, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861));
      var send_fn = cljs.core.get.call(null, map__29153__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
      var state = cljs.core.get.call(null, map__29153__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var event = cljs.core.get.call(null, map__29153__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
      var and__4673__auto____$2 = taoensso.encore.chan_QMARK_.call(null, ch_recv);
      if (cljs.core.truth_(and__4673__auto____$2)) {
        var and__4673__auto____$3 = cljs.core.ifn_QMARK_.call(null, send_fn);
        if (and__4673__auto____$3) {
          var and__4673__auto____$4 = taoensso.encore.atom_QMARK_.call(null, state);
          if (cljs.core.truth_(and__4673__auto____$4)) {
            return taoensso.sente.event_QMARK_.call(null, event);
          } else {
            return and__4673__auto____$4;
          }
        } else {
          return and__4673__auto____$3;
        }
      } else {
        return and__4673__auto____$2;
      }
    } else {
      return and__4673__auto____$1;
    }
  } else {
    return and__4673__auto__;
  }
};
taoensso.sente.server_event_msg_QMARK_ = function taoensso$sente$server_event_msg_QMARK_(x) {
  var and__4673__auto__ = cljs.core.map_QMARK_.call(null, x);
  if (and__4673__auto__) {
    var and__4673__auto____$1 = taoensso.encore.keys_EQ_.call(null, x, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), null, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), null, new cljs.core.Keyword(null, "uid", "uid", -1447769400), 
    null, new cljs.core.Keyword(null, "event", "event", 301435442), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), null, new cljs.core.Keyword(null, "?data", "?data", -9471433), null, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), null], null), null));
    if (cljs.core.truth_(and__4673__auto____$1)) {
      var map__29157 = x;
      var map__29157__$1 = (!(map__29157 == null) ? map__29157.cljs$lang$protocol_mask$partition0$ & 64 || map__29157.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29157) : map__29157;
      var ch_recv = cljs.core.get.call(null, map__29157__$1, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861));
      var send_fn = cljs.core.get.call(null, map__29157__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
      var connected_uids = cljs.core.get.call(null, map__29157__$1, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231));
      var ring_req = cljs.core.get.call(null, map__29157__$1, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961));
      var client_id = cljs.core.get.call(null, map__29157__$1, new cljs.core.Keyword(null, "client-id", "client-id", -464622140));
      var event = cljs.core.get.call(null, map__29157__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
      var _QMARK_reply_fn = cljs.core.get.call(null, map__29157__$1, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592));
      var and__4673__auto____$2 = taoensso.encore.chan_QMARK_.call(null, ch_recv);
      if (cljs.core.truth_(and__4673__auto____$2)) {
        var and__4673__auto____$3 = cljs.core.ifn_QMARK_.call(null, send_fn);
        if (and__4673__auto____$3) {
          var and__4673__auto____$4 = taoensso.encore.atom_QMARK_.call(null, connected_uids);
          if (cljs.core.truth_(and__4673__auto____$4)) {
            var and__4673__auto____$5 = cljs.core.map_QMARK_.call(null, ring_req);
            if (and__4673__auto____$5) {
              var and__4673__auto____$6 = taoensso.encore.nblank_str_QMARK_.call(null, client_id);
              if (cljs.core.truth_(and__4673__auto____$6)) {
                var and__4673__auto____$7 = taoensso.sente.event_QMARK_.call(null, event);
                if (cljs.core.truth_(and__4673__auto____$7)) {
                  return _QMARK_reply_fn == null || cljs.core.ifn_QMARK_.call(null, _QMARK_reply_fn);
                } else {
                  return and__4673__auto____$7;
                }
              } else {
                return and__4673__auto____$6;
              }
            } else {
              return and__4673__auto____$5;
            }
          } else {
            return and__4673__auto____$4;
          }
        } else {
          return and__4673__auto____$3;
        }
      } else {
        return and__4673__auto____$2;
      }
    } else {
      return and__4673__auto____$1;
    }
  } else {
    return and__4673__auto__;
  }
};
taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv, p__29159) {
  var map__29163 = p__29159;
  var map__29163__$1 = (!(map__29163 == null) ? map__29163.cljs$lang$protocol_mask$partition0$ & 64 || map__29163.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29163) : map__29163;
  var ev_msg = map__29163__$1;
  var event = cljs.core.get.call(null, map__29163__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
  var _QMARK_reply_fn = cljs.core.get.call(null, map__29163__$1, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592));
  var vec__29165 = taoensso.sente.as_event.call(null, event);
  var ev_id = cljs.core.nth.call(null, vec__29165, 0, null);
  var ev__QMARK_data = cljs.core.nth.call(null, vec__29165, 1, null);
  var valid_event = vec__29165;
  var ev_msg_STAR_ = cljs.core.merge.call(null, ev_msg, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "event", "event", 301435442), valid_event, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), _QMARK_reply_fn, new cljs.core.Keyword(null, "id", "id", -1388402092), ev_id, new cljs.core.Keyword(null, "?data", "?data", -9471433), ev__QMARK_data], null));
  if (cljs.core.not.call(null, taoensso.sente.server_event_msg_QMARK_.call(null, ev_msg_STAR_))) {
    return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 159, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__29165, ev_id, ev__QMARK_data, valid_event, ev_msg_STAR_, map__29163, map__29163__$1, ev_msg, event, _QMARK_reply_fn) {
      return function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Bad ev-msg: %s", ev_msg], null);
      };
    }(vec__29165, ev_id, ev__QMARK_data, valid_event, ev_msg_STAR_, map__29163, map__29163__$1, ev_msg, event, _QMARK_reply_fn), null), null);
  } else {
    return cljs.core.async.put_BANG_.call(null, ch_recv, ev_msg_STAR_);
  }
};
taoensso.sente.cb_error_QMARK_ = function taoensso$sente$cb_error_QMARK_(cb_reply_clj) {
  return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264), null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439), null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489), null], null), null)).call(null, cb_reply_clj);
};
taoensso.sente.cb_success_QMARK_ = function taoensso$sente$cb_success_QMARK_(cb_reply_clj) {
  return cljs.core.not.call(null, taoensso.sente.cb_error_QMARK_.call(null, cb_reply_clj));
};
taoensso.sente.unpack_STAR_ = function taoensso$sente$unpack_STAR_(packer, pstr) {
  try {
    return taoensso.sente.interfaces.unpack.call(null, packer, function() {
      var __x = pstr;
      try {
        if (typeof __x === "string") {
          return __x;
        } else {
          return taoensso.truss.impl._invar_violation_BANG_.call(null);
        }
      } catch (e29169) {
        if (e29169 instanceof Error) {
          var __t = e29169;
          return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(string? pstr)", __x, __t, null);
        } else {
          throw e29169;
        }
      }
    }());
  } catch (e29168) {
    var t = e29168;
    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 175, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(t) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Bad package: %s (%s)", pstr, t], null);
      };
    }(t), null), null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "bad-package", "chsk/bad-package", 501893679), pstr], null);
  }
};
taoensso.sente.with__QMARK_meta = function taoensso$sente$with__QMARK_meta(x, _QMARK_m) {
  if (cljs.core.seq.call(null, _QMARK_m)) {
    return cljs.core.with_meta.call(null, x, _QMARK_m);
  } else {
    return x;
  }
};
taoensso.sente.pack_STAR_ = function taoensso$sente$pack_STAR_(var_args) {
  var args29170 = [];
  var len__5743__auto___29173 = arguments.length;
  var i__5744__auto___29174 = 0;
  while (true) {
    if (i__5744__auto___29174 < len__5743__auto___29173) {
      args29170.push(arguments[i__5744__auto___29174]);
      var G__29175 = i__5744__auto___29174 + 1;
      i__5744__auto___29174 = G__29175;
      continue;
    } else {
    }
    break;
  }
  var G__29172 = args29170.length;
  switch(G__29172) {
    case 3:
      return taoensso.sente.pack_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return taoensso.sente.pack_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29170.length)].join(""));;
  }
};
taoensso.sente.pack_STAR_.cljs$core$IFn$_invoke$arity$3 = function(packer, _QMARK_packer_meta, clj) {
  return [cljs.core.str("-"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, packer, taoensso.sente.with__QMARK_meta.call(null, clj, _QMARK_packer_meta)))].join("");
};
taoensso.sente.pack_STAR_.cljs$core$IFn$_invoke$arity$4 = function(packer, _QMARK_packer_meta, clj, _QMARK_cb_uuid) {
  var _QMARK_cb_uuid__$1 = cljs.core._EQ_.call(null, _QMARK_cb_uuid, new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321)) ? 0 : _QMARK_cb_uuid;
  var wrapped_clj = cljs.core.truth_(_QMARK_cb_uuid__$1) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj, _QMARK_cb_uuid__$1], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null);
  return [cljs.core.str("+"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, packer, taoensso.sente.with__QMARK_meta.call(null, wrapped_clj, _QMARK_packer_meta)))].join("");
};
taoensso.sente.pack_STAR_.cljs$lang$maxFixedArity = 4;
taoensso.sente.pack = function taoensso$sente$pack(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___29178 = arguments.length;
  var i__5744__auto___29179 = 0;
  while (true) {
    if (i__5744__auto___29179 < len__5743__auto___29178) {
      args__5750__auto__.push(arguments[i__5744__auto___29179]);
      var G__29180 = i__5744__auto___29179 + 1;
      i__5744__auto___29179 = G__29180;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.sente.pack.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.sente.pack.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  var pstr = cljs.core.apply.call(null, taoensso.sente.pack_STAR_, args);
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 193, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(pstr) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Packing: %s -\x3e %s", args, pstr], null);
    };
  }(pstr), null), null);
  return pstr;
};
taoensso.sente.pack.cljs$lang$maxFixedArity = 0;
taoensso.sente.pack.cljs$lang$applyTo = function(seq29177) {
  return taoensso.sente.pack.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq29177));
};
taoensso.sente.unpack = function taoensso$sente$unpack(packer, prefixed_pstr) {
  var __x_29187 = prefixed_pstr;
  try {
    if (typeof __x_29187 === "string") {
    } else {
      taoensso.truss.impl._invar_violation_BANG_.call(null);
    }
  } catch (e29184) {
    if (e29184 instanceof Error) {
      var __t_29188 = e29184;
      taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(string? prefixed-pstr)", __x_29187, __t_29188, null);
    } else {
      throw e29184;
    }
  }
  var prefix = taoensso.encore.substr.call(null, prefixed_pstr, 0, 1);
  var pstr = taoensso.encore.substr.call(null, prefixed_pstr, 1);
  var clj = taoensso.sente.unpack_STAR_.call(null, packer, pstr);
  var wrapped_QMARK_ = function() {
    var G__29186 = prefix;
    switch(G__29186) {
      case "-":
        return false;
        break;
      case "+":
        return true;
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(prefix)].join(""));;
    }
  }();
  var vec__29185 = cljs.core.truth_(wrapped_QMARK_) ? clj : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj, null], null);
  var clj__$1 = cljs.core.nth.call(null, vec__29185, 0, null);
  var _QMARK_cb_uuid = cljs.core.nth.call(null, vec__29185, 1, null);
  var _QMARK_cb_uuid__$1 = cljs.core._EQ_.call(null, 0, _QMARK_cb_uuid) ? new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321) : _QMARK_cb_uuid;
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 205, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(prefix, pstr, clj, wrapped_QMARK_, vec__29185, clj__$1, _QMARK_cb_uuid, _QMARK_cb_uuid__$1) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Unpacking: %s -\x3e %s", prefixed_pstr, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1, _QMARK_cb_uuid__$1], null)], null);
    };
  }(prefix, pstr, clj, wrapped_QMARK_, vec__29185, clj__$1, _QMARK_cb_uuid, _QMARK_cb_uuid__$1), null), null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1, _QMARK_cb_uuid__$1], null);
};
taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_;
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_;
taoensso.sente.make_channel_socket_server_BANG_ = function taoensso$sente$make_channel_socket_server_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___29359 = arguments.length;
  var i__5744__auto___29360 = 0;
  while (true) {
    if (i__5744__auto___29360 < len__5743__auto___29359) {
      args__5750__auto__.push(arguments[i__5744__auto___29360]);
      var G__29361 = i__5744__auto___29360 + 1;
      i__5744__auto___29360 = G__29361;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(web_server_adapter, p__29193) {
  var vec__29194 = p__29193;
  var map__29195 = cljs.core.nth.call(null, vec__29194, 0, null);
  var map__29195__$1 = (!(map__29195 == null) ? map__29195.cljs$lang$protocol_mask$partition0$ & 64 || map__29195.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29195) : map__29195;
  var recv_buf_or_n = cljs.core.get.call(null, map__29195__$1, new cljs.core.Keyword(null, "recv-buf-or-n", "recv-buf-or-n", 1363950355), cljs.core.async.sliding_buffer.call(null, 1E3));
  var send_buf_ms_ajax = cljs.core.get.call(null, map__29195__$1, new cljs.core.Keyword(null, "send-buf-ms-ajax", "send-buf-ms-ajax", 1546129037), 100);
  var send_buf_ms_ws = cljs.core.get.call(null, map__29195__$1, new cljs.core.Keyword(null, "send-buf-ms-ws", "send-buf-ms-ws", -1149586238), 30);
  var user_id_fn = cljs.core.get.call(null, map__29195__$1, new cljs.core.Keyword(null, "user-id-fn", "user-id-fn", -1532150029), function(vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws) {
    return function(ring_req) {
      return cljs.core.get_in.call(null, ring_req, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword(null, "uid", "uid", -1447769400)], null));
    };
  }(vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws));
  var csrf_token_fn = cljs.core.get.call(null, map__29195__$1, new cljs.core.Keyword(null, "csrf-token-fn", "csrf-token-fn", -1846298394), function(vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn) {
    return function(ring_req) {
      var or__4685__auto__ = cljs.core.get_in.call(null, ring_req, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)], null));
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        var or__4685__auto____$1 = cljs.core.get_in.call(null, ring_req, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), new cljs.core.Keyword("ring.middleware.anti-forgery", "anti-forgery-token", "ring.middleware.anti-forgery/anti-forgery-token", 571563484)], null));
        if (cljs.core.truth_(or__4685__auto____$1)) {
          return or__4685__auto____$1;
        } else {
          return cljs.core.get_in.call(null, ring_req, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "session", "session", 1008279103), "__anti-forgery-token"], null));
        }
      }
    };
  }(vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn));
  var handshake_data_fn = cljs.core.get.call(null, map__29195__$1, new cljs.core.Keyword(null, "handshake-data-fn", "handshake-data-fn", 2011983089), function(vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn) {
    return function(ring_req) {
      return null;
    };
  }(vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn));
  var packer = cljs.core.get.call(null, map__29195__$1, new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "edn", "edn", 1317840885));
  if (cljs.core.truth_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var __x = send_buf_ms_ajax;
    try {
      if (cljs.core.truth_(taoensso.encore.pos_int_QMARK_.call(null, __x))) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e29197) {
      if (e29197 instanceof Error) {
        var __t = e29197;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(enc/pos-int? send-buf-ms-ajax)", __x, __t, null);
      } else {
        throw e29197;
      }
    }
  }(), function() {
    var __x = send_buf_ms_ws;
    try {
      if (cljs.core.truth_(taoensso.encore.pos_int_QMARK_.call(null, __x))) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e29198) {
      if (e29198 instanceof Error) {
        var __t = e29198;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(enc/pos-int? send-buf-ms-ws)", __x, __t, null);
      } else {
        throw e29198;
      }
    }
  }()], null))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol("enc", "pos-int?", "enc/pos-int?", -1205796829, null), new cljs.core.Symbol(null, "send-buf-ms-ajax", "send-buf-ms-ajax", -1108306732, null), new cljs.core.Symbol(null, "send-buf-ms-ws", "send-buf-ms-ws", 490945289, null))))].join(""));
  }
  if (cljs.core.truth_(function() {
    var __x = web_server_adapter;
    try {
      if (function(__x, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(p1__29190_SHARP_) {
          if (!(p1__29190_SHARP_ == null)) {
            if (false || p1__29190_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$) {
              return true;
            } else {
              if (!p1__29190_SHARP_.cljs$lang$protocol_mask$partition$) {
                return cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IServerChanAdapter, p1__29190_SHARP_);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, taoensso.sente.interfaces.IServerChanAdapter, p1__29190_SHARP_);
          }
        };
      }(__x, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer).call(null, __x)) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e29199) {
      if (e29199 instanceof Error) {
        var __t = e29199;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "((fn* [p1__29190#] (satisfies? interfaces/IServerChanAdapter p1__29190#)) web-server-adapter)", __x, __t, null);
      } else {
        throw e29199;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29190#", "p1__29190#", 393267259, null)], null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), 
    new cljs.core.Symbol("interfaces", "IServerChanAdapter", "interfaces/IServerChanAdapter", -455981296, null), new cljs.core.Symbol(null, "p1__29190#", "p1__29190#", 393267259, null))), new cljs.core.Symbol(null, "web-server-adapter", "web-server-adapter", -1122606046, null))))].join(""));
  }
  var packer__$1 = taoensso.sente.interfaces.coerce_packer.call(null, packer);
  var ch_recv = cljs.core.async.chan.call(null, recv_buf_or_n);
  var conns_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentArrayMap.EMPTY], null));
  var connected_uids_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.PersistentHashSet.EMPTY], null));
  var send_buffers_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.PersistentArrayMap.EMPTY], null));
  var user_id_fn__$1 = function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(ring_req, client_id) {
      var or__4685__auto__ = user_id_fn.call(null, cljs.core.assoc.call(null, ring_req, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), client_id));
      if (cljs.core.truth_(or__4685__auto__)) {
        return or__4685__auto__;
      } else {
        return new cljs.core.Keyword("taoensso.sente", "nil-uid", "taoensso.sente/nil-uid", -2111603486);
      }
    };
  }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var connect_uid_BANG_ = function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(type, uid) {
      if (cljs.core.truth_(function() {
        var __x = uid;
        try {
          if (cljs.core.truth_(taoensso.truss.impl.nnil_QMARK_.call(null, __x))) {
            return true;
          } else {
            return taoensso.truss.impl._invar_violation_BANG_.call(null);
          }
        } catch (e29201) {
          if (e29201 instanceof Error) {
            var __t = e29201;
            return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(taoensso.truss.impl/nnil? uid)", __x, __t, null);
          } else {
            throw e29201;
          }
        }
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "uid", "uid", 192762127, null))))].join(""));
      }
      var newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.call(null, connected_uids_, cljs.core.PersistentVector.EMPTY, function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(p__29202) {
          var map__29203 = p__29202;
          var map__29203__$1 = (!(map__29203 == null) ? map__29203.cljs$lang$protocol_mask$partition0$ & 64 || map__29203.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29203) : map__29203;
          var old_m = map__29203__$1;
          var ws = cljs.core.get.call(null, map__29203__$1, new cljs.core.Keyword(null, "ws", "ws", 86841443));
          var ajax = cljs.core.get.call(null, map__29203__$1, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
          var any = cljs.core.get.call(null, map__29203__$1, new cljs.core.Keyword(null, "any", "any", 1705907423));
          var new_m = function() {
            var G__29205 = type instanceof cljs.core.Keyword ? type.fqn : null;
            switch(G__29205) {
              case "ws":
                return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), cljs.core.conj.call(null, ws, uid), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), ajax, new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.conj.call(null, any, uid)], null);
                break;
              case "ajax":
                return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), ws, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), cljs.core.conj.call(null, ajax, uid), new cljs.core.Keyword(null, "any", "any", 1705907423), cljs.core.conj.call(null, any, uid)], null);
                break;
              default:
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
            }
          }();
          return taoensso.encore.swapped.call(null, new_m, function() {
            var old_any = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(old_m);
            var new_any = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(new_m);
            if (!cljs.core.contains_QMARK_.call(null, old_any, uid) && cljs.core.contains_QMARK_.call(null, new_any, uid)) {
              return new cljs.core.Keyword(null, "newly-connected", "newly-connected", -2029862681);
            } else {
              return null;
            }
          }());
        };
      }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
      return newly_connected_QMARK_;
    };
  }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var upd_connected_uid_BANG_ = function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(uid) {
      if (cljs.core.truth_(function() {
        var __x = uid;
        try {
          if (cljs.core.truth_(taoensso.truss.impl.nnil_QMARK_.call(null, __x))) {
            return true;
          } else {
            return taoensso.truss.impl._invar_violation_BANG_.call(null);
          }
        } catch (e29206) {
          if (e29206 instanceof Error) {
            var __t = e29206;
            return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(taoensso.truss.impl/nnil? uid)", __x, __t, null);
          } else {
            throw e29206;
          }
        }
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol(null, "uid", "uid", 192762127, null))))].join(""));
      }
      var newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.call(null, connected_uids_, cljs.core.PersistentVector.EMPTY, function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(p__29207) {
          var map__29208 = p__29207;
          var map__29208__$1 = (!(map__29208 == null) ? map__29208.cljs$lang$protocol_mask$partition0$ & 64 || map__29208.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29208) : map__29208;
          var old_m = map__29208__$1;
          var ws = cljs.core.get.call(null, map__29208__$1, new cljs.core.Keyword(null, "ws", "ws", 86841443));
          var ajax = cljs.core.get.call(null, map__29208__$1, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
          var any = cljs.core.get.call(null, map__29208__$1, new cljs.core.Keyword(null, "any", "any", 1705907423));
          var conns_SINGLEQUOTE_ = cljs.core.deref.call(null, conns_);
          var any_ws_clients_QMARK_ = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ws", "ws", 86841443)).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_), uid);
          var any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ajax", "ajax", 814345549)).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_), uid);
          var any_clients_QMARK_ = any_ws_clients_QMARK_ || any_ajax_clients_QMARK_;
          var new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), any_ws_clients_QMARK_ ? cljs.core.conj.call(null, ws, uid) : cljs.core.disj.call(null, ws, uid), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), any_ajax_clients_QMARK_ ? cljs.core.conj.call(null, ajax, uid) : cljs.core.disj.call(null, ajax, uid), new cljs.core.Keyword(null, "any", "any", 1705907423), any_clients_QMARK_ ? cljs.core.conj.call(null, any, uid) : cljs.core.disj.call(null, 
          any, uid)], null);
          return taoensso.encore.swapped.call(null, new_m, function() {
            var old_any = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(old_m);
            var new_any = (new cljs.core.Keyword(null, "any", "any", 1705907423)).cljs$core$IFn$_invoke$arity$1(new_m);
            if (cljs.core.contains_QMARK_.call(null, old_any, uid) && !cljs.core.contains_QMARK_.call(null, new_any, uid)) {
              return new cljs.core.Keyword(null, "newly-disconnected", "newly-disconnected", -1586164962);
            } else {
              return null;
            }
          }());
        };
      }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
      return newly_disconnected_QMARK_;
    };
  }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var send_fn = function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function() {
      var G__29363__delegate = function(user_id, ev, p__29210) {
        var vec__29211 = p__29210;
        var map__29212 = cljs.core.nth.call(null, vec__29211, 0, null);
        var map__29212__$1 = (!(map__29212 == null) ? map__29212.cljs$lang$protocol_mask$partition0$ & 64 || map__29212.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29212) : map__29212;
        var opts = map__29212__$1;
        var flush_QMARK_ = cljs.core.get.call(null, map__29212__$1, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
        var uid_29364 = cljs.core._EQ_.call(null, user_id, new cljs.core.Keyword("sente", "all-users-without-uid", "sente/all-users-without-uid", -42979578)) ? new cljs.core.Keyword("taoensso.sente", "nil-uid", "taoensso.sente/nil-uid", -2111603486) : user_id;
        var __29365 = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 324, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(uid_29364, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, 
        send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function() {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send: (-\x3euid %s) %s", uid_29364, ev], null);
          };
        }(uid_29364, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null);
        var __29366__$1 = cljs.core.truth_(uid_29364) ? null : function() {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Support for sending to `nil` user-ids has been REMOVED. "), cljs.core.str("Please send to `:sente/all-users-without-uid` instead.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "uid", "uid", 192762127, null)))].join(""));
        }();
        var __29367__$2 = taoensso.sente.assert_event.call(null, ev);
        var ev_uuid_29368 = taoensso.encore.uuid_str.call(null);
        var flush_buffer_BANG__29369 = function(uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(type) {
            var temp__4657__auto__ = taoensso.encore.swap_in_BANG_.call(null, send_buffers_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [type], null), function(uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, 
            send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function(m) {
                var vec__29214 = cljs.core.get.call(null, m, uid_29364);
                var ___$3 = cljs.core.nth.call(null, vec__29214, 0, null);
                var ev_uuids = cljs.core.nth.call(null, vec__29214, 1, null);
                if (cljs.core.contains_QMARK_.call(null, ev_uuids, ev_uuid_29368)) {
                  return taoensso.encore.swapped.call(null, cljs.core.dissoc.call(null, m, uid_29364), cljs.core.get.call(null, m, uid_29364));
                } else {
                  return taoensso.encore.swapped.call(null, m, null);
                }
              };
            }(uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
            if (cljs.core.truth_(temp__4657__auto__)) {
              var pulled = temp__4657__auto__;
              var vec__29215 = pulled;
              var buffered_evs = cljs.core.nth.call(null, vec__29215, 0, null);
              var ev_uuids = cljs.core.nth.call(null, vec__29215, 1, null);
              var __x_29370 = buffered_evs;
              try {
                if (cljs.core.vector_QMARK_.call(null, __x_29370)) {
                } else {
                  taoensso.truss.impl._invar_violation_BANG_.call(null);
                }
              } catch (e29216) {
                if (e29216 instanceof Error) {
                  var __t_29371 = e29216;
                  taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(vector? buffered-evs)", __x_29370, __t_29371, null);
                } else {
                  throw e29216;
                }
              }
              var __x_29372 = ev_uuids;
              try {
                if (cljs.core.set_QMARK_.call(null, __x_29372)) {
                } else {
                  taoensso.truss.impl._invar_violation_BANG_.call(null);
                }
              } catch (e29217) {
                if (e29217 instanceof Error) {
                  var __t_29373 = e29217;
                  taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(set? ev-uuids)", __x_29372, __t_29373, null);
                } else {
                  throw e29217;
                }
              }
              var packer_metas = cljs.core.mapv.call(null, cljs.core.meta, buffered_evs);
              var combined_packer_meta = cljs.core.reduce.call(null, cljs.core.merge, cljs.core.PersistentArrayMap.EMPTY, packer_metas);
              var buffered_evs_ppstr = taoensso.sente.pack.call(null, packer__$1, combined_packer_meta, buffered_evs);
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 357, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(packer_metas, combined_packer_meta, buffered_evs_ppstr, vec__29215, buffered_evs, ev_uuids, pulled, temp__4657__auto__, 
              uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["buffered-evs-ppstr: %s (with meta %s)", buffered_evs_ppstr, combined_packer_meta], null);
                };
              }(packer_metas, combined_packer_meta, buffered_evs_ppstr, vec__29215, buffered_evs, ev_uuids, pulled, temp__4657__auto__, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
              packer), null), null);
              var G__29218 = type instanceof cljs.core.Keyword ? type.fqn : null;
              switch(G__29218) {
                case "ws":
                  return taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null, conns_, uid_29364, buffered_evs_ppstr);
                  break;
                case "ajax":
                  return taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null, conns_, uid_29364, buffered_evs_ppstr);
                  break;
                default:
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
              }
            } else {
              return null;
            }
          };
        }(uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
        if (cljs.core._EQ_.call(null, ev, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "close", "chsk/close", 1840295819)], null))) {
          taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 367, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, 
          opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
            return function() {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk closing (client may reconnect): %s", uid_29364], null);
            };
          }(uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null);
          if (cljs.core.truth_(flush_QMARK_)) {
            var seq__29219_29375 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "ajax", "ajax", 814345549)], null));
            var chunk__29220_29376 = null;
            var count__29221_29377 = 0;
            var i__29222_29378 = 0;
            while (true) {
              if (i__29222_29378 < count__29221_29377) {
                var type_29379 = cljs.core._nth.call(null, chunk__29220_29376, i__29222_29378);
                flush_buffer_BANG__29369.call(null, type_29379);
                var G__29380 = seq__29219_29375;
                var G__29381 = chunk__29220_29376;
                var G__29382 = count__29221_29377;
                var G__29383 = i__29222_29378 + 1;
                seq__29219_29375 = G__29380;
                chunk__29220_29376 = G__29381;
                count__29221_29377 = G__29382;
                i__29222_29378 = G__29383;
                continue;
              } else {
                var temp__4657__auto___29384 = cljs.core.seq.call(null, seq__29219_29375);
                if (temp__4657__auto___29384) {
                  var seq__29219_29385__$1 = temp__4657__auto___29384;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__29219_29385__$1)) {
                    var c__5488__auto___29386 = cljs.core.chunk_first.call(null, seq__29219_29385__$1);
                    var G__29387 = cljs.core.chunk_rest.call(null, seq__29219_29385__$1);
                    var G__29388 = c__5488__auto___29386;
                    var G__29389 = cljs.core.count.call(null, c__5488__auto___29386);
                    var G__29390 = 0;
                    seq__29219_29375 = G__29387;
                    chunk__29220_29376 = G__29388;
                    count__29221_29377 = G__29389;
                    i__29222_29378 = G__29390;
                    continue;
                  } else {
                    var type_29391 = cljs.core.first.call(null, seq__29219_29385__$1);
                    flush_buffer_BANG__29369.call(null, type_29391);
                    var G__29392 = cljs.core.next.call(null, seq__29219_29385__$1);
                    var G__29393 = null;
                    var G__29394 = 0;
                    var G__29395 = 0;
                    seq__29219_29375 = G__29392;
                    chunk__29220_29376 = G__29393;
                    count__29221_29377 = G__29394;
                    i__29222_29378 = G__29395;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
          } else {
          }
          var seq__29223_29396 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, conns_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), uid_29364], null))));
          var chunk__29224_29397 = null;
          var count__29225_29398 = 0;
          var i__29226_29399 = 0;
          while (true) {
            if (i__29226_29399 < count__29225_29398) {
              var server_ch_29400 = cljs.core._nth.call(null, chunk__29224_29397, i__29226_29399);
              taoensso.sente.interfaces.sch_close_BANG_.call(null, server_ch_29400);
              var G__29401 = seq__29223_29396;
              var G__29402 = chunk__29224_29397;
              var G__29403 = count__29225_29398;
              var G__29404 = i__29226_29399 + 1;
              seq__29223_29396 = G__29401;
              chunk__29224_29397 = G__29402;
              count__29225_29398 = G__29403;
              i__29226_29399 = G__29404;
              continue;
            } else {
              var temp__4657__auto___29405 = cljs.core.seq.call(null, seq__29223_29396);
              if (temp__4657__auto___29405) {
                var seq__29223_29406__$1 = temp__4657__auto___29405;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__29223_29406__$1)) {
                  var c__5488__auto___29407 = cljs.core.chunk_first.call(null, seq__29223_29406__$1);
                  var G__29408 = cljs.core.chunk_rest.call(null, seq__29223_29406__$1);
                  var G__29409 = c__5488__auto___29407;
                  var G__29410 = cljs.core.count.call(null, c__5488__auto___29407);
                  var G__29411 = 0;
                  seq__29223_29396 = G__29408;
                  chunk__29224_29397 = G__29409;
                  count__29225_29398 = G__29410;
                  i__29226_29399 = G__29411;
                  continue;
                } else {
                  var server_ch_29412 = cljs.core.first.call(null, seq__29223_29406__$1);
                  taoensso.sente.interfaces.sch_close_BANG_.call(null, server_ch_29412);
                  var G__29413 = cljs.core.next.call(null, seq__29223_29406__$1);
                  var G__29414 = null;
                  var G__29415 = 0;
                  var G__29416 = 0;
                  seq__29223_29396 = G__29413;
                  chunk__29224_29397 = G__29414;
                  count__29225_29398 = G__29415;
                  i__29226_29399 = G__29416;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var seq__29227_29417 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, conns_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid_29364], null))));
          var chunk__29228_29418 = null;
          var count__29229_29419 = 0;
          var i__29230_29420 = 0;
          while (true) {
            if (i__29230_29420 < count__29229_29419) {
              var vec__29231_29421 = cljs.core._nth.call(null, chunk__29228_29418, i__29230_29420);
              var _QMARK_server_ch_29422 = cljs.core.nth.call(null, vec__29231_29421, 0, null);
              var __29423__$3 = cljs.core.nth.call(null, vec__29231_29421, 1, null);
              var temp__4657__auto___29424 = _QMARK_server_ch_29422;
              if (cljs.core.truth_(temp__4657__auto___29424)) {
                var server_ch_29425 = temp__4657__auto___29424;
                taoensso.sente.interfaces.sch_close_BANG_.call(null, server_ch_29425);
              } else {
              }
              var G__29426 = seq__29227_29417;
              var G__29427 = chunk__29228_29418;
              var G__29428 = count__29229_29419;
              var G__29429 = i__29230_29420 + 1;
              seq__29227_29417 = G__29426;
              chunk__29228_29418 = G__29427;
              count__29229_29419 = G__29428;
              i__29230_29420 = G__29429;
              continue;
            } else {
              var temp__4657__auto___29430 = cljs.core.seq.call(null, seq__29227_29417);
              if (temp__4657__auto___29430) {
                var seq__29227_29431__$1 = temp__4657__auto___29430;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__29227_29431__$1)) {
                  var c__5488__auto___29432 = cljs.core.chunk_first.call(null, seq__29227_29431__$1);
                  var G__29433 = cljs.core.chunk_rest.call(null, seq__29227_29431__$1);
                  var G__29434 = c__5488__auto___29432;
                  var G__29435 = cljs.core.count.call(null, c__5488__auto___29432);
                  var G__29436 = 0;
                  seq__29227_29417 = G__29433;
                  chunk__29228_29418 = G__29434;
                  count__29229_29419 = G__29435;
                  i__29230_29420 = G__29436;
                  continue;
                } else {
                  var vec__29232_29437 = cljs.core.first.call(null, seq__29227_29431__$1);
                  var _QMARK_server_ch_29438 = cljs.core.nth.call(null, vec__29232_29437, 0, null);
                  var __29439__$3 = cljs.core.nth.call(null, vec__29232_29437, 1, null);
                  var temp__4657__auto___29440__$1 = _QMARK_server_ch_29438;
                  if (cljs.core.truth_(temp__4657__auto___29440__$1)) {
                    var server_ch_29441 = temp__4657__auto___29440__$1;
                    taoensso.sente.interfaces.sch_close_BANG_.call(null, server_ch_29441);
                  } else {
                  }
                  var G__29442 = cljs.core.next.call(null, seq__29227_29431__$1);
                  var G__29443 = null;
                  var G__29444 = 0;
                  var G__29445 = 0;
                  seq__29227_29417 = G__29442;
                  chunk__29228_29418 = G__29443;
                  count__29229_29419 = G__29444;
                  i__29230_29420 = G__29445;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        } else {
          var seq__29233_29446 = cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "ajax", "ajax", 814345549)], null));
          var chunk__29234_29447 = null;
          var count__29235_29448 = 0;
          var i__29236_29449 = 0;
          while (true) {
            if (i__29236_29449 < count__29235_29448) {
              var type_29450 = cljs.core._nth.call(null, chunk__29234_29447, i__29236_29449);
              taoensso.encore.swap_in_BANG_.call(null, send_buffers_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type_29450, uid_29364], null), function(seq__29233_29446, chunk__29234_29447, count__29235_29448, i__29236_29449, type_29450, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, 
              connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function(_QMARK_v) {
                  if (cljs.core.not.call(null, _QMARK_v)) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null), cljs.core.PersistentHashSet.fromArray([ev_uuid_29368], true)], null);
                  } else {
                    var vec__29237 = _QMARK_v;
                    var buffered_evs = cljs.core.nth.call(null, vec__29237, 0, null);
                    var ev_uuids = cljs.core.nth.call(null, vec__29237, 1, null);
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, buffered_evs, ev), cljs.core.conj.call(null, ev_uuids, ev_uuid_29368)], null);
                  }
                };
              }(seq__29233_29446, chunk__29234_29447, count__29235_29448, i__29236_29449, type_29450, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
              packer));
              var G__29451 = seq__29233_29446;
              var G__29452 = chunk__29234_29447;
              var G__29453 = count__29235_29448;
              var G__29454 = i__29236_29449 + 1;
              seq__29233_29446 = G__29451;
              chunk__29234_29447 = G__29452;
              count__29235_29448 = G__29453;
              i__29236_29449 = G__29454;
              continue;
            } else {
              var temp__4657__auto___29455 = cljs.core.seq.call(null, seq__29233_29446);
              if (temp__4657__auto___29455) {
                var seq__29233_29456__$1 = temp__4657__auto___29455;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__29233_29456__$1)) {
                  var c__5488__auto___29457 = cljs.core.chunk_first.call(null, seq__29233_29456__$1);
                  var G__29458 = cljs.core.chunk_rest.call(null, seq__29233_29456__$1);
                  var G__29459 = c__5488__auto___29457;
                  var G__29460 = cljs.core.count.call(null, c__5488__auto___29457);
                  var G__29461 = 0;
                  seq__29233_29446 = G__29458;
                  chunk__29234_29447 = G__29459;
                  count__29235_29448 = G__29460;
                  i__29236_29449 = G__29461;
                  continue;
                } else {
                  var type_29462 = cljs.core.first.call(null, seq__29233_29456__$1);
                  taoensso.encore.swap_in_BANG_.call(null, send_buffers_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type_29462, uid_29364], null), function(seq__29233_29446, chunk__29234_29447, count__29235_29448, i__29236_29449, type_29462, seq__29233_29456__$1, temp__4657__auto___29455, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, 
                  connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                    return function(_QMARK_v) {
                      if (cljs.core.not.call(null, _QMARK_v)) {
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null), cljs.core.PersistentHashSet.fromArray([ev_uuid_29368], true)], null);
                      } else {
                        var vec__29238 = _QMARK_v;
                        var buffered_evs = cljs.core.nth.call(null, vec__29238, 0, null);
                        var ev_uuids = cljs.core.nth.call(null, vec__29238, 1, null);
                        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, buffered_evs, ev), cljs.core.conj.call(null, ev_uuids, ev_uuid_29368)], null);
                      }
                    };
                  }(seq__29233_29446, chunk__29234_29447, count__29235_29448, i__29236_29449, type_29462, seq__29233_29456__$1, temp__4657__auto___29455, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, 
                  user_id_fn, csrf_token_fn, handshake_data_fn, packer));
                  var G__29463 = cljs.core.next.call(null, seq__29233_29456__$1);
                  var G__29464 = null;
                  var G__29465 = 0;
                  var G__29466 = 0;
                  seq__29233_29446 = G__29463;
                  chunk__29234_29447 = G__29464;
                  count__29235_29448 = G__29465;
                  i__29236_29449 = G__29466;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var c__26140__auto___29467 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___29467, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
            return function() {
              var f__26141__auto__ = function() {
                var switch__26028__auto__ = function(c__26140__auto___29467, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                  return function(state_29248) {
                    var state_val_29249 = state_29248[1];
                    if (state_val_29249 === 1) {
                      var state_29248__$1 = state_29248;
                      if (cljs.core.truth_(flush_QMARK_)) {
                        var statearr_29250_29468 = state_29248__$1;
                        statearr_29250_29468[1] = 2;
                      } else {
                        var statearr_29251_29469 = state_29248__$1;
                        statearr_29251_29469[1] = 3;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_29249 === 2) {
                        var state_29248__$1 = state_29248;
                        var statearr_29252_29470 = state_29248__$1;
                        statearr_29252_29470[2] = null;
                        statearr_29252_29470[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_29249 === 3) {
                          var inst_29241 = cljs.core.async.timeout.call(null, send_buf_ms_ws);
                          var state_29248__$1 = state_29248;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_29248__$1, 5, inst_29241);
                        } else {
                          if (state_val_29249 === 4) {
                            var inst_29245 = state_29248[2];
                            var inst_29246 = flush_buffer_BANG__29369.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443));
                            var state_29248__$1 = function() {
                              var statearr_29253 = state_29248;
                              statearr_29253[7] = inst_29245;
                              return statearr_29253;
                            }();
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_29248__$1, inst_29246);
                          } else {
                            if (state_val_29249 === 5) {
                              var inst_29243 = state_29248[2];
                              var state_29248__$1 = state_29248;
                              var statearr_29254_29471 = state_29248__$1;
                              statearr_29254_29471[2] = inst_29243;
                              statearr_29254_29471[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  };
                }(c__26140__auto___29467, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                return function(switch__26028__auto__, c__26140__auto___29467, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                  return function() {
                    var taoensso$sente$state_machine__26029__auto__ = null;
                    var taoensso$sente$state_machine__26029__auto____0 = function() {
                      var statearr_29258 = [null, null, null, null, null, null, null, null];
                      statearr_29258[0] = taoensso$sente$state_machine__26029__auto__;
                      statearr_29258[1] = 1;
                      return statearr_29258;
                    };
                    var taoensso$sente$state_machine__26029__auto____1 = function(state_29248) {
                      while (true) {
                        var ret_value__26030__auto__ = function() {
                          try {
                            while (true) {
                              var result__26031__auto__ = switch__26028__auto__.call(null, state_29248);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__26031__auto__;
                              }
                              break;
                            }
                          } catch (e29259) {
                            if (e29259 instanceof Object) {
                              var ex__26032__auto__ = e29259;
                              var statearr_29260_29472 = state_29248;
                              statearr_29260_29472[5] = ex__26032__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_29248);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e29259;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__29473 = state_29248;
                          state_29248 = G__29473;
                          continue;
                        } else {
                          return ret_value__26030__auto__;
                        }
                        break;
                      }
                    };
                    taoensso$sente$state_machine__26029__auto__ = function(state_29248) {
                      switch(arguments.length) {
                        case 0:
                          return taoensso$sente$state_machine__26029__auto____0.call(this);
                        case 1:
                          return taoensso$sente$state_machine__26029__auto____1.call(this, state_29248);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__26029__auto____0;
                    taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__26029__auto____1;
                    return taoensso$sente$state_machine__26029__auto__;
                  }();
                }(switch__26028__auto__, c__26140__auto___29467, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
              }();
              var state__26142__auto__ = function() {
                var statearr_29261 = f__26141__auto__.call(null);
                statearr_29261[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___29467;
                return statearr_29261;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
            };
          }(c__26140__auto___29467, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
          var c__26140__auto___29474 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___29474, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
            return function() {
              var f__26141__auto__ = function() {
                var switch__26028__auto__ = function(c__26140__auto___29474, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                  return function(state_29271) {
                    var state_val_29272 = state_29271[1];
                    if (state_val_29272 === 1) {
                      var state_29271__$1 = state_29271;
                      if (cljs.core.truth_(flush_QMARK_)) {
                        var statearr_29273_29475 = state_29271__$1;
                        statearr_29273_29475[1] = 2;
                      } else {
                        var statearr_29274_29476 = state_29271__$1;
                        statearr_29274_29476[1] = 3;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_29272 === 2) {
                        var state_29271__$1 = state_29271;
                        var statearr_29275_29477 = state_29271__$1;
                        statearr_29275_29477[2] = null;
                        statearr_29275_29477[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_29272 === 3) {
                          var inst_29264 = cljs.core.async.timeout.call(null, send_buf_ms_ajax);
                          var state_29271__$1 = state_29271;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_29271__$1, 5, inst_29264);
                        } else {
                          if (state_val_29272 === 4) {
                            var inst_29268 = state_29271[2];
                            var inst_29269 = flush_buffer_BANG__29369.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
                            var state_29271__$1 = function() {
                              var statearr_29276 = state_29271;
                              statearr_29276[7] = inst_29268;
                              return statearr_29276;
                            }();
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_29271__$1, inst_29269);
                          } else {
                            if (state_val_29272 === 5) {
                              var inst_29266 = state_29271[2];
                              var state_29271__$1 = state_29271;
                              var statearr_29277_29478 = state_29271__$1;
                              statearr_29277_29478[2] = inst_29266;
                              statearr_29277_29478[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  };
                }(c__26140__auto___29474, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                return function(switch__26028__auto__, c__26140__auto___29474, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                  return function() {
                    var taoensso$sente$state_machine__26029__auto__ = null;
                    var taoensso$sente$state_machine__26029__auto____0 = function() {
                      var statearr_29281 = [null, null, null, null, null, null, null, null];
                      statearr_29281[0] = taoensso$sente$state_machine__26029__auto__;
                      statearr_29281[1] = 1;
                      return statearr_29281;
                    };
                    var taoensso$sente$state_machine__26029__auto____1 = function(state_29271) {
                      while (true) {
                        var ret_value__26030__auto__ = function() {
                          try {
                            while (true) {
                              var result__26031__auto__ = switch__26028__auto__.call(null, state_29271);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__26031__auto__;
                              }
                              break;
                            }
                          } catch (e29282) {
                            if (e29282 instanceof Object) {
                              var ex__26032__auto__ = e29282;
                              var statearr_29283_29479 = state_29271;
                              statearr_29283_29479[5] = ex__26032__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_29271);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e29282;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__29480 = state_29271;
                          state_29271 = G__29480;
                          continue;
                        } else {
                          return ret_value__26030__auto__;
                        }
                        break;
                      }
                    };
                    taoensso$sente$state_machine__26029__auto__ = function(state_29271) {
                      switch(arguments.length) {
                        case 0:
                          return taoensso$sente$state_machine__26029__auto____0.call(this);
                        case 1:
                          return taoensso$sente$state_machine__26029__auto____1.call(this, state_29271);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__26029__auto____0;
                    taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__26029__auto____1;
                    return taoensso$sente$state_machine__26029__auto__;
                  }();
                }(switch__26028__auto__, c__26140__auto___29474, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
              }();
              var state__26142__auto__ = function() {
                var statearr_29284 = f__26141__auto__.call(null);
                statearr_29284[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___29474;
                return statearr_29284;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
            };
          }(c__26140__auto___29474, uid_29364, __29365, __29366__$1, __29367__$2, ev_uuid_29368, flush_buffer_BANG__29369, vec__29211, map__29212, map__29212__$1, opts, flush_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
        }
        return null;
      };
      var G__29363 = function(user_id, ev, var_args) {
        var p__29210 = null;
        if (arguments.length > 2) {
          var G__29481__i = 0, G__29481__a = new Array(arguments.length - 2);
          while (G__29481__i < G__29481__a.length) {
            G__29481__a[G__29481__i] = arguments[G__29481__i + 2];
            ++G__29481__i;
          }
          p__29210 = new cljs.core.IndexedSeq(G__29481__a, 0);
        }
        return G__29363__delegate.call(this, user_id, ev, p__29210);
      };
      G__29363.cljs$lang$maxFixedArity = 2;
      G__29363.cljs$lang$applyTo = function(arglist__29482) {
        var user_id = cljs.core.first(arglist__29482);
        arglist__29482 = cljs.core.next(arglist__29482);
        var ev = cljs.core.first(arglist__29482);
        var p__29210 = cljs.core.rest(arglist__29482);
        return G__29363__delegate(user_id, ev, p__29210);
      };
      G__29363.cljs$core$IFn$_invoke$arity$variadic = G__29363__delegate;
      return G__29363;
    }();
  }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
  var ev_msg_const = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), ch_recv, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), connected_uids_], null);
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), ch_recv, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "connected-uids", "connected-uids", 1454332231), connected_uids_, new cljs.core.Keyword(null, "ajax-post-fn", "ajax-post-fn", 1830071264), function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, 
  ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(ring_req) {
      return taoensso.sente.interfaces.ring_req__GT_server_ch_resp.call(null, web_server_adapter, ring_req, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-open", "on-open", -1391088163), function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
      packer) {
        return function(server_ch) {
          var params = cljs.core.get.call(null, ring_req, new cljs.core.Keyword(null, "params", "params", 710516235));
          var ppstr = cljs.core.get.call(null, params, new cljs.core.Keyword(null, "ppstr", "ppstr", 1557495252));
          var client_id = cljs.core.get.call(null, params, new cljs.core.Keyword(null, "client-id", "client-id", -464622140));
          var vec__29285 = taoensso.sente.unpack.call(null, packer__$1, ppstr);
          var clj = cljs.core.nth.call(null, vec__29285, 0, null);
          var has_cb_QMARK_ = cljs.core.nth.call(null, vec__29285, 1, null);
          taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_.call(null, ch_recv, cljs.core.merge.call(null, ev_msg_const, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), client_id, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), ring_req, new cljs.core.Keyword(null, "event", "event", 301435442), clj, new cljs.core.Keyword(null, "uid", "uid", -1447769400), user_id_fn__$1.call(null, ring_req, client_id), new cljs.core.Keyword(null, 
          "?reply-fn", "?reply-fn", -1479510592), cljs.core.truth_(has_cb_QMARK_) ? function(params, ppstr, client_id, vec__29285, clj, has_cb_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
            return function taoensso$sente$reply_fn(resp_clj) {
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 435, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(params, ppstr, client_id, vec__29285, clj, has_cb_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, 
              user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send (ajax reply): %s", resp_clj], null);
                };
              }(params, ppstr, client_id, vec__29285, clj, has_cb_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null);
              return taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, taoensso.sente.pack.call(null, packer__$1, cljs.core.meta.call(null, resp_clj), resp_clj), new cljs.core.Keyword(null, "close-after-send", "close-after-send", 1264946103));
            };
          }(params, ppstr, client_id, vec__29285, clj, has_cb_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) : null], null)));
          if (cljs.core.truth_(has_cb_QMARK_)) {
            return null;
          } else {
            taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 442, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(params, ppstr, client_id, vec__29285, clj, has_cb_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, 
            user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
              return function() {
                return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send (ajax reply): dummy-cb-200"], null);
              };
            }(params, ppstr, client_id, vec__29285, clj, has_cb_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null);
            return taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, taoensso.sente.pack.call(null, packer__$1, null, new cljs.core.Keyword("chsk", "dummy-cb-200", "chsk/dummy-cb-200", -1663130337)), new cljs.core.Keyword(null, "close-after-send", "close-after-send", 1264946103));
          }
        };
      }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer)], null));
    };
  }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), new cljs.core.Keyword(null, "ajax-get-or-ws-handshake-fn", "ajax-get-or-ws-handshake-fn", -1210409233), function(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, 
  upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
    return function(ring_req) {
      var csrf_token = csrf_token_fn.call(null, ring_req);
      var params = cljs.core.get.call(null, ring_req, new cljs.core.Keyword(null, "params", "params", 710516235));
      var client_id = cljs.core.get.call(null, params, new cljs.core.Keyword(null, "client-id", "client-id", -464622140));
      var uid = user_id_fn__$1.call(null, ring_req, client_id);
      var websocket_QMARK_ = (new cljs.core.Keyword(null, "websocket?", "websocket?", 1552493139)).cljs$core$IFn$_invoke$arity$1(ring_req);
      var receive_event_msg_BANG_ = function(csrf_token, params, client_id, uid, websocket_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function() {
          var G__29483__delegate = function(event, p__29286) {
            var vec__29287 = p__29286;
            var _QMARK_reply_fn = cljs.core.nth.call(null, vec__29287, 0, null);
            return taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_.call(null, ch_recv, cljs.core.merge.call(null, ev_msg_const, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), client_id, new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), ring_req, new cljs.core.Keyword(null, "event", "event", 301435442), event, new cljs.core.Keyword(null, "?reply-fn", "?reply-fn", -1479510592), _QMARK_reply_fn, new cljs.core.Keyword(null, 
            "uid", "uid", -1447769400), uid], null)));
          };
          var G__29483 = function(event, var_args) {
            var p__29286 = null;
            if (arguments.length > 1) {
              var G__29484__i = 0, G__29484__a = new Array(arguments.length - 1);
              while (G__29484__i < G__29484__a.length) {
                G__29484__a[G__29484__i] = arguments[G__29484__i + 1];
                ++G__29484__i;
              }
              p__29286 = new cljs.core.IndexedSeq(G__29484__a, 0);
            }
            return G__29483__delegate.call(this, event, p__29286);
          };
          G__29483.cljs$lang$maxFixedArity = 1;
          G__29483.cljs$lang$applyTo = function(arglist__29485) {
            var event = cljs.core.first(arglist__29485);
            var p__29286 = cljs.core.rest(arglist__29485);
            return G__29483__delegate(event, p__29286);
          };
          G__29483.cljs$core$IFn$_invoke$arity$variadic = G__29483__delegate;
          return G__29483;
        }();
      }(csrf_token, params, client_id, uid, websocket_QMARK_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
      var handshake_BANG_ = function(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
        return function(server_ch) {
          taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 467, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, packer__$1, ch_recv, conns_, connected_uids_, 
          send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
            return function() {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Handshake!"], null);
            };
          }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null);
          var _QMARK_handshake_data = handshake_data_fn.call(null, ring_req);
          var handshake_ev = !(_QMARK_handshake_data == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid, csrf_token, _QMARK_handshake_data], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 
          64910686), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid, csrf_token], null)], null);
          return taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, taoensso.sente.pack.call(null, packer__$1, null, handshake_ev), cljs.core.not.call(null, websocket_QMARK_));
        };
      }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
      if (clojure.string.blank_QMARK_.call(null, client_id)) {
        var err_msg = "Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` \x26 `wrap-keyword-params`)?";
        taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 479, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(err_msg, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, 
        conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function() {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(err_msg), cljs.core.str(": %s")].join(""), ring_req], null);
          };
        }(err_msg, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null);
        throw cljs.core.ex_info.call(null, err_msg, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ring-req", "ring-req", -747861961), ring_req], null));
      } else {
        return taoensso.sente.interfaces.ring_req__GT_server_ch_resp.call(null, web_server_adapter, ring_req, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "on-open", "on-open", -1391088163), function(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, 
        recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(server_ch) {
            if (cljs.core.truth_(websocket_QMARK_)) {
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 487, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, 
              conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function() {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["New WebSocket channel: %s (%s)", uid, [cljs.core.str(server_ch)].join("")], null);
                };
              }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null);
              taoensso.encore.reset_in_BANG_.call(null, conns_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), uid, client_id], null), server_ch);
              if (cljs.core.truth_(connect_uid_BANG_.call(null, new cljs.core.Keyword(null, "ws", "ws", 86841443), uid))) {
                receive_event_msg_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "uidport-open", "chsk/uidport-open", 1685786954)], null));
              } else {
              }
              return handshake_BANG_.call(null, server_ch);
            } else {
              var initial_conn_from_client_QMARK_ = taoensso.encore.swap_in_BANG_.call(null, conns_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid, client_id], null), function(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, 
              vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function(_QMARK_v) {
                  return taoensso.encore.swapped.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [server_ch, taoensso.encore.now_udt.call(null)], null), _QMARK_v == null);
                };
              }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
              var handshake_QMARK_ = function() {
                var or__4685__auto__ = initial_conn_from_client_QMARK_;
                if (cljs.core.truth_(or__4685__auto__)) {
                  return or__4685__auto__;
                } else {
                  return (new cljs.core.Keyword(null, "handshake?", "handshake?", -423743093)).cljs$core$IFn$_invoke$arity$1(params);
                }
              }();
              if (cljs.core.truth_(connect_uid_BANG_.call(null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid))) {
                receive_event_msg_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "uidport-open", "chsk/uidport-open", 1685786954)], null));
              } else {
              }
              if (cljs.core.truth_(handshake_QMARK_)) {
                return handshake_BANG_.call(null, server_ch);
              } else {
                return null;
              }
            }
          };
        }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), new cljs.core.Keyword(null, "on-msg", "on-msg", -2021925279), function(csrf_token, params, client_id, uid, 
        websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(server_ch, req_ppstr) {
            var vec__29288 = taoensso.sente.unpack.call(null, packer__$1, req_ppstr);
            var clj = cljs.core.nth.call(null, vec__29288, 0, null);
            var _QMARK_cb_uuid = cljs.core.nth.call(null, vec__29288, 1, null);
            return receive_event_msg_BANG_.call(null, clj, cljs.core.truth_(_QMARK_cb_uuid) ? function(vec__29288, clj, _QMARK_cb_uuid, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
            packer) {
              return function taoensso$sente$reply_fn(resp_clj) {
                taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 514, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__29288, clj, _QMARK_cb_uuid, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, 
                packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                  return function() {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send (ws reply): %s", resp_clj], null);
                  };
                }(vec__29288, clj, _QMARK_cb_uuid, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), null), null);
                return taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, taoensso.sente.pack.call(null, packer__$1, cljs.core.meta.call(null, resp_clj), resp_clj, _QMARK_cb_uuid));
              };
            }(vec__29288, clj, _QMARK_cb_uuid, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) : null);
          };
        }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer), new cljs.core.Keyword(null, "on-close", "on-close", -761178394), function(csrf_token, params, client_id, uid, 
        websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
          return function(server_ch, status) {
            if (cljs.core.truth_(websocket_QMARK_)) {
              taoensso.encore.swap_in_BANG_.call(null, conns_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), uid], null), function(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, 
              send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function(_QMARK_m) {
                  var new_m = cljs.core.dissoc.call(null, _QMARK_m, client_id);
                  if (cljs.core.empty_QMARK_.call(null, new_m)) {
                    return new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782);
                  } else {
                    return new_m;
                  }
                };
              }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
              var c__26140__auto__ = cljs.core.async.chan.call(null, 1);
              cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto__, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function() {
                  var f__26141__auto__ = function() {
                    var switch__26028__auto__ = function(c__26140__auto__, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                      return function(state_29302) {
                        var state_val_29303 = state_29302[1];
                        if (state_val_29303 === 1) {
                          var inst_29289 = cljs.core.async.timeout.call(null, 5E3);
                          var state_29302__$1 = state_29302;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_29302__$1, 2, inst_29289);
                        } else {
                          if (state_val_29303 === 2) {
                            var inst_29291 = state_29302[2];
                            var inst_29292 = upd_connected_uid_BANG_.call(null, uid);
                            var state_29302__$1 = function() {
                              var statearr_29304 = state_29302;
                              statearr_29304[7] = inst_29291;
                              return statearr_29304;
                            }();
                            if (cljs.core.truth_(inst_29292)) {
                              var statearr_29305_29486 = state_29302__$1;
                              statearr_29305_29486[1] = 3;
                            } else {
                              var statearr_29306_29487 = state_29302__$1;
                              statearr_29306_29487[1] = 4;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_29303 === 3) {
                              var inst_29294 = cljs.core.PersistentVector.EMPTY_NODE;
                              var inst_29295 = [new cljs.core.Keyword("chsk", "uidport-close", "chsk/uidport-close", 901058678)];
                              var inst_29296 = new cljs.core.PersistentVector(null, 1, 5, inst_29294, inst_29295, null);
                              var inst_29297 = receive_event_msg_BANG_.call(null, inst_29296);
                              var state_29302__$1 = state_29302;
                              var statearr_29307_29488 = state_29302__$1;
                              statearr_29307_29488[2] = inst_29297;
                              statearr_29307_29488[1] = 5;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_29303 === 4) {
                                var state_29302__$1 = state_29302;
                                var statearr_29308_29489 = state_29302__$1;
                                statearr_29308_29489[2] = null;
                                statearr_29308_29489[1] = 5;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_29303 === 5) {
                                  var inst_29300 = state_29302[2];
                                  var state_29302__$1 = state_29302;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_29302__$1, inst_29300);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      };
                    }(c__26140__auto__, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                    return function(switch__26028__auto__, c__26140__auto__, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                      return function() {
                        var taoensso$sente$state_machine__26029__auto__ = null;
                        var taoensso$sente$state_machine__26029__auto____0 = function() {
                          var statearr_29312 = [null, null, null, null, null, null, null, null];
                          statearr_29312[0] = taoensso$sente$state_machine__26029__auto__;
                          statearr_29312[1] = 1;
                          return statearr_29312;
                        };
                        var taoensso$sente$state_machine__26029__auto____1 = function(state_29302) {
                          while (true) {
                            var ret_value__26030__auto__ = function() {
                              try {
                                while (true) {
                                  var result__26031__auto__ = switch__26028__auto__.call(null, state_29302);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                    continue;
                                  } else {
                                    return result__26031__auto__;
                                  }
                                  break;
                                }
                              } catch (e29313) {
                                if (e29313 instanceof Object) {
                                  var ex__26032__auto__ = e29313;
                                  var statearr_29314_29490 = state_29302;
                                  statearr_29314_29490[5] = ex__26032__auto__;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_29302);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  throw e29313;
                                }
                              }
                            }();
                            if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              var G__29491 = state_29302;
                              state_29302 = G__29491;
                              continue;
                            } else {
                              return ret_value__26030__auto__;
                            }
                            break;
                          }
                        };
                        taoensso$sente$state_machine__26029__auto__ = function(state_29302) {
                          switch(arguments.length) {
                            case 0:
                              return taoensso$sente$state_machine__26029__auto____0.call(this);
                            case 1:
                              return taoensso$sente$state_machine__26029__auto____1.call(this, state_29302);
                          }
                          throw new Error("Invalid arity: " + arguments.length);
                        };
                        taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__26029__auto____0;
                        taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__26029__auto____1;
                        return taoensso$sente$state_machine__26029__auto__;
                      }();
                    }(switch__26028__auto__, c__26140__auto__, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                  }();
                  var state__26142__auto__ = function() {
                    var statearr_29315 = f__26141__auto__.call(null);
                    statearr_29315[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto__;
                    return statearr_29315;
                  }();
                  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
                };
              }(c__26140__auto__, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
              return c__26140__auto__;
            } else {
              taoensso.encore.swap_in_BANG_.call(null, conns_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), client_id], null), function(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, 
              recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function(p__29316) {
                  var vec__29317 = p__29316;
                  var server_ch__$1 = cljs.core.nth.call(null, vec__29317, 0, null);
                  var udt_last_connected = cljs.core.nth.call(null, vec__29317, 1, null);
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, udt_last_connected], null);
                };
              }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
              var udt_disconnected = taoensso.encore.now_udt.call(null);
              var c__26140__auto__ = cljs.core.async.chan.call(null, 1);
              cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto__, udt_disconnected, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                return function() {
                  var f__26141__auto__ = function() {
                    var switch__26028__auto__ = function(c__26140__auto__, udt_disconnected, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                      return function(state_29340) {
                        var state_val_29341 = state_29340[1];
                        if (state_val_29341 === 1) {
                          var inst_29318 = cljs.core.async.timeout.call(null, 5E3);
                          var state_29340__$1 = state_29340;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_29340__$1, 2, inst_29318);
                        } else {
                          if (state_val_29341 === 2) {
                            var inst_29320 = state_29340[2];
                            var inst_29321 = cljs.core.PersistentVector.EMPTY_NODE;
                            var inst_29322 = [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid];
                            var inst_29323 = new cljs.core.PersistentVector(null, 2, 5, inst_29321, inst_29322, null);
                            var inst_29324 = function() {
                              return function(inst_29320, inst_29321, inst_29322, inst_29323, state_val_29341, c__26140__auto__, udt_disconnected, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, 
                              handshake_data_fn, packer) {
                                return function(_QMARK_m) {
                                  var vec__29342 = cljs.core.get.call(null, _QMARK_m, client_id);
                                  var _ = cljs.core.nth.call(null, vec__29342, 0, null);
                                  var _QMARK_udt_last_connected = cljs.core.nth.call(null, vec__29342, 1, null);
                                  var disconnected_QMARK_ = function() {
                                    var and__4673__auto__ = _QMARK_udt_last_connected;
                                    if (cljs.core.truth_(and__4673__auto__)) {
                                      return udt_disconnected >= _QMARK_udt_last_connected;
                                    } else {
                                      return and__4673__auto__;
                                    }
                                  }();
                                  if (cljs.core.not.call(null, disconnected_QMARK_)) {
                                    return taoensso.encore.swapped.call(null, _QMARK_m, cljs.core.not.call(null, new cljs.core.Keyword(null, "disconnected", "disconnected", -1908014586)));
                                  } else {
                                    var new_m = cljs.core.dissoc.call(null, _QMARK_m, client_id);
                                    return taoensso.encore.swapped.call(null, cljs.core.empty_QMARK_.call(null, new_m) ? new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782) : new_m, new cljs.core.Keyword(null, "disconnected", "disconnected", -1908014586));
                                  }
                                };
                              }(inst_29320, inst_29321, inst_29322, inst_29323, state_val_29341, c__26140__auto__, udt_disconnected, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, 
                              packer);
                            }();
                            var inst_29325 = taoensso.encore.swap_in_BANG_.call(null, conns_, inst_29323, inst_29324);
                            var state_29340__$1 = function() {
                              var statearr_29343 = state_29340;
                              statearr_29343[7] = inst_29320;
                              return statearr_29343;
                            }();
                            if (cljs.core.truth_(inst_29325)) {
                              var statearr_29344_29492 = state_29340__$1;
                              statearr_29344_29492[1] = 3;
                            } else {
                              var statearr_29345_29493 = state_29340__$1;
                              statearr_29345_29493[1] = 4;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_29341 === 3) {
                              var inst_29327 = upd_connected_uid_BANG_.call(null, uid);
                              var state_29340__$1 = state_29340;
                              if (cljs.core.truth_(inst_29327)) {
                                var statearr_29346_29494 = state_29340__$1;
                                statearr_29346_29494[1] = 6;
                              } else {
                                var statearr_29347_29495 = state_29340__$1;
                                statearr_29347_29495[1] = 7;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_29341 === 4) {
                                var state_29340__$1 = state_29340;
                                var statearr_29348_29496 = state_29340__$1;
                                statearr_29348_29496[2] = null;
                                statearr_29348_29496[1] = 5;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_29341 === 5) {
                                  var inst_29338 = state_29340[2];
                                  var state_29340__$1 = state_29340;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_29340__$1, inst_29338);
                                } else {
                                  if (state_val_29341 === 6) {
                                    var inst_29329 = cljs.core.PersistentVector.EMPTY_NODE;
                                    var inst_29330 = [new cljs.core.Keyword("chsk", "uidport-close", "chsk/uidport-close", 901058678)];
                                    var inst_29331 = new cljs.core.PersistentVector(null, 1, 5, inst_29329, inst_29330, null);
                                    var inst_29332 = receive_event_msg_BANG_.call(null, inst_29331);
                                    var state_29340__$1 = state_29340;
                                    var statearr_29349_29497 = state_29340__$1;
                                    statearr_29349_29497[2] = inst_29332;
                                    statearr_29349_29497[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_29341 === 7) {
                                      var state_29340__$1 = state_29340;
                                      var statearr_29350_29498 = state_29340__$1;
                                      statearr_29350_29498[2] = null;
                                      statearr_29350_29498[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_29341 === 8) {
                                        var inst_29335 = state_29340[2];
                                        var state_29340__$1 = state_29340;
                                        var statearr_29351_29499 = state_29340__$1;
                                        statearr_29351_29499[2] = inst_29335;
                                        statearr_29351_29499[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      };
                    }(c__26140__auto__, udt_disconnected, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                    return function(switch__26028__auto__, c__26140__auto__, udt_disconnected, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer) {
                      return function() {
                        var taoensso$sente$state_machine__26029__auto__ = null;
                        var taoensso$sente$state_machine__26029__auto____0 = function() {
                          var statearr_29355 = [null, null, null, null, null, null, null, null];
                          statearr_29355[0] = taoensso$sente$state_machine__26029__auto__;
                          statearr_29355[1] = 1;
                          return statearr_29355;
                        };
                        var taoensso$sente$state_machine__26029__auto____1 = function(state_29340) {
                          while (true) {
                            var ret_value__26030__auto__ = function() {
                              try {
                                while (true) {
                                  var result__26031__auto__ = switch__26028__auto__.call(null, state_29340);
                                  if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                    continue;
                                  } else {
                                    return result__26031__auto__;
                                  }
                                  break;
                                }
                              } catch (e29356) {
                                if (e29356 instanceof Object) {
                                  var ex__26032__auto__ = e29356;
                                  var statearr_29357_29500 = state_29340;
                                  statearr_29357_29500[5] = ex__26032__auto__;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_29340);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  throw e29356;
                                }
                              }
                            }();
                            if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              var G__29501 = state_29340;
                              state_29340 = G__29501;
                              continue;
                            } else {
                              return ret_value__26030__auto__;
                            }
                            break;
                          }
                        };
                        taoensso$sente$state_machine__26029__auto__ = function(state_29340) {
                          switch(arguments.length) {
                            case 0:
                              return taoensso$sente$state_machine__26029__auto____0.call(this);
                            case 1:
                              return taoensso$sente$state_machine__26029__auto____1.call(this, state_29340);
                          }
                          throw new Error("Invalid arity: " + arguments.length);
                        };
                        taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__26029__auto____0;
                        taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__26029__auto____1;
                        return taoensso$sente$state_machine__26029__auto__;
                      }();
                    }(switch__26028__auto__, c__26140__auto__, udt_disconnected, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer);
                  }();
                  var state__26142__auto__ = function() {
                    var statearr_29358 = f__26141__auto__.call(null);
                    statearr_29358[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto__;
                    return statearr_29358;
                  }();
                  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
                };
              }(c__26140__auto__, udt_disconnected, csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer));
              return c__26140__auto__;
            }
          };
        }(csrf_token, params, client_id, uid, websocket_QMARK_, receive_event_msg_BANG_, handshake_BANG_, packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer)], null));
      }
    };
  }(packer__$1, ch_recv, conns_, connected_uids_, send_buffers_, user_id_fn__$1, connect_uid_BANG_, upd_connected_uid_BANG_, send_fn, ev_msg_const, vec__29194, map__29195, map__29195__$1, recv_buf_or_n, send_buf_ms_ajax, send_buf_ms_ws, user_id_fn, csrf_token_fn, handshake_data_fn, packer)], null);
};
taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = function(seq29191) {
  var G__29192 = cljs.core.first.call(null, seq29191);
  var seq29191__$1 = cljs.core.next.call(null, seq29191);
  return taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29192, seq29191__$1);
};
taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_, uid, buffered_evs_pstr) {
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 576, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["send-buffered-server-evs\x3ews-clients!: %s", buffered_evs_pstr], null);
  }, null), null);
  var seq__29506 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, conns_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ws", "ws", 86841443), uid], null))));
  var chunk__29507 = null;
  var count__29508 = 0;
  var i__29509 = 0;
  while (true) {
    if (i__29509 < count__29508) {
      var server_ch = cljs.core._nth.call(null, chunk__29507, i__29509);
      taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, buffered_evs_pstr);
      var G__29510 = seq__29506;
      var G__29511 = chunk__29507;
      var G__29512 = count__29508;
      var G__29513 = i__29509 + 1;
      seq__29506 = G__29510;
      chunk__29507 = G__29511;
      count__29508 = G__29512;
      i__29509 = G__29513;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__29506);
      if (temp__4657__auto__) {
        var seq__29506__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29506__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first.call(null, seq__29506__$1);
          var G__29514 = cljs.core.chunk_rest.call(null, seq__29506__$1);
          var G__29515 = c__5488__auto__;
          var G__29516 = cljs.core.count.call(null, c__5488__auto__);
          var G__29517 = 0;
          seq__29506 = G__29514;
          chunk__29507 = G__29515;
          count__29508 = G__29516;
          i__29509 = G__29517;
          continue;
        } else {
          var server_ch = cljs.core.first.call(null, seq__29506__$1);
          taoensso.sente.interfaces.sch_send_BANG_.call(null, server_ch, buffered_evs_pstr);
          var G__29518 = cljs.core.next.call(null, seq__29506__$1);
          var G__29519 = null;
          var G__29520 = 0;
          var G__29521 = 0;
          seq__29506 = G__29518;
          chunk__29507 = G__29519;
          count__29508 = G__29520;
          i__29509 = G__29521;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___29611 = arguments.length;
  var i__5744__auto___29612 = 0;
  while (true) {
    if (i__5744__auto___29612 < len__5743__auto___29611) {
      args__5750__auto__.push(arguments[i__5744__auto___29612]);
      var G__29613 = i__5744__auto___29612 + 1;
      i__5744__auto___29612 = G__29613;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 3 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(3), 0) : null;
  return taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5751__auto__);
};
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(conns_, uid, buffered_evs_pstr, p__29526) {
  var vec__29527 = p__29526;
  var map__29528 = cljs.core.nth.call(null, vec__29527, 0, null);
  var map__29528__$1 = (!(map__29528 == null) ? map__29528.cljs$lang$protocol_mask$partition0$ & 64 || map__29528.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29528) : map__29528;
  var nmax_attempts = cljs.core.get.call(null, map__29528__$1, new cljs.core.Keyword(null, "nmax-attempts", "nmax-attempts", 1471144610), 7);
  var ms_base = cljs.core.get.call(null, map__29528__$1, new cljs.core.Keyword(null, "ms-base", "ms-base", -1962784511), 90);
  var ms_rand = cljs.core.get.call(null, map__29528__$1, new cljs.core.Keyword(null, "ms-rand", "ms-rand", 1169398874), 90);
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 589, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand) {
    return function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["send-buffered-server-evs\x3eajax-clients!: %s", buffered_evs_pstr], null);
    };
  }(vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand), null), null);
  var client_ids_unsatisfied = cljs.core.keys.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, conns_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid], null)));
  if (cljs.core.empty_QMARK_.call(null, client_ids_unsatisfied)) {
    return null;
  } else {
    var c__26140__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand) {
      return function() {
        var f__26141__auto__ = function() {
          var switch__26028__auto__ = function(c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand) {
            return function(state_29577) {
              var state_val_29578 = state_29577[1];
              if (state_val_29578 === 7) {
                var inst_29538 = state_29577[7];
                var inst_29532 = state_29577[8];
                var inst_29531 = state_29577[9];
                var inst_29549 = function() {
                  var n = inst_29531;
                  var client_ids_satisfied = inst_29532;
                  var _QMARK_pulled = inst_29538;
                  return function(n, client_ids_satisfied, _QMARK_pulled, inst_29538, inst_29532, inst_29531, state_val_29578, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand) {
                    return function(s, client_id, p__29548) {
                      var vec__29579 = p__29548;
                      var _QMARK_server_ch = cljs.core.nth.call(null, vec__29579, 0, null);
                      var _ = cljs.core.nth.call(null, vec__29579, 1, null);
                      if (_QMARK_server_ch == null || cljs.core.not.call(null, taoensso.sente.interfaces.sch_send_BANG_.call(null, _QMARK_server_ch, buffered_evs_pstr, new cljs.core.Keyword(null, "close-after-send", "close-after-send", 1264946103)))) {
                        return s;
                      } else {
                        return cljs.core.conj.call(null, s, client_id);
                      }
                    };
                  }(n, client_ids_satisfied, _QMARK_pulled, inst_29538, inst_29532, inst_29531, state_val_29578, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand);
                }();
                var inst_29550 = cljs.core.PersistentHashSet.EMPTY;
                var inst_29551 = cljs.core.reduce_kv.call(null, inst_29549, inst_29550, inst_29538);
                var state_29577__$1 = state_29577;
                var statearr_29580_29614 = state_29577__$1;
                statearr_29580_29614[2] = inst_29551;
                statearr_29580_29614[1] = 9;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_29578 === 1) {
                  var inst_29530 = cljs.core.PersistentHashSet.EMPTY;
                  var inst_29531 = 0;
                  var inst_29532 = inst_29530;
                  var state_29577__$1 = function() {
                    var statearr_29581 = state_29577;
                    statearr_29581[8] = inst_29532;
                    statearr_29581[9] = inst_29531;
                    return statearr_29581;
                  }();
                  var statearr_29582_29615 = state_29577__$1;
                  statearr_29582_29615[2] = null;
                  statearr_29582_29615[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_29578 === 4) {
                    var state_29577__$1 = state_29577;
                    var statearr_29583_29616 = state_29577__$1;
                    statearr_29583_29616[2] = true;
                    statearr_29583_29616[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_29578 === 15) {
                      var inst_29573 = state_29577[2];
                      var state_29577__$1 = state_29577;
                      var statearr_29584_29617 = state_29577__$1;
                      statearr_29584_29617[2] = inst_29573;
                      statearr_29584_29617[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_29578 === 13) {
                        var inst_29564 = cljs.core.rand_int.call(null, ms_rand);
                        var inst_29565 = ms_base + inst_29564;
                        var inst_29566 = cljs.core.async.timeout.call(null, inst_29565);
                        var state_29577__$1 = state_29577;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_29577__$1, 16, inst_29566);
                      } else {
                        if (state_val_29578 === 6) {
                          var inst_29538 = state_29577[7];
                          var inst_29546 = state_29577[2];
                          var state_29577__$1 = function() {
                            var statearr_29585 = state_29577;
                            statearr_29585[10] = inst_29546;
                            return statearr_29585;
                          }();
                          if (cljs.core.truth_(inst_29538)) {
                            var statearr_29586_29618 = state_29577__$1;
                            statearr_29586_29618[1] = 7;
                          } else {
                            var statearr_29587_29619 = state_29577__$1;
                            statearr_29587_29619[1] = 8;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_29578 === 3) {
                            var inst_29575 = state_29577[2];
                            var state_29577__$1 = state_29577;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_29577__$1, inst_29575);
                          } else {
                            if (state_val_29578 === 12) {
                              var inst_29562 = state_29577[2];
                              var state_29577__$1 = state_29577;
                              if (cljs.core.truth_(inst_29562)) {
                                var statearr_29588_29620 = state_29577__$1;
                                statearr_29588_29620[1] = 13;
                              } else {
                                var statearr_29589_29621 = state_29577__$1;
                                statearr_29589_29621[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_29578 === 2) {
                                var inst_29538 = state_29577[7];
                                var inst_29532 = state_29577[8];
                                var inst_29531 = state_29577[9];
                                var inst_29534 = cljs.core.PersistentVector.EMPTY_NODE;
                                var inst_29535 = [new cljs.core.Keyword(null, "ajax", "ajax", 814345549), uid];
                                var inst_29536 = new cljs.core.PersistentVector(null, 2, 5, inst_29534, inst_29535, null);
                                var inst_29537 = function() {
                                  var n = inst_29531;
                                  var client_ids_satisfied = inst_29532;
                                  return function(n, client_ids_satisfied, inst_29538, inst_29532, inst_29531, inst_29534, inst_29535, inst_29536, state_val_29578, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand) {
                                    return function(m) {
                                      var ks_to_pull = cljs.core.remove.call(null, client_ids_satisfied, cljs.core.keys.call(null, m));
                                      if (cljs.core.empty_QMARK_.call(null, ks_to_pull)) {
                                        return taoensso.encore.swapped.call(null, m, null);
                                      } else {
                                        return taoensso.encore.swapped.call(null, cljs.core.reduce.call(null, function(ks_to_pull, n, client_ids_satisfied, inst_29538, inst_29532, inst_29531, inst_29534, inst_29535, inst_29536, state_val_29578, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand) {
                                          return function(m__$1, k) {
                                            var vec__29590 = cljs.core.get.call(null, m__$1, k);
                                            var _QMARK_server_ch = cljs.core.nth.call(null, vec__29590, 0, null);
                                            var udt_last_connected = cljs.core.nth.call(null, vec__29590, 1, null);
                                            return cljs.core.assoc.call(null, m__$1, k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, udt_last_connected], null));
                                          };
                                        }(ks_to_pull, n, client_ids_satisfied, inst_29538, inst_29532, inst_29531, inst_29534, inst_29535, inst_29536, state_val_29578, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand), m, ks_to_pull), cljs.core.select_keys.call(null, m, ks_to_pull));
                                      }
                                    };
                                  }(n, client_ids_satisfied, inst_29538, inst_29532, inst_29531, inst_29534, inst_29535, inst_29536, state_val_29578, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand);
                                }();
                                var inst_29538__$1 = taoensso.encore.swap_in_BANG_.call(null, conns_, inst_29536, inst_29537);
                                var inst_29539 = function() {
                                  var n = inst_29531;
                                  var client_ids_satisfied = inst_29532;
                                  var _QMARK_pulled = inst_29538__$1;
                                  var __x = inst_29538__$1;
                                  return function(n, client_ids_satisfied, _QMARK_pulled, __x, inst_29538, inst_29532, inst_29531, inst_29534, inst_29535, inst_29536, inst_29537, inst_29538__$1, state_val_29578, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand) {
                                    return function(__x__$1) {
                                      var or__4685__auto__ = taoensso.truss.impl.non_throwing.call(null, cljs.core.nil_QMARK_).call(null, __x__$1);
                                      if (cljs.core.truth_(or__4685__auto__)) {
                                        return or__4685__auto__;
                                      } else {
                                        return taoensso.truss.impl.non_throwing.call(null, cljs.core.map_QMARK_).call(null, __x__$1);
                                      }
                                    };
                                  }(n, client_ids_satisfied, _QMARK_pulled, __x, inst_29538, inst_29532, inst_29531, inst_29534, inst_29535, inst_29536, inst_29537, inst_29538__$1, state_val_29578, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand);
                                }();
                                var inst_29540 = inst_29539.call(null, inst_29538__$1);
                                var state_29577__$1 = function() {
                                  var statearr_29591 = state_29577;
                                  statearr_29591[7] = inst_29538__$1;
                                  return statearr_29591;
                                }();
                                if (cljs.core.truth_(inst_29540)) {
                                  var statearr_29592_29622 = state_29577__$1;
                                  statearr_29592_29622[1] = 4;
                                } else {
                                  var statearr_29593_29623 = state_29577__$1;
                                  statearr_29593_29623[1] = 5;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_29578 === 11) {
                                  var inst_29556 = state_29577[11];
                                  var state_29577__$1 = state_29577;
                                  var statearr_29594_29624 = state_29577__$1;
                                  statearr_29594_29624[2] = inst_29556;
                                  statearr_29594_29624[1] = 12;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_29578 === 9) {
                                    var inst_29532 = state_29577[8];
                                    var inst_29556 = state_29577[11];
                                    var inst_29531 = state_29577[9];
                                    var inst_29554 = state_29577[2];
                                    var inst_29555 = cljs.core.into.call(null, inst_29532, inst_29554);
                                    var inst_29556__$1 = inst_29531 < nmax_attempts;
                                    var state_29577__$1 = function() {
                                      var statearr_29595 = state_29577;
                                      statearr_29595[11] = inst_29556__$1;
                                      statearr_29595[12] = inst_29555;
                                      return statearr_29595;
                                    }();
                                    if (cljs.core.truth_(inst_29556__$1)) {
                                      var statearr_29596_29625 = state_29577__$1;
                                      statearr_29596_29625[1] = 10;
                                    } else {
                                      var statearr_29597_29626 = state_29577__$1;
                                      statearr_29597_29626[1] = 11;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_29578 === 5) {
                                      var inst_29538 = state_29577[7];
                                      var inst_29543 = "([:or nil? map?] ?pulled)";
                                      var inst_29544 = taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, inst_29543, inst_29538, null, null);
                                      var state_29577__$1 = state_29577;
                                      var statearr_29598_29627 = state_29577__$1;
                                      statearr_29598_29627[2] = inst_29544;
                                      statearr_29598_29627[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_29578 === 14) {
                                        var state_29577__$1 = state_29577;
                                        var statearr_29599_29628 = state_29577__$1;
                                        statearr_29599_29628[2] = null;
                                        statearr_29599_29628[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_29578 === 16) {
                                          var inst_29531 = state_29577[9];
                                          var inst_29555 = state_29577[12];
                                          var inst_29568 = state_29577[2];
                                          var inst_29569 = inst_29531 + 1;
                                          var inst_29531__$1 = inst_29569;
                                          var inst_29532 = inst_29555;
                                          var state_29577__$1 = function() {
                                            var statearr_29600 = state_29577;
                                            statearr_29600[8] = inst_29532;
                                            statearr_29600[13] = inst_29568;
                                            statearr_29600[9] = inst_29531__$1;
                                            return statearr_29600;
                                          }();
                                          var statearr_29601_29629 = state_29577__$1;
                                          statearr_29601_29629[2] = null;
                                          statearr_29601_29629[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_29578 === 10) {
                                            var inst_29555 = state_29577[12];
                                            var inst_29558 = cljs.core.complement.call(null, inst_29555);
                                            var inst_29559 = cljs.core.some.call(null, inst_29558, client_ids_unsatisfied);
                                            var state_29577__$1 = state_29577;
                                            var statearr_29602_29630 = state_29577__$1;
                                            statearr_29602_29630[2] = inst_29559;
                                            statearr_29602_29630[1] = 12;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_29578 === 8) {
                                              var state_29577__$1 = state_29577;
                                              var statearr_29603_29631 = state_29577__$1;
                                              statearr_29603_29631[2] = null;
                                              statearr_29603_29631[1] = 9;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand);
          return function(switch__26028__auto__, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand) {
            return function() {
              var taoensso$sente$state_machine__26029__auto__ = null;
              var taoensso$sente$state_machine__26029__auto____0 = function() {
                var statearr_29607 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_29607[0] = taoensso$sente$state_machine__26029__auto__;
                statearr_29607[1] = 1;
                return statearr_29607;
              };
              var taoensso$sente$state_machine__26029__auto____1 = function(state_29577) {
                while (true) {
                  var ret_value__26030__auto__ = function() {
                    try {
                      while (true) {
                        var result__26031__auto__ = switch__26028__auto__.call(null, state_29577);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__26031__auto__;
                        }
                        break;
                      }
                    } catch (e29608) {
                      if (e29608 instanceof Object) {
                        var ex__26032__auto__ = e29608;
                        var statearr_29609_29632 = state_29577;
                        statearr_29609_29632[5] = ex__26032__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_29577);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e29608;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__29633 = state_29577;
                    state_29577 = G__29633;
                    continue;
                  } else {
                    return ret_value__26030__auto__;
                  }
                  break;
                }
              };
              taoensso$sente$state_machine__26029__auto__ = function(state_29577) {
                switch(arguments.length) {
                  case 0:
                    return taoensso$sente$state_machine__26029__auto____0.call(this);
                  case 1:
                    return taoensso$sente$state_machine__26029__auto____1.call(this, state_29577);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__26029__auto____0;
              taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__26029__auto____1;
              return taoensso$sente$state_machine__26029__auto__;
            }();
          }(switch__26028__auto__, c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand);
        }();
        var state__26142__auto__ = function() {
          var statearr_29610 = f__26141__auto__.call(null);
          statearr_29610[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto__;
          return statearr_29610;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
      };
    }(c__26140__auto__, client_ids_unsatisfied, vec__29527, map__29528, map__29528__$1, nmax_attempts, ms_base, ms_rand));
    return c__26140__auto__;
  }
};
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$lang$maxFixedArity = 3;
taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$lang$applyTo = function(seq29522) {
  var G__29523 = cljs.core.first.call(null, seq29522);
  var seq29522__$1 = cljs.core.next.call(null, seq29522);
  var G__29524 = cljs.core.first.call(null, seq29522__$1);
  var seq29522__$2 = cljs.core.next.call(null, seq29522__$1);
  var G__29525 = cljs.core.first.call(null, seq29522__$2);
  var seq29522__$3 = cljs.core.next.call(null, seq29522__$2);
  return taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29523, G__29524, G__29525, seq29522__$3);
};
taoensso.sente.ajax_lite = taoensso.encore.ajax_lite;
taoensso.sente.IChSocket = function() {
};
taoensso.sente._chsk_connect_BANG_ = function taoensso$sente$_chsk_connect_BANG_(chsk) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)) {
    return chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);
  } else {
    var x__5340__auto__ = chsk == null ? null : chsk;
    var m__5341__auto__ = taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, chsk);
    } else {
      var m__5341__auto____$1 = taoensso.sente._chsk_connect_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, chsk);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.-chsk-connect!", chsk);
      }
    }
  }
};
taoensso.sente._chsk_send_BANG_ = function taoensso$sente$_chsk_send_BANG_(chsk, ev, opts) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)) {
    return chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk, ev, opts);
  } else {
    var x__5340__auto__ = chsk == null ? null : chsk;
    var m__5341__auto__ = taoensso.sente._chsk_send_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, chsk, ev, opts);
    } else {
      var m__5341__auto____$1 = taoensso.sente._chsk_send_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, chsk, ev, opts);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.-chsk-send!", chsk);
      }
    }
  }
};
taoensso.sente.chsk_destroy_BANG_ = function taoensso$sente$chsk_destroy_BANG_(chsk) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1 == null)) {
    return chsk.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1(chsk);
  } else {
    var x__5340__auto__ = chsk == null ? null : chsk;
    var m__5341__auto__ = taoensso.sente.chsk_destroy_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, chsk);
    } else {
      var m__5341__auto____$1 = taoensso.sente.chsk_destroy_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, chsk);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-destroy!", chsk);
      }
    }
  }
};
taoensso.sente.chsk_disconnect_BANG_ = function taoensso$sente$chsk_disconnect_BANG_(chsk) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$chsk_disconnect_BANG_$arity$1 == null)) {
    return chsk.taoensso$sente$IChSocket$chsk_disconnect_BANG_$arity$1(chsk);
  } else {
    var x__5340__auto__ = chsk == null ? null : chsk;
    var m__5341__auto__ = taoensso.sente.chsk_disconnect_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, chsk);
    } else {
      var m__5341__auto____$1 = taoensso.sente.chsk_disconnect_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, chsk);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-disconnect!", chsk);
      }
    }
  }
};
taoensso.sente.chsk_reconnect_BANG_ = function taoensso$sente$chsk_reconnect_BANG_(chsk) {
  if (!(chsk == null) && !(chsk.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1 == null)) {
    return chsk.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1(chsk);
  } else {
    var x__5340__auto__ = chsk == null ? null : chsk;
    var m__5341__auto__ = taoensso.sente.chsk_reconnect_BANG_[goog.typeOf(x__5340__auto__)];
    if (!(m__5341__auto__ == null)) {
      return m__5341__auto__.call(null, chsk);
    } else {
      var m__5341__auto____$1 = taoensso.sente.chsk_reconnect_BANG_["_"];
      if (!(m__5341__auto____$1 == null)) {
        return m__5341__auto____$1.call(null, chsk);
      } else {
        throw cljs.core.missing_protocol.call(null, "IChSocket.chsk-reconnect!", chsk);
      }
    }
  }
};
taoensso.sente.chsk_send_BANG_ = function taoensso$sente$chsk_send_BANG_(var_args) {
  var args29634 = [];
  var len__5743__auto___29637 = arguments.length;
  var i__5744__auto___29638 = 0;
  while (true) {
    if (i__5744__auto___29638 < len__5743__auto___29637) {
      args29634.push(arguments[i__5744__auto___29638]);
      var G__29639 = i__5744__auto___29638 + 1;
      i__5744__auto___29638 = G__29639;
      continue;
    } else {
    }
    break;
  }
  var G__29636 = args29634.length;
  switch(G__29636) {
    case 2:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 3:
      return taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29634.length)].join(""));;
  }
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = function(chsk, ev) {
  return taoensso.sente.chsk_send_BANG_.call(null, chsk, ev, cljs.core.PersistentArrayMap.EMPTY);
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = function(chsk, ev, _QMARK_timeout_ms, _QMARK_cb) {
  return taoensso.sente.chsk_send_BANG_.call(null, chsk, ev, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), _QMARK_timeout_ms, new cljs.core.Keyword(null, "cb", "cb", 589947841), _QMARK_cb], null));
};
taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = function(chsk, ev, opts) {
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 646, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send: (%s) %s", cljs.core.assoc.call(null, opts, new cljs.core.Keyword(null, "cb", "cb", 589947841), cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "cb", "cb", 589947841)).cljs$core$IFn$_invoke$arity$1(opts))), ev], null);
  }, null), null);
  return taoensso.sente._chsk_send_BANG_.call(null, chsk, ev, opts);
};
taoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4;
taoensso.sente.assert_send_args = function taoensso$sente$assert_send_args(x, _QMARK_timeout_ms, _QMARK_cb) {
  taoensso.sente.assert_event.call(null, x);
  if (cljs.core.truth_(function() {
    var or__4685__auto__ = _QMARK_timeout_ms == null && _QMARK_cb == null;
    if (or__4685__auto__) {
      return or__4685__auto__;
    } else {
      return taoensso.encore.nneg_int_QMARK_.call(null, _QMARK_timeout_ms);
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(taoensso.encore.format.call(null, "cb requires a timeout; timeout-ms should be a +ive integer: %s", _QMARK_timeout_ms)), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, 
    "?timeout-ms", "?timeout-ms", -651193632, null)), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null))), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol("enc", "nneg-int?", "enc/nneg-int?", 803640858, null), new cljs.core.Symbol(null, "?timeout-ms", "?timeout-ms", -651193632, null))))))].join(""));
  }
  if (cljs.core.truth_(function() {
    var or__4685__auto__ = _QMARK_cb == null;
    if (or__4685__auto__) {
      return or__4685__auto__;
    } else {
      var or__4685__auto____$1 = cljs.core.ifn_QMARK_.call(null, _QMARK_cb);
      if (or__4685__auto____$1) {
        return or__4685__auto____$1;
      } else {
        return taoensso.encore.chan_QMARK_.call(null, _QMARK_cb);
      }
    }
  }())) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(taoensso.encore.format.call(null, "cb should be nil, an ifn, or a channel: %s", cljs.core.type.call(null, _QMARK_cb))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)), cljs.core.list(new cljs.core.Symbol(null, 
    "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)), cljs.core.list(new cljs.core.Symbol("enc", "chan?", "enc/chan?", 1377166, null), new cljs.core.Symbol(null, "?cb", "?cb", -1346810436, null)))))].join(""));
  }
};
taoensso.sente.pull_unused_cb_fn_BANG_ = function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_, _QMARK_cb_uuid) {
  var temp__4657__auto__ = _QMARK_cb_uuid;
  if (cljs.core.truth_(temp__4657__auto__)) {
    var cb_uuid = temp__4657__auto__;
    return taoensso.encore.swap_in_BANG_.call(null, cbs_waiting_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null), function(cb_uuid, temp__4657__auto__) {
      return function(_QMARK_f) {
        return taoensso.encore.swapped.call(null, new cljs.core.Keyword("swap", "dissoc", "swap/dissoc", -605373782), _QMARK_f);
      };
    }(cb_uuid, temp__4657__auto__));
  } else {
    return null;
  }
};
taoensso.sente.merge_GT_chsk_state_BANG_ = function taoensso$sente$merge_GT_chsk_state_BANG_(p__29641, merge_state) {
  var map__29645 = p__29641;
  var map__29645__$1 = (!(map__29645 == null) ? map__29645.cljs$lang$protocol_mask$partition0$ & 64 || map__29645.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29645) : map__29645;
  var chsk = map__29645__$1;
  var chs = cljs.core.get.call(null, map__29645__$1, new cljs.core.Keyword(null, "chs", "chs", 376886120));
  var state_ = cljs.core.get.call(null, map__29645__$1, new cljs.core.Keyword(null, "state_", "state_", 957667102));
  var vec__29647 = taoensso.encore.swap_in_BANG_.call(null, state_, cljs.core.PersistentVector.EMPTY, function(map__29645, map__29645__$1, chsk, chs, state_) {
    return function(old_state) {
      var new_state = cljs.core.merge.call(null, old_state, merge_state);
      var new_state__$1 = cljs.core.not.call(null, function() {
        var and__4673__auto__ = (new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116)).cljs$core$IFn$_invoke$arity$1(old_state);
        if (cljs.core.truth_(and__4673__auto__)) {
          var and__4673__auto____$1 = (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(new_state);
          if (cljs.core.truth_(and__4673__auto____$1)) {
            return cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(old_state));
          } else {
            return and__4673__auto____$1;
          }
        } else {
          return and__4673__auto__;
        }
      }()) ? new_state : cljs.core.assoc.call(null, cljs.core.dissoc.call(null, new_state, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116)), new cljs.core.Keyword(null, "requested-reconnect?", "requested-reconnect?", -1504983666), true);
      return taoensso.encore.swapped.call(null, new_state__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state, new_state__$1], null));
    };
  }(map__29645, map__29645__$1, chsk, chs, state_));
  var old_state = cljs.core.nth.call(null, vec__29647, 0, null);
  var new_state = cljs.core.nth.call(null, vec__29647, 1, null);
  if (cljs.core.not_EQ_.call(null, old_state, new_state)) {
    cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(chs), new_state);
    return new_state;
  } else {
    return null;
  }
};
taoensso.sente.cb_chan_as_fn = function taoensso$sente$cb_chan_as_fn(_QMARK_cb, ev) {
  if (_QMARK_cb == null || cljs.core.ifn_QMARK_.call(null, _QMARK_cb)) {
    return _QMARK_cb;
  } else {
    var __x_29652 = _QMARK_cb;
    try {
      if (cljs.core.truth_(taoensso.encore.chan_QMARK_.call(null, __x_29652))) {
      } else {
        taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e29650) {
      if (e29650 instanceof Error) {
        var __t_29653 = e29650;
        taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(enc/chan? ?cb)", __x_29652, __t_29653, null);
      } else {
        throw e29650;
      }
    }
    taoensso.sente.assert_event.call(null, ev);
    var vec__29651 = ev;
    var ev_id = cljs.core.nth.call(null, vec__29651, 0, null);
    var _ = cljs.core.nth.call(null, vec__29651, 1, null);
    var cb_ch = _QMARK_cb;
    return function(vec__29651, ev_id, _, cb_ch) {
      return function(reply) {
        return cljs.core.async.put_BANG_.call(null, cb_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, [cljs.core.str(taoensso.encore.fq_name.call(null, ev_id)), cljs.core.str(".cb")].join("")), reply], null));
      };
    }(vec__29651, ev_id, _, cb_ch);
  }
};
taoensso.sente.receive_buffered_evs_BANG_ = function taoensso$sente$receive_buffered_evs_BANG_(chs, clj) {
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 703, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function() {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["receive-buffered-evs!: %s", clj], null);
  }, null), null);
  var buffered_evs = function() {
    var __x = clj;
    try {
      if (cljs.core.vector_QMARK_.call(null, __x)) {
        return __x;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e29659) {
      if (e29659 instanceof Error) {
        var __t = e29659;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(vector? clj)", __x, __t, null);
      } else {
        throw e29659;
      }
    }
  }();
  var seq__29660 = cljs.core.seq.call(null, buffered_evs);
  var chunk__29661 = null;
  var count__29662 = 0;
  var i__29663 = 0;
  while (true) {
    if (i__29663 < count__29662) {
      var ev = cljs.core._nth.call(null, chunk__29661, i__29663);
      taoensso.sente.assert_event.call(null, ev);
      cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(chs), ev);
      var G__29664 = seq__29660;
      var G__29665 = chunk__29661;
      var G__29666 = count__29662;
      var G__29667 = i__29663 + 1;
      seq__29660 = G__29664;
      chunk__29661 = G__29665;
      count__29662 = G__29666;
      i__29663 = G__29667;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__29660);
      if (temp__4657__auto__) {
        var seq__29660__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29660__$1)) {
          var c__5488__auto__ = cljs.core.chunk_first.call(null, seq__29660__$1);
          var G__29668 = cljs.core.chunk_rest.call(null, seq__29660__$1);
          var G__29669 = c__5488__auto__;
          var G__29670 = cljs.core.count.call(null, c__5488__auto__);
          var G__29671 = 0;
          seq__29660 = G__29668;
          chunk__29661 = G__29669;
          count__29662 = G__29670;
          i__29663 = G__29671;
          continue;
        } else {
          var ev = cljs.core.first.call(null, seq__29660__$1);
          taoensso.sente.assert_event.call(null, ev);
          cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(chs), ev);
          var G__29672 = cljs.core.next.call(null, seq__29660__$1);
          var G__29673 = null;
          var G__29674 = 0;
          var G__29675 = 0;
          seq__29660 = G__29672;
          chunk__29661 = G__29673;
          count__29662 = G__29674;
          i__29663 = G__29675;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
taoensso.sente.handle_when_handshake_BANG_ = function taoensso$sente$handle_when_handshake_BANG_(chsk, chs, clj) {
  var handshake_QMARK_ = cljs.core.vector_QMARK_.call(null, clj) && cljs.core._EQ_.call(null, cljs.core.first.call(null, clj), new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686));
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 713, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(handshake_QMARK_) {
    return function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["handle-when-handshake (%s): %s", handshake_QMARK_ ? new cljs.core.Keyword(null, "handshake", "handshake", 68079331) : new cljs.core.Keyword(null, "non-handshake", "non-handshake", 576986062), clj], null);
    };
  }(handshake_QMARK_), null), null);
  if (handshake_QMARK_) {
    var vec__29678 = clj;
    var _ = cljs.core.nth.call(null, vec__29678, 0, null);
    var vec__29679 = cljs.core.nth.call(null, vec__29678, 1, null);
    var _QMARK_uid = cljs.core.nth.call(null, vec__29679, 0, null);
    var _QMARK_csrf_token = cljs.core.nth.call(null, vec__29679, 1, null);
    var _QMARK_handshake_data = cljs.core.nth.call(null, vec__29679, 2, null);
    var handshake_ev = vec__29678;
    if (clojure.string.blank_QMARK_.call(null, _QMARK_csrf_token)) {
      taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 719, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__29678, _, vec__29679, _QMARK_uid, _QMARK_csrf_token, _QMARK_handshake_data, handshake_ev, handshake_QMARK_) {
        return function() {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["SECURITY WARNING: no CSRF token available for use by Sente"], null);
        };
      }(vec__29678, _, vec__29679, _QMARK_uid, _QMARK_csrf_token, _QMARK_handshake_data, handshake_ev, handshake_QMARK_), null), null);
    } else {
    }
    taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), true, new cljs.core.Keyword(null, "uid", "uid", -1447769400), _QMARK_uid, new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856), _QMARK_csrf_token], null));
    taoensso.sente.assert_event.call(null, handshake_ev);
    cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(chs), handshake_ev);
    return new cljs.core.Keyword(null, "handled", "handled", 1889700151);
  } else {
    return null;
  }
};
taoensso.sente.ChWebSocket = function(client_id, chs, params, packer, url, state_, cbs_waiting_, socket_, kalive_ms, kalive_timer_, kalive_due_QMARK__, backoff_ms_fn, active_retry_id_, retry_count_, __meta, __extmap, __hash) {
  this.client_id = client_id;
  this.chs = chs;
  this.params = params;
  this.packer = packer;
  this.url = url;
  this.state_ = state_;
  this.cbs_waiting_ = cbs_waiting_;
  this.socket_ = socket_;
  this.kalive_ms = kalive_ms;
  this.kalive_timer_ = kalive_timer_;
  this.kalive_due_QMARK__ = kalive_due_QMARK__;
  this.backoff_ms_fn = backoff_ms_fn;
  this.active_retry_id_ = active_retry_id_;
  this.retry_count_ = retry_count_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5299__auto__, k__5300__auto__) {
  var self__ = this;
  var this__5299__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5299__auto____$1, k__5300__auto__, null);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5301__auto__, k29681, else__5302__auto__) {
  var self__ = this;
  var this__5301__auto____$1 = this;
  var G__29683 = k29681 instanceof cljs.core.Keyword ? k29681.fqn : null;
  switch(G__29683) {
    case "client-id":
      return self__.client_id;
      break;
    case "kalive-ms":
      return self__.kalive_ms;
      break;
    case "packer":
      return self__.packer;
      break;
    case "chs":
      return self__.chs;
      break;
    case "params":
      return self__.params;
      break;
    case "retry-count_":
      return self__.retry_count_;
      break;
    case "backoff-ms-fn":
      return self__.backoff_ms_fn;
      break;
    case "socket_":
      return self__.socket_;
      break;
    case "url":
      return self__.url;
      break;
    case "active-retry-id_":
      return self__.active_retry_id_;
      break;
    case "kalive-due?_":
      return self__.kalive_due_QMARK__;
      break;
    case "cbs-waiting_":
      return self__.cbs_waiting_;
      break;
    case "kalive-timer_":
      return self__.kalive_timer_;
      break;
    case "state_":
      return self__.state_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k29681, else__5302__auto__);
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5313__auto__, writer__5314__auto__, opts__5315__auto__) {
  var self__ = this;
  var this__5313__auto____$1 = this;
  var pr_pair__5316__auto__ = function(this__5313__auto____$1) {
    return function(keyval__5317__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, cljs.core.pr_writer, "", " ", "", opts__5315__auto__, keyval__5317__auto__);
    };
  }(this__5313__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, pr_pair__5316__auto__, "#taoensso.sente.ChWebSocket{", ", ", "}", opts__5315__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), self__.cbs_waiting_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "socket_", "socket_", -361048908), self__.socket_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), self__.kalive_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), self__.kalive_timer_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), self__.kalive_due_QMARK__], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), self__.backoff_ms_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), self__.active_retry_id_], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), self__.retry_count_], null)], null), self__.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$ = true;
taoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__29680) {
  var self__ = this;
  var G__29680__$1 = this;
  return new cljs.core.RecordIter(0, G__29680__$1, 14, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, 
  "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, 
  "retry-count_", "retry-count_", 20238093)], null), cljs.core._iterator.call(null, self__.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5297__auto__) {
  var self__ = this;
  var this__5297__auto____$1 = this;
  return self__.__meta;
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5293__auto__) {
  var self__ = this;
  var this__5293__auto____$1 = this;
  return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5303__auto__) {
  var self__ = this;
  var this__5303__auto____$1 = this;
  return 14 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5294__auto__) {
  var self__ = this;
  var this__5294__auto____$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_imap.call(null, this__5294__auto____$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5295__auto__, other__5296__auto__) {
  var self__ = this;
  var this__5295__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = other__5296__auto__;
    if (cljs.core.truth_(and__4673__auto__)) {
      var and__4673__auto____$1 = this__5295__auto____$1.constructor === other__5296__auto__.constructor;
      if (and__4673__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5295__auto____$1, other__5296__auto__);
      } else {
        return and__4673__auto____$1;
      }
    } else {
      return and__4673__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5308__auto__, k__5309__auto__) {
  var self__ = this;
  var this__5308__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), null, new cljs.core.Keyword(null, "packer", "packer", 66077544), null, new cljs.core.Keyword(null, "chs", "chs", 376886120), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "retry-count_", 
  "retry-count_", 20238093), null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), null, new cljs.core.Keyword(null, "socket_", "socket_", -361048908), null, new cljs.core.Keyword(null, "url", "url", 276297046), null, new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), null, new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), null, new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), null, new cljs.core.Keyword(null, 
  "kalive-timer_", "kalive-timer_", 1558413149), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null], null), null), k__5309__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5308__auto____$1), self__.__meta), k__5309__auto__);
  } else {
    return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5309__auto__)), null);
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5306__auto__, k__5307__auto__, G__29680) {
  var self__ = this;
  var this__5306__auto____$1 = this;
  var pred__29684 = cljs.core.keyword_identical_QMARK_;
  var expr__29685 = k__5307__auto__;
  if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), expr__29685))) {
    return new taoensso.sente.ChWebSocket(G__29680, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "chs", "chs", 376886120), expr__29685))) {
      return new taoensso.sente.ChWebSocket(self__.client_id, G__29680, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__29685))) {
        return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, G__29680, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "packer", "packer", 66077544), expr__29685))) {
          return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, G__29680, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "url", "url", 276297046), expr__29685))) {
            return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, G__29680, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), expr__29685))) {
              return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, G__29680, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), expr__29685))) {
                return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, G__29680, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "socket_", "socket_", -361048908), expr__29685))) {
                  return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, G__29680, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), expr__29685))) {
                    return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, G__29680, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), expr__29685))) {
                      return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, G__29680, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
                    } else {
                      if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), expr__29685))) {
                        return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, G__29680, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
                      } else {
                        if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), expr__29685))) {
                          return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, G__29680, self__.active_retry_id_, self__.retry_count_, self__.__meta, self__.__extmap, null);
                        } else {
                          if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), expr__29685))) {
                            return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, G__29680, self__.retry_count_, self__.__meta, self__.__extmap, null);
                          } else {
                            if (cljs.core.truth_(pred__29684.call(null, new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), expr__29685))) {
                              return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, G__29680, self__.__meta, self__.__extmap, null);
                            } else {
                              return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5307__auto__, G__29680), null);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5311__auto__) {
  var self__ = this;
  var this__5311__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), self__.cbs_waiting_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "socket_", "socket_", -361048908), self__.socket_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), self__.kalive_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), self__.kalive_timer_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), self__.kalive_due_QMARK__], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), self__.backoff_ms_fn], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), self__.active_retry_id_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093), 
  self__.retry_count_], null)], null), self__.__extmap));
};
taoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5298__auto__, G__29680) {
  var self__ = this;
  var this__5298__auto____$1 = this;
  return new taoensso.sente.ChWebSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.cbs_waiting_, self__.socket_, self__.kalive_ms, self__.kalive_timer_, self__.kalive_due_QMARK__, self__.backoff_ms_fn, self__.active_retry_id_, self__.retry_count_, G__29680, self__.__extmap, self__.__hash);
};
taoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5304__auto__, entry__5305__auto__) {
  var self__ = this;
  var this__5304__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5305__auto__)) {
    return cljs.core._assoc.call(null, this__5304__auto____$1, cljs.core._nth.call(null, entry__5305__auto__, 0), cljs.core._nth.call(null, entry__5305__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5304__auto____$1, entry__5305__auto__);
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = true;
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = function(chsk, ev, p__29687) {
  var self__ = this;
  var map__29688 = p__29687;
  var map__29688__$1 = (!(map__29688 == null) ? map__29688.cljs$lang$protocol_mask$partition0$ & 64 || map__29688.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29688) : map__29688;
  var opts = map__29688__$1;
  var _QMARK_timeout_ms = cljs.core.get.call(null, map__29688__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406));
  var _QMARK_cb = cljs.core.get.call(null, map__29688__$1, new cljs.core.Keyword(null, "cb", "cb", 589947841));
  var flush_QMARK_ = cljs.core.get.call(null, map__29688__$1, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
  var chsk__$1 = this;
  taoensso.sente.assert_send_args.call(null, ev, _QMARK_timeout_ms, _QMARK_cb);
  var _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn.call(null, _QMARK_cb, ev);
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)))) {
    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 750, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(_QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send against closed chsk."], null);
      };
    }(_QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_), null), null);
    if (cljs.core.truth_(_QMARK_cb_fn)) {
      return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264));
    } else {
      return null;
    }
  } else {
    var _QMARK_cb_uuid = cljs.core.truth_(_QMARK_cb_fn) ? taoensso.encore.uuid_str.call(null, 6) : null;
    var ppstr = taoensso.sente.pack.call(null, self__.packer, cljs.core.meta.call(null, ev), ev, _QMARK_cb_uuid);
    var temp__4657__auto___29724 = _QMARK_cb_uuid;
    if (cljs.core.truth_(temp__4657__auto___29724)) {
      var cb_uuid_29725 = temp__4657__auto___29724;
      taoensso.encore.reset_in_BANG_.call(null, self__.cbs_waiting_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_29725], null), function() {
        var __x = _QMARK_cb_fn;
        try {
          if (cljs.core.truth_(taoensso.truss.impl.nnil_QMARK_.call(null, __x))) {
            return __x;
          } else {
            return taoensso.truss.impl._invar_violation_BANG_.call(null);
          }
        } catch (e29690) {
          if (e29690 instanceof Error) {
            var __t = e29690;
            return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(taoensso.truss.impl/nnil? ?cb-fn)", __x, __t, null);
          } else {
            throw e29690;
          }
        }
      }());
      var temp__4657__auto___29726__$1 = _QMARK_timeout_ms;
      if (cljs.core.truth_(temp__4657__auto___29726__$1)) {
        var timeout_ms_29727 = temp__4657__auto___29726__$1;
        var c__26140__auto___29728 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___29728, timeout_ms_29727, temp__4657__auto___29726__$1, cb_uuid_29725, temp__4657__auto___29724, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_) {
          return function() {
            var f__26141__auto__ = function() {
              var switch__26028__auto__ = function(c__26140__auto___29728, timeout_ms_29727, temp__4657__auto___29726__$1, cb_uuid_29725, temp__4657__auto___29724, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_) {
                return function(state_29701) {
                  var state_val_29702 = state_29701[1];
                  if (state_val_29702 === 1) {
                    var inst_29691 = cljs.core.async.timeout.call(null, timeout_ms_29727);
                    var state_29701__$1 = state_29701;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_29701__$1, 2, inst_29691);
                  } else {
                    if (state_val_29702 === 2) {
                      var inst_29694 = state_29701[7];
                      var inst_29693 = state_29701[2];
                      var inst_29694__$1 = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, _QMARK_cb_uuid);
                      var state_29701__$1 = function() {
                        var statearr_29703 = state_29701;
                        statearr_29703[7] = inst_29694__$1;
                        statearr_29703[8] = inst_29693;
                        return statearr_29703;
                      }();
                      if (cljs.core.truth_(inst_29694__$1)) {
                        var statearr_29704_29729 = state_29701__$1;
                        statearr_29704_29729[1] = 3;
                      } else {
                        var statearr_29705_29730 = state_29701__$1;
                        statearr_29705_29730[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_29702 === 3) {
                        var inst_29694 = state_29701[7];
                        var inst_29696 = inst_29694.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489));
                        var state_29701__$1 = state_29701;
                        var statearr_29706_29731 = state_29701__$1;
                        statearr_29706_29731[2] = inst_29696;
                        statearr_29706_29731[1] = 5;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_29702 === 4) {
                          var state_29701__$1 = state_29701;
                          var statearr_29707_29732 = state_29701__$1;
                          statearr_29707_29732[2] = null;
                          statearr_29707_29732[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_29702 === 5) {
                            var inst_29699 = state_29701[2];
                            var state_29701__$1 = state_29701;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_29701__$1, inst_29699);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                };
              }(c__26140__auto___29728, timeout_ms_29727, temp__4657__auto___29726__$1, cb_uuid_29725, temp__4657__auto___29724, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_);
              return function(switch__26028__auto__, c__26140__auto___29728, timeout_ms_29727, temp__4657__auto___29726__$1, cb_uuid_29725, temp__4657__auto___29724, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_) {
                return function() {
                  var taoensso$sente$state_machine__26029__auto__ = null;
                  var taoensso$sente$state_machine__26029__auto____0 = function() {
                    var statearr_29711 = [null, null, null, null, null, null, null, null, null];
                    statearr_29711[0] = taoensso$sente$state_machine__26029__auto__;
                    statearr_29711[1] = 1;
                    return statearr_29711;
                  };
                  var taoensso$sente$state_machine__26029__auto____1 = function(state_29701) {
                    while (true) {
                      var ret_value__26030__auto__ = function() {
                        try {
                          while (true) {
                            var result__26031__auto__ = switch__26028__auto__.call(null, state_29701);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__26031__auto__;
                            }
                            break;
                          }
                        } catch (e29712) {
                          if (e29712 instanceof Object) {
                            var ex__26032__auto__ = e29712;
                            var statearr_29713_29733 = state_29701;
                            statearr_29713_29733[5] = ex__26032__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_29701);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e29712;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__29734 = state_29701;
                        state_29701 = G__29734;
                        continue;
                      } else {
                        return ret_value__26030__auto__;
                      }
                      break;
                    }
                  };
                  taoensso$sente$state_machine__26029__auto__ = function(state_29701) {
                    switch(arguments.length) {
                      case 0:
                        return taoensso$sente$state_machine__26029__auto____0.call(this);
                      case 1:
                        return taoensso$sente$state_machine__26029__auto____1.call(this, state_29701);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__26029__auto____0;
                  taoensso$sente$state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__26029__auto____1;
                  return taoensso$sente$state_machine__26029__auto__;
                }();
              }(switch__26028__auto__, c__26140__auto___29728, timeout_ms_29727, temp__4657__auto___29726__$1, cb_uuid_29725, temp__4657__auto___29724, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_);
            }();
            var state__26142__auto__ = function() {
              var statearr_29714 = f__26141__auto__.call(null);
              statearr_29714[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___29728;
              return statearr_29714;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
          };
        }(c__26140__auto___29728, timeout_ms_29727, temp__4657__auto___29726__$1, cb_uuid_29725, temp__4657__auto___29724, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_));
      } else {
      }
    } else {
    }
    try {
      cljs.core.deref.call(null, self__.socket_).send(ppstr);
      cljs.core.reset_BANG_.call(null, self__.kalive_due_QMARK__, false);
      return new cljs.core.Keyword(null, "apparent-success", "apparent-success", 242592222);
    } catch (e29715) {
      if (e29715 instanceof Error) {
        var e = e29715;
        taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 769, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(e, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_) {
          return function() {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, "Chsk send error"], null);
          };
        }(e, _QMARK_cb_uuid, ppstr, _QMARK_cb_fn, chsk__$1, map__29688, map__29688__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_), null), null);
        var temp__4657__auto___29735 = _QMARK_cb_uuid;
        if (cljs.core.truth_(temp__4657__auto___29735)) {
          var cb_uuid_29736 = temp__4657__auto___29735;
          var cb_fn_STAR__29737 = function() {
            var or__4685__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, cb_uuid_29736);
            if (cljs.core.truth_(or__4685__auto__)) {
              return or__4685__auto__;
            } else {
              var __x = _QMARK_cb_fn;
              try {
                if (cljs.core.truth_(taoensso.truss.impl.nnil_QMARK_.call(null, __x))) {
                  return __x;
                } else {
                  return taoensso.truss.impl._invar_violation_BANG_.call(null);
                }
              } catch (e29716) {
                if (e29716 instanceof Error) {
                  var __t = e29716;
                  return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(taoensso.truss.impl/nnil? ?cb-fn)", __x, __t, null);
                } else {
                  throw e29716;
                }
              }
            }
          }();
          cb_fn_STAR__29737.call(null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439));
        } else {
        }
        return false;
      } else {
        throw e29715;
      }
    }
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  return taoensso.sente.chsk_disconnect_BANG_.call(null, chsk__$1);
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_disconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  cljs.core.reset_BANG_.call(null, self__.active_retry_id_, "disconnected");
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null));
  var temp__4657__auto__ = cljs.core.deref.call(null, self__.socket_);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var s = temp__4657__auto__;
    return s.close(1E3, "CLOSE_NORMAL");
  } else {
    return null;
  }
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  cljs.core.reset_BANG_.call(null, self__.active_retry_id_, "reconnecting");
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116), true], null));
  var temp__4657__auto___29738 = cljs.core.deref.call(null, self__.socket_);
  if (cljs.core.truth_(temp__4657__auto___29738)) {
    var s_29739 = temp__4657__auto___29738;
    s_29739.close(3E3, "SENTE_RECONNECT");
  } else {
  }
  return taoensso.sente._chsk_connect_BANG_.call(null, chsk__$1);
};
taoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  var temp__4657__auto__ = function() {
    var or__4685__auto__ = taoensso.encore.oget.call(null, window, "WebSocket");
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return taoensso.encore.oget.call(null, window, "MozWebSocket");
    }
  }();
  if (cljs.core.truth_(temp__4657__auto__)) {
    var WebSocket = temp__4657__auto__;
    var retry_id = taoensso.encore.uuid_str.call(null);
    var connect_fn = function(retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
      return function taoensso$sente$connect_fn() {
        var retry_fn = function(retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
          return function() {
            if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.active_retry_id_), retry_id)) {
              var retry_count_STAR_ = cljs.core.swap_BANG_.call(null, self__.retry_count_, cljs.core.inc);
              var backoff_ms = self__.backoff_ms_fn.call(null, retry_count_STAR_);
              window.clearInterval(cljs.core.deref.call(null, self__.kalive_timer_));
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 800, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(retry_count_STAR_, backoff_ms, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk is closed: will try reconnect (%s)", retry_count_STAR_], null);
                };
              }(retry_count_STAR_, backoff_ms, retry_id, WebSocket, temp__4657__auto__, chsk__$1), null), null);
              return window.setTimeout(taoensso$sente$connect_fn, backoff_ms);
            } else {
              return null;
            }
          };
        }(retry_id, WebSocket, temp__4657__auto__, chsk__$1);
        var _QMARK_socket = function() {
          try {
            return new WebSocket(taoensso.encore.merge_url_with_query_string.call(null, self__.url, cljs.core.merge.call(null, self__.params, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null))));
          } catch (e29720) {
            if (e29720 instanceof Error) {
              var e = e29720;
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 811, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(e, retry_fn, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, "WebSocket js/Error"], null);
                };
              }(e, retry_fn, retry_id, WebSocket, temp__4657__auto__, chsk__$1), null), null);
              return null;
            } else {
              throw e29720;
            }
          }
        }();
        if (cljs.core.not.call(null, _QMARK_socket)) {
          return retry_fn.call(null);
        } else {
          return cljs.core.reset_BANG_.call(null, self__.socket_, function() {
            var G__29721 = _QMARK_socket;
            G__29721["onerror"] = function(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
              return function(ws_ev) {
                return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 820, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
                  return function() {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["WebSocket error: %s", ws_ev], null);
                  };
                }(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1), null), null);
              };
            }(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1);
            G__29721["onmessage"] = function(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
              return function(ws_ev) {
                var ppstr = taoensso.encore.oget.call(null, ws_ev, "data");
                var vec__29722 = taoensso.sente.unpack.call(null, self__.packer, ppstr);
                var clj = cljs.core.nth.call(null, vec__29722, 0, null);
                var _QMARK_cb_uuid = cljs.core.nth.call(null, vec__29722, 1, null);
                var or__4685__auto__ = function() {
                  var and__4673__auto__ = taoensso.sente.handle_when_handshake_BANG_.call(null, chsk__$1, self__.chs, clj);
                  if (cljs.core.truth_(and__4673__auto__)) {
                    return cljs.core.reset_BANG_.call(null, self__.retry_count_, 0);
                  } else {
                    return and__4673__auto__;
                  }
                }();
                if (cljs.core.truth_(or__4685__auto__)) {
                  return or__4685__auto__;
                } else {
                  var temp__4655__auto__ = _QMARK_cb_uuid;
                  if (cljs.core.truth_(temp__4655__auto__)) {
                    var cb_uuid = temp__4655__auto__;
                    var temp__4655__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_.call(null, self__.cbs_waiting_, cb_uuid);
                    if (cljs.core.truth_(temp__4655__auto____$1)) {
                      var cb_fn = temp__4655__auto____$1;
                      return cb_fn.call(null, clj);
                    } else {
                      return taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 838, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(temp__4655__auto____$1, cb_uuid, temp__4655__auto__, or__4685__auto__, ppstr, vec__29722, clj, _QMARK_cb_uuid, 
                      G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
                        return function() {
                          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Cb reply w/o local cb-fn: %s", clj], null);
                        };
                      }(temp__4655__auto____$1, cb_uuid, temp__4655__auto__, or__4685__auto__, ppstr, vec__29722, clj, _QMARK_cb_uuid, G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1), null), null);
                    }
                  } else {
                    var buffered_evs = clj;
                    return taoensso.sente.receive_buffered_evs_BANG_.call(null, self__.chs, buffered_evs);
                  }
                }
              };
            }(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1);
            G__29721["onopen"] = function(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
              return function(_ws_ev) {
                return cljs.core.reset_BANG_.call(null, self__.kalive_timer_, window.setInterval(function(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
                  return function() {
                    if (cljs.core.truth_(cljs.core.deref.call(null, self__.kalive_due_QMARK__))) {
                      taoensso.sente.chsk_send_BANG_.call(null, chsk__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "ws-ping", "chsk/ws-ping", 191675304)], null));
                    } else {
                    }
                    return cljs.core.reset_BANG_.call(null, self__.kalive_due_QMARK__, true);
                  };
                }(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1), self__.kalive_ms));
              };
            }(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1);
            G__29721["onclose"] = function(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1) {
              return function(_ws_ev) {
                taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null));
                return retry_fn.call(null);
              };
            }(G__29721, retry_fn, _QMARK_socket, retry_id, WebSocket, temp__4657__auto__, chsk__$1);
            return G__29721;
          }());
        }
      };
    }(retry_id, WebSocket, temp__4657__auto__, chsk__$1);
    cljs.core.reset_BANG_.call(null, self__.active_retry_id_, retry_id);
    cljs.core.reset_BANG_.call(null, self__.retry_count_, 0);
    connect_fn.call(null);
    return chsk__$1;
  } else {
    return null;
  }
};
taoensso.sente.ChWebSocket.getBasis = function() {
  return new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null), new cljs.core.Symbol(null, "chs", "chs", 2017417647, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "packer", "packer", 1706609071, null), new cljs.core.Symbol(null, "url", "url", 1916828573, null), new cljs.core.Symbol(null, "state_", "state_", -1696768667, null), new cljs.core.Symbol(null, 
  "cbs-waiting_", "cbs-waiting_", 121502466, null), new cljs.core.Symbol(null, "socket_", "socket_", 1279482619, null), new cljs.core.Symbol(null, "kalive-ms", "kalive-ms", 1851265548, null), new cljs.core.Symbol(null, "kalive-timer_", "kalive-timer_", -1096022620, null), new cljs.core.Symbol(null, "kalive-due?_", "kalive-due?_", 1679969599, null), new cljs.core.Symbol(null, "backoff-ms-fn", "backoff-ms-fn", -1881539814, null), new cljs.core.Symbol(null, "active-retry-id_", "active-retry-id_", 1468292413, 
  null), new cljs.core.Symbol(null, "retry-count_", "retry-count_", 1660769620, null)], null);
};
taoensso.sente.ChWebSocket.cljs$lang$type = true;
taoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = function(this__5333__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChWebSocket");
};
taoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = function(this__5333__auto__, writer__5334__auto__) {
  return cljs.core._write.call(null, writer__5334__auto__, "taoensso.sente/ChWebSocket");
};
taoensso.sente.__GT_ChWebSocket = function taoensso$sente$__GT_ChWebSocket(client_id, chs, params, packer, url, state_, cbs_waiting_, socket_, kalive_ms, kalive_timer_, kalive_due_QMARK__, backoff_ms_fn, active_retry_id_, retry_count_) {
  return new taoensso.sente.ChWebSocket(client_id, chs, params, packer, url, state_, cbs_waiting_, socket_, kalive_ms, kalive_timer_, kalive_due_QMARK__, backoff_ms_fn, active_retry_id_, retry_count_, null, null, null);
};
taoensso.sente.map__GT_ChWebSocket = function taoensso$sente$map__GT_ChWebSocket(G__29682) {
  return new taoensso.sente.ChWebSocket((new cljs.core.Keyword(null, "client-id", "client-id", -464622140)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "chs", "chs", 376886120)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "packer", "packer", 66077544)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(G__29682), 
  (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "socket_", "socket_", -361048908)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149)).cljs$core$IFn$_invoke$arity$1(G__29682), 
  (new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114)).cljs$core$IFn$_invoke$arity$1(G__29682), (new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093)).cljs$core$IFn$_invoke$arity$1(G__29682), null, cljs.core.dissoc.call(null, 
  G__29682, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), 
  new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "retry-count_", "retry-count_", 20238093)), null);
};
taoensso.sente.ChAjaxSocket = function(client_id, chs, params, packer, url, state_, timeout_ms, ajax_opts, curr_xhr_, active_retry_id_, backoff_ms_fn, __meta, __extmap, __hash) {
  this.client_id = client_id;
  this.chs = chs;
  this.params = params;
  this.packer = packer;
  this.url = url;
  this.state_ = state_;
  this.timeout_ms = timeout_ms;
  this.ajax_opts = ajax_opts;
  this.curr_xhr_ = curr_xhr_;
  this.active_retry_id_ = active_retry_id_;
  this.backoff_ms_fn = backoff_ms_fn;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5299__auto__, k__5300__auto__) {
  var self__ = this;
  var this__5299__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5299__auto____$1, k__5300__auto__, null);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5301__auto__, k29741, else__5302__auto__) {
  var self__ = this;
  var this__5301__auto____$1 = this;
  var G__29743 = k29741 instanceof cljs.core.Keyword ? k29741.fqn : null;
  switch(G__29743) {
    case "curr-xhr_":
      return self__.curr_xhr_;
      break;
    case "client-id":
      return self__.client_id;
      break;
    case "packer":
      return self__.packer;
      break;
    case "chs":
      return self__.chs;
      break;
    case "params":
      return self__.params;
      break;
    case "backoff-ms-fn":
      return self__.backoff_ms_fn;
      break;
    case "url":
      return self__.url;
      break;
    case "active-retry-id_":
      return self__.active_retry_id_;
      break;
    case "ajax-opts":
      return self__.ajax_opts;
      break;
    case "timeout-ms":
      return self__.timeout_ms;
      break;
    case "state_":
      return self__.state_;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k29741, else__5302__auto__);
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5313__auto__, writer__5314__auto__, opts__5315__auto__) {
  var self__ = this;
  var this__5313__auto____$1 = this;
  var pr_pair__5316__auto__ = function(this__5313__auto____$1) {
    return function(keyval__5317__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, cljs.core.pr_writer, "", " ", "", opts__5315__auto__, keyval__5317__auto__);
    };
  }(this__5313__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5314__auto__, pr_pair__5316__auto__, "#taoensso.sente.ChAjaxSocket{", ", ", "}", opts__5315__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), self__.timeout_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "ajax-opts", "ajax-opts", -518239109), self__.ajax_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), self__.curr_xhr_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), self__.active_retry_id_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), self__.backoff_ms_fn], null)], null), self__.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$ = true;
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__29740) {
  var self__ = this;
  var G__29740__$1 = this;
  return new cljs.core.RecordIter(0, G__29740__$1, 11, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, 
  "timeout-ms", "timeout-ms", 754221406), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)], null), cljs.core._iterator.call(null, self__.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5297__auto__) {
  var self__ = this;
  var this__5297__auto____$1 = this;
  return self__.__meta;
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5293__auto__) {
  var self__ = this;
  var this__5293__auto____$1 = this;
  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, self__.__hash);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5303__auto__) {
  var self__ = this;
  var this__5303__auto____$1 = this;
  return 11 + cljs.core.count.call(null, self__.__extmap);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5294__auto__) {
  var self__ = this;
  var this__5294__auto____$1 = this;
  var h__5120__auto__ = self__.__hash;
  if (!(h__5120__auto__ == null)) {
    return h__5120__auto__;
  } else {
    var h__5120__auto____$1 = cljs.core.hash_imap.call(null, this__5294__auto____$1);
    self__.__hash = h__5120__auto____$1;
    return h__5120__auto____$1;
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5295__auto__, other__5296__auto__) {
  var self__ = this;
  var this__5295__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4673__auto__ = other__5296__auto__;
    if (cljs.core.truth_(and__4673__auto__)) {
      var and__4673__auto____$1 = this__5295__auto____$1.constructor === other__5296__auto__.constructor;
      if (and__4673__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5295__auto____$1, other__5296__auto__);
      } else {
        return and__4673__auto____$1;
      }
    } else {
      return and__4673__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5308__auto__, k__5309__auto__) {
  var self__ = this;
  var this__5308__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), null, new cljs.core.Keyword(null, "packer", "packer", 66077544), null, new cljs.core.Keyword(null, "chs", "chs", 376886120), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "backoff-ms-fn", 
  "backoff-ms-fn", 772895955), null, new cljs.core.Keyword(null, "url", "url", 276297046), null, new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), null, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), null, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), null, new cljs.core.Keyword(null, "state_", "state_", 957667102), null], null), null), k__5309__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5308__auto____$1), self__.__meta), k__5309__auto__);
  } else {
    return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5309__auto__)), null);
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5306__auto__, k__5307__auto__, G__29740) {
  var self__ = this;
  var this__5306__auto____$1 = this;
  var pred__29744 = cljs.core.keyword_identical_QMARK_;
  var expr__29745 = k__5307__auto__;
  if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), expr__29745))) {
    return new taoensso.sente.ChAjaxSocket(G__29740, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "chs", "chs", 376886120), expr__29745))) {
      return new taoensso.sente.ChAjaxSocket(self__.client_id, G__29740, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__29745))) {
        return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, G__29740, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "packer", "packer", 66077544), expr__29745))) {
          return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, G__29740, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "url", "url", 276297046), expr__29745))) {
            return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, G__29740, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "state_", "state_", 957667102), expr__29745))) {
              return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, G__29740, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), expr__29745))) {
                return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, G__29740, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), expr__29745))) {
                  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, G__29740, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), expr__29745))) {
                    return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, G__29740, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), expr__29745))) {
                      return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, G__29740, self__.backoff_ms_fn, self__.__meta, self__.__extmap, null);
                    } else {
                      if (cljs.core.truth_(pred__29744.call(null, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), expr__29745))) {
                        return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, G__29740, self__.__meta, self__.__extmap, null);
                      } else {
                        return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5307__auto__, G__29740), null);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5311__auto__) {
  var self__ = this;
  var this__5311__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "chs", "chs", 376886120), self__.chs], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "packer", "packer", 66077544), self__.packer], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "url", "url", 276297046), self__.url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "state_", "state_", 957667102), self__.state_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), self__.timeout_ms], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), self__.ajax_opts], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), self__.curr_xhr_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), self__.active_retry_id_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), self__.backoff_ms_fn], null)], null), self__.__extmap));
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5298__auto__, G__29740) {
  var self__ = this;
  var this__5298__auto____$1 = this;
  return new taoensso.sente.ChAjaxSocket(self__.client_id, self__.chs, self__.params, self__.packer, self__.url, self__.state_, self__.timeout_ms, self__.ajax_opts, self__.curr_xhr_, self__.active_retry_id_, self__.backoff_ms_fn, G__29740, self__.__extmap, self__.__hash);
};
taoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5304__auto__, entry__5305__auto__) {
  var self__ = this;
  var this__5304__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5305__auto__)) {
    return cljs.core._assoc.call(null, this__5304__auto____$1, cljs.core._nth.call(null, entry__5305__auto__, 0), cljs.core._nth.call(null, entry__5305__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5304__auto____$1, entry__5305__auto__);
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = true;
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = function(chsk, ev, p__29747) {
  var self__ = this;
  var map__29748 = p__29747;
  var map__29748__$1 = (!(map__29748 == null) ? map__29748.cljs$lang$protocol_mask$partition0$ & 64 || map__29748.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29748) : map__29748;
  var opts = map__29748__$1;
  var _QMARK_timeout_ms = cljs.core.get.call(null, map__29748__$1, new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406));
  var _QMARK_cb = cljs.core.get.call(null, map__29748__$1, new cljs.core.Keyword(null, "cb", "cb", 589947841));
  var flush_QMARK_ = cljs.core.get.call(null, map__29748__$1, new cljs.core.Keyword(null, "flush?", "flush?", -108887231));
  var chsk__$1 = this;
  taoensso.sente.assert_send_args.call(null, ev, _QMARK_timeout_ms, _QMARK_cb);
  var _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn.call(null, _QMARK_cb, ev);
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_)))) {
    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 879, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(_QMARK_cb_fn, chsk__$1, map__29748, map__29748__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk send against closed chsk."], null);
      };
    }(_QMARK_cb_fn, chsk__$1, map__29748, map__29748__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_), null), null);
    if (cljs.core.truth_(_QMARK_cb_fn)) {
      return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "closed", "chsk/closed", -922855264));
    } else {
      return null;
    }
  } else {
    var csrf_token = (new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_));
    taoensso.sente.ajax_lite.call(null, self__.url, cljs.core.merge.call(null, self__.ajax_opts, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), _QMARK_timeout_ms, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "headers", 
    "headers", -835030129), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "headers", "headers", -835030129)).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "X-CSRF-Token", "X-CSRF-Token", 1562992453), csrf_token], null)), new cljs.core.Keyword(null, "params", "params", 710516235), function() {
      var ppstr = taoensso.sente.pack.call(null, self__.packer, cljs.core.meta.call(null, ev), ev, cljs.core.truth_(_QMARK_cb_fn) ? new cljs.core.Keyword(null, "ajax-cb", "ajax-cb", -807060321) : null);
      return cljs.core.merge.call(null, self__.params, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "_", "_", 1453416199), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856), csrf_token, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id, new cljs.core.Keyword(null, "ppstr", "ppstr", 1557495252), ppstr], null));
    }()], null)), function(csrf_token, _QMARK_cb_fn, chsk__$1, map__29748, map__29748__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_) {
      return function taoensso$sente$ajax_cb(p__29750) {
        var map__29754 = p__29750;
        var map__29754__$1 = (!(map__29754 == null) ? map__29754.cljs$lang$protocol_mask$partition0$ & 64 || map__29754.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29754) : map__29754;
        var _QMARK_error = cljs.core.get.call(null, map__29754__$1, new cljs.core.Keyword(null, "?error", "?error", 1070752222));
        var _QMARK_content = cljs.core.get.call(null, map__29754__$1, new cljs.core.Keyword(null, "?content", "?content", 1697782054));
        if (cljs.core.truth_(_QMARK_error)) {
          if (cljs.core._EQ_.call(null, _QMARK_error, new cljs.core.Keyword(null, "timeout", "timeout", -318625318))) {
            if (cljs.core.truth_(_QMARK_cb_fn)) {
              return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "timeout", "chsk/timeout", -319776489));
            } else {
              return null;
            }
          } else {
            taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null));
            if (cljs.core.truth_(_QMARK_cb_fn)) {
              return _QMARK_cb_fn.call(null, new cljs.core.Keyword("chsk", "error", "chsk/error", -984175439));
            } else {
              return null;
            }
          }
        } else {
          var content = _QMARK_content;
          var resp_ppstr = content;
          var vec__29756 = taoensso.sente.unpack.call(null, self__.packer, resp_ppstr);
          var resp_clj = cljs.core.nth.call(null, vec__29756, 0, null);
          var _ = cljs.core.nth.call(null, vec__29756, 1, null);
          if (cljs.core.truth_(_QMARK_cb_fn)) {
            _QMARK_cb_fn.call(null, resp_clj);
          } else {
            if (cljs.core.not_EQ_.call(null, resp_clj, new cljs.core.Keyword("chsk", "dummy-cb-200", "chsk/dummy-cb-200", -1663130337))) {
              taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 919, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(content, resp_ppstr, vec__29756, resp_clj, _, map__29754, map__29754__$1, _QMARK_error, _QMARK_content, csrf_token, _QMARK_cb_fn, 
              chsk__$1, map__29748, map__29748__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_) {
                return function() {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Cb reply w/o local cb-fn: %s", resp_clj], null);
                };
              }(content, resp_ppstr, vec__29756, resp_clj, _, map__29754, map__29754__$1, _QMARK_error, _QMARK_content, csrf_token, _QMARK_cb_fn, chsk__$1, map__29748, map__29748__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_), null), null);
            } else {
            }
          }
          return taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), true], null));
        }
      };
    }(csrf_token, _QMARK_cb_fn, chsk__$1, map__29748, map__29748__$1, opts, _QMARK_timeout_ms, _QMARK_cb, flush_QMARK_));
    return new cljs.core.Keyword(null, "apparent-success", "apparent-success", 242592222);
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_destroy_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  return taoensso.sente.chsk_disconnect_BANG_.call(null, chsk__$1);
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_disconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  cljs.core.reset_BANG_.call(null, self__.active_retry_id_, "disconnected");
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null));
  var temp__4657__auto__ = cljs.core.deref.call(null, self__.curr_xhr_);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var x = temp__4657__auto__;
    return x.abort();
  } else {
    return null;
  }
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$chsk_reconnect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  cljs.core.reset_BANG_.call(null, self__.active_retry_id_, "reconnecting");
  taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false, new cljs.core.Keyword(null, "requested-reconnect-pending?", "requested-reconnect-pending?", -299841116), true], null));
  var temp__4657__auto___29772 = cljs.core.deref.call(null, self__.curr_xhr_);
  if (cljs.core.truth_(temp__4657__auto___29772)) {
    var x_29773 = temp__4657__auto___29772;
    x_29773.abort();
  } else {
  }
  return taoensso.sente._chsk_connect_BANG_.call(null, chsk__$1);
};
taoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = function(chsk) {
  var self__ = this;
  var chsk__$1 = this;
  var retry_id = taoensso.encore.uuid_str.call(null);
  var poll_fn = function(retry_id, chsk__$1) {
    return function taoensso$sente$poll_fn(retry_count) {
      taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 940, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(retry_id, chsk__$1) {
        return function() {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["async-poll-for-update!"], null);
        };
      }(retry_id, chsk__$1), null), null);
      var retry_fn = function(retry_id, chsk__$1) {
        return function() {
          if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.active_retry_id_), retry_id)) {
            var retry_count_STAR_ = retry_count + 1;
            var backoff_ms = self__.backoff_ms_fn.call(null, retry_count_STAR_);
            taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 946, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(retry_count_STAR_, backoff_ms, retry_id, chsk__$1) {
              return function() {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Chsk is closed: will try reconnect (%s)", retry_count_STAR_], null);
              };
            }(retry_count_STAR_, backoff_ms, retry_id, chsk__$1), null), null);
            return window.setTimeout(function(retry_count_STAR_, backoff_ms, retry_id, chsk__$1) {
              return function() {
                return taoensso$sente$poll_fn.call(null, retry_count_STAR_);
              };
            }(retry_count_STAR_, backoff_ms, retry_id, chsk__$1), backoff_ms);
          } else {
            return null;
          }
        };
      }(retry_id, chsk__$1);
      return cljs.core.reset_BANG_.call(null, self__.curr_xhr_, taoensso.sente.ajax_lite.call(null, self__.url, cljs.core.merge.call(null, self__.ajax_opts, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), self__.timeout_ms, new cljs.core.Keyword(null, "resp-type", "resp-type", 1050675962), new cljs.core.Keyword(null, "text", 
      "text", -1790561697), new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.merge.call(null, self__.params, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "_", "_", 1453416199), taoensso.encore.now_udt.call(null), new cljs.core.Keyword(null, "client-id", "client-id", -464622140), self__.client_id], null), cljs.core.truth_((new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state_))) ? 
      null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "handshake?", "handshake?", -423743093), true], null))], null)), function(retry_fn, retry_id, chsk__$1) {
        return function taoensso$sente$poll_fn_$_ajax_cb(p__29764) {
          var map__29768 = p__29764;
          var map__29768__$1 = (!(map__29768 == null) ? map__29768.cljs$lang$protocol_mask$partition0$ & 64 || map__29768.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29768) : map__29768;
          var _QMARK_error = cljs.core.get.call(null, map__29768__$1, new cljs.core.Keyword(null, "?error", "?error", 1070752222));
          var _QMARK_content = cljs.core.get.call(null, map__29768__$1, new cljs.core.Keyword(null, "?content", "?content", 1697782054));
          if (cljs.core.truth_(_QMARK_error)) {
            if (cljs.core._EQ_.call(null, _QMARK_error, new cljs.core.Keyword(null, "timeout", "timeout", -318625318))) {
              return taoensso$sente$poll_fn.call(null, 0);
            } else {
              taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null));
              return retry_fn.call(null);
            }
          } else {
            var content = _QMARK_content;
            var ppstr = content;
            var vec__29770 = taoensso.sente.unpack.call(null, self__.packer, ppstr);
            var clj = cljs.core.nth.call(null, vec__29770, 0, null);
            var _ = cljs.core.nth.call(null, vec__29770, 1, null);
            var or__4685__auto___29774 = taoensso.sente.handle_when_handshake_BANG_.call(null, chsk__$1, self__.chs, clj);
            if (cljs.core.truth_(or__4685__auto___29774)) {
            } else {
              var buffered_evs_29775 = clj;
              taoensso.sente.receive_buffered_evs_BANG_.call(null, self__.chs, buffered_evs_29775);
              taoensso.sente.merge_GT_chsk_state_BANG_.call(null, chsk__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1238443125), true], null));
            }
            return taoensso$sente$poll_fn.call(null, 0);
          }
        };
      }(retry_fn, retry_id, chsk__$1)));
    };
  }(retry_id, chsk__$1);
  cljs.core.reset_BANG_.call(null, self__.active_retry_id_, retry_id);
  poll_fn.call(null, 0);
  return chsk__$1;
};
taoensso.sente.ChAjaxSocket.getBasis = function() {
  return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null), new cljs.core.Symbol(null, "chs", "chs", 2017417647, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "packer", "packer", 1706609071, null), new cljs.core.Symbol(null, "url", "url", 1916828573, null), new cljs.core.Symbol(null, "state_", "state_", -1696768667, null), new cljs.core.Symbol(null, 
  "timeout-ms", "timeout-ms", -1900214363, null), new cljs.core.Symbol(null, "ajax-opts", "ajax-opts", 1122292418, null), new cljs.core.Symbol(null, "curr-xhr_", "curr-xhr_", 321757831, null), new cljs.core.Symbol(null, "active-retry-id_", "active-retry-id_", 1468292413, null), new cljs.core.Symbol(null, "backoff-ms-fn", "backoff-ms-fn", -1881539814, null)], null);
};
taoensso.sente.ChAjaxSocket.cljs$lang$type = true;
taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = function(this__5333__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "taoensso.sente/ChAjaxSocket");
};
taoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = function(this__5333__auto__, writer__5334__auto__) {
  return cljs.core._write.call(null, writer__5334__auto__, "taoensso.sente/ChAjaxSocket");
};
taoensso.sente.__GT_ChAjaxSocket = function taoensso$sente$__GT_ChAjaxSocket(client_id, chs, params, packer, url, state_, timeout_ms, ajax_opts, curr_xhr_, active_retry_id_, backoff_ms_fn) {
  return new taoensso.sente.ChAjaxSocket(client_id, chs, params, packer, url, state_, timeout_ms, ajax_opts, curr_xhr_, active_retry_id_, backoff_ms_fn, null, null, null);
};
taoensso.sente.map__GT_ChAjaxSocket = function taoensso$sente$map__GT_ChAjaxSocket(G__29742) {
  return new taoensso.sente.ChAjaxSocket((new cljs.core.Keyword(null, "client-id", "client-id", -464622140)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "chs", "chs", 376886120)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "packer", "packer", 66077544)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(G__29742), 
  (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", 
  -172239114)).cljs$core$IFn$_invoke$arity$1(G__29742), (new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)).cljs$core$IFn$_invoke$arity$1(G__29742), null, cljs.core.dissoc.call(null, G__29742, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "url", "url", 276297046), 
  new cljs.core.Keyword(null, "state_", "state_", 957667102), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955)), null);
};
taoensso.sente.get_chsk_url = function taoensso$sente$get_chsk_url(protocol, chsk_host, chsk_path, type) {
  var protocol__$1 = function() {
    var G__29777 = type instanceof cljs.core.Keyword ? type.fqn : null;
    switch(G__29777) {
      case "ajax":
        return protocol;
        break;
      case "ws":
        if (cljs.core._EQ_.call(null, protocol, "https:")) {
          return "wss:";
        } else {
          return "ws:";
        }
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
    }
  }();
  return [cljs.core.str(protocol__$1), cljs.core.str("//"), cljs.core.str(taoensso.encore.path.call(null, chsk_host, chsk_path))].join("");
};
taoensso.sente.make_channel_socket_client_BANG_ = function taoensso$sente$make_channel_socket_client_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___29793 = arguments.length;
  var i__5744__auto___29794 = 0;
  while (true) {
    if (i__5744__auto___29794 < len__5743__auto___29793) {
      args__5750__auto__.push(arguments[i__5744__auto___29794]);
      var G__29795 = i__5744__auto___29794 + 1;
      i__5744__auto___29794 = G__29795;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(path, p__29782) {
  var vec__29783 = p__29782;
  var map__29784 = cljs.core.nth.call(null, vec__29783, 0, null);
  var map__29784__$1 = (!(map__29784 == null) ? map__29784.cljs$lang$protocol_mask$partition0$ & 64 || map__29784.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29784) : map__29784;
  var opts = map__29784__$1;
  var ajax_opts = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109));
  var ws_kalive_ms = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "ws-kalive-ms", "ws-kalive-ms", 1442179968), 25E3);
  var lp_timeout_ms = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "lp-timeout-ms", "lp-timeout-ms", -1451963133), 25E3);
  var client_id = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "client-id", "client-id", -464622140), function() {
    var or__4685__auto__ = (new cljs.core.Keyword(null, "client-uuid", "client-uuid", -1717531965)).cljs$core$IFn$_invoke$arity$1(opts);
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return taoensso.encore.uuid_str.call(null);
    }
  }());
  var packer = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "edn", "edn", 1317840885));
  var params = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var type = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "auto", "auto", -566279492));
  var host = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "host", "host", -1558485167));
  var recv_buf_or_n = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "recv-buf-or-n", "recv-buf-or-n", 1363950355), cljs.core.async.sliding_buffer.call(null, 2048));
  var backoff_ms_fn = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), taoensso.encore.exp_backoff);
  var wrap_recv_evs_QMARK_ = cljs.core.get.call(null, map__29784__$1, new cljs.core.Keyword(null, "wrap-recv-evs?", "wrap-recv-evs?", -1996694153), true);
  var _deprecated_more_opts = cljs.core.nth.call(null, vec__29783, 1, null);
  if (cljs.core.truth_(function() {
    var __x = type;
    try {
      if (function(__x, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
        return function(__x__$1) {
          return cljs.core.contains_QMARK_.call(null, taoensso.truss.impl.set_STAR_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), null, new cljs.core.Keyword(null, "auto", "auto", -566279492), null], null), null)), __x__$1);
        };
      }(__x, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts).call(null, __x)) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e29786) {
      if (e29786 instanceof Error) {
        var __t = e29786;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "([:in #{:ws :ajax :auto}] type)", __x, __t, null);
      } else {
        throw e29786;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "in", "in", -1531184865), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ws", "ws", 86841443), null, new cljs.core.Keyword(null, "ajax", "ajax", 814345549), 
    null, new cljs.core.Keyword(null, "auto", "auto", -566279492), null], null), null)], null), new cljs.core.Symbol(null, "type", "type", -1480165421, null))))].join(""));
  }
  if (cljs.core.truth_(function() {
    var __x = client_id;
    try {
      if (cljs.core.truth_(taoensso.encore.nblank_str_QMARK_.call(null, __x))) {
        return true;
      } else {
        return taoensso.truss.impl._invar_violation_BANG_.call(null);
      }
    } catch (e29787) {
      if (e29787 instanceof Error) {
        var __t = e29787;
        return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, "(enc/nblank-str? client-id)", __x, __t, null);
      } else {
        throw e29787;
      }
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "have?", "have?", -1685305646, null), new cljs.core.Symbol("enc", "nblank-str?", "enc/nblank-str?", 19952870, null), new cljs.core.Symbol(null, "client-id", "client-id", 1175909387, null))))].join(""));
  }
  if (!(_deprecated_more_opts == null)) {
    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 1055, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, 
    backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0."], null);
      };
    }(vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), null), null);
  } else {
  }
  if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "lp-timeout", "lp-timeout", 1149461302))) {
    taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "warn", "warn", -436710552), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 1057, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, 
    backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
      return function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [":lp-timeout opt has CHANGED; please use :lp-timout-ms."], null);
      };
    }(vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), null), null);
  } else {
  }
  var packer__$1 = taoensso.sente.interfaces.coerce_packer.call(null, packer);
  var win_location = taoensso.encore.get_window_location.call(null);
  var win_protocol = (new cljs.core.Keyword(null, "protocol", "protocol", 652470118)).cljs$core$IFn$_invoke$arity$1(win_location);
  var host__$1 = function() {
    var or__4685__auto__ = host;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return (new cljs.core.Keyword(null, "host", "host", -1558485167)).cljs$core$IFn$_invoke$arity$1(win_location);
    }
  }();
  var path__$1 = function() {
    var or__4685__auto__ = path;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return (new cljs.core.Keyword(null, "pathname", "pathname", -1420497528)).cljs$core$IFn$_invoke$arity$1(win_location);
    }
  }();
  var private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 10)), new cljs.core.Keyword(null, "internal", "internal", -854870097), cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 10)), new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537), cljs.core.async.chan.call(null, recv_buf_or_n)], null);
  var ever_opened_QMARK__ = cljs.core.atom.call(null, false);
  var state_STAR_ = function(packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
    return function(state) {
      if (cljs.core.truth_(function() {
        var or__4685__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "open?", "open?", 1238443125)).cljs$core$IFn$_invoke$arity$1(state));
        if (or__4685__auto__) {
          return or__4685__auto__;
        } else {
          return cljs.core.deref.call(null, ever_opened_QMARK__);
        }
      }())) {
        return state;
      } else {
        cljs.core.reset_BANG_.call(null, ever_opened_QMARK__, true);
        return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "first-open?", "first-open?", 396686530), true);
      }
    };
  }(packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts);
  var public_ch_recv = cljs.core.async.merge.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "internal", "internal", -854870097)).cljs$core$IFn$_invoke$arity$1(private_chs), cljs.core.async.map_LT_.call(null, function(packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, 
  params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
    return function(state) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "state", "chsk/state", -1991397620), state_STAR_.call(null, state)], null);
    };
  }(packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(private_chs)), function() {
    var _LT_server_ch = (new cljs.core.Keyword(null, "\x3cserver", "\x3cserver", -2135373537)).cljs$core$IFn$_invoke$arity$1(private_chs);
    if (cljs.core.truth_(wrap_recv_evs_QMARK_)) {
      return cljs.core.async.map_LT_.call(null, function(_LT_server_ch, packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
        return function(ev) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("chsk", "recv", "chsk/recv", 561097091), ev], null);
        };
      }(_LT_server_ch, packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), _LT_server_ch);
    } else {
      return cljs.core.async.map_LT_.call(null, function(_LT_server_ch, packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
        return function(ev) {
          var vec__29788 = ev;
          var id = cljs.core.nth.call(null, vec__29788, 0, null);
          var _QMARK_data = cljs.core.nth.call(null, vec__29788, 1, null);
          var __x_29796 = function() {
            try {
              return cljs.core.namespace.call(null, id);
            } catch (e29789) {
              if (e29789 instanceof Error) {
                var __t = e29789;
                return taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, '((fn* [p1__29779#] (not\x3d p1__29779# "chsk")) (namespace id))', taoensso.truss.impl._invar_undefined_val, __t, null);
              } else {
                throw e29789;
              }
            }
          }();
          try {
            if (function(__x_29796, vec__29788, id, _QMARK_data, _LT_server_ch, packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
              return function(p1__29779_SHARP_) {
                return cljs.core.not_EQ_.call(null, p1__29779_SHARP_, "chsk");
              };
            }(__x_29796, vec__29788, id, _QMARK_data, _LT_server_ch, packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts).call(null, __x_29796)) {
            } else {
              taoensso.truss.impl._invar_violation_BANG_.call(null);
            }
          } catch (e29790) {
            if (e29790 instanceof Error) {
              var __t_29797 = e29790;
              taoensso.truss.impl._invar_violation_BANG_.call(null, true, "taoensso.sente", null, '((fn* [p1__29779#] (not\x3d p1__29779# "chsk")) (namespace id))', __x_29796, __t_29797, null);
            } else {
              throw e29790;
            }
          }
          return ev;
        };
      }(_LT_server_ch, packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), _LT_server_ch);
    }
  }()], null));
  var chsk = function() {
    var or__4685__auto__ = function() {
      var and__4673__auto__ = cljs.core.not_EQ_.call(null, type, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
      if (and__4673__auto__) {
        return taoensso.sente._chsk_connect_BANG_.call(null, taoensso.sente.map__GT_ChWebSocket.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "kalive-ms", "kalive-ms", 210734021), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "retry-count_", "retry-count_", 
        20238093), new cljs.core.Keyword(null, "backoff-ms-fn", "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "socket_", "socket_", -361048908), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "kalive-due?_", "kalive-due?_", 39438072), new cljs.core.Keyword(null, "cbs-waiting_", "cbs-waiting_", -1519029061), new cljs.core.Keyword(null, "kalive-timer_", "kalive-timer_", 1558413149), 
        new cljs.core.Keyword(null, "state_", "state_", 957667102)], [client_id, ws_kalive_ms, packer__$1, private_chs, params, cljs.core.atom.call(null, 0), backoff_ms_fn, cljs.core.atom.call(null, null), function() {
          var temp__4655__auto__ = (new cljs.core.Keyword(null, "chsk-url-fn", "chsk-url-fn", 1968894294)).cljs$core$IFn$_invoke$arity$1(opts);
          if (cljs.core.truth_(temp__4655__auto__)) {
            var f = temp__4655__auto__;
            return f.call(null, path__$1, win_location, new cljs.core.Keyword(null, "ws", "ws", 86841443));
          } else {
            return taoensso.sente.get_chsk_url.call(null, win_protocol, host__$1, path__$1, new cljs.core.Keyword(null, "ws", "ws", 86841443));
          }
        }(), cljs.core.atom.call(null, "pending"), cljs.core.atom.call(null, true), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), cljs.core.atom.call(null, null), cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ws", "ws", 86841443), new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null))])));
      } else {
        return and__4673__auto__;
      }
    }();
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      var and__4673__auto__ = cljs.core.not_EQ_.call(null, type, new cljs.core.Keyword(null, "ws", "ws", 86841443));
      if (and__4673__auto__) {
        return taoensso.sente._chsk_connect_BANG_.call(null, taoensso.sente.map__GT_ChAjaxSocket.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "curr-xhr_", "curr-xhr_", -1318773696), new cljs.core.Keyword(null, "client-id", "client-id", -464622140), new cljs.core.Keyword(null, "packer", "packer", 66077544), new cljs.core.Keyword(null, "chs", "chs", 376886120), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "backoff-ms-fn", 
        "backoff-ms-fn", 772895955), new cljs.core.Keyword(null, "url", "url", 276297046), new cljs.core.Keyword(null, "active-retry-id_", "active-retry-id_", -172239114), new cljs.core.Keyword(null, "ajax-opts", "ajax-opts", -518239109), new cljs.core.Keyword(null, "timeout-ms", "timeout-ms", 754221406), new cljs.core.Keyword(null, "state_", "state_", 957667102)], [cljs.core.atom.call(null, null), client_id, packer__$1, private_chs, params, backoff_ms_fn, function() {
          var temp__4655__auto__ = (new cljs.core.Keyword(null, "chsk-url-fn", "chsk-url-fn", 1968894294)).cljs$core$IFn$_invoke$arity$1(opts);
          if (cljs.core.truth_(temp__4655__auto__)) {
            var f = temp__4655__auto__;
            return f.call(null, path__$1, win_location, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
          } else {
            return taoensso.sente.get_chsk_url.call(null, win_protocol, host__$1, path__$1, new cljs.core.Keyword(null, "ajax", "ajax", 814345549));
          }
        }(), cljs.core.atom.call(null, "pending"), ajax_opts, lp_timeout_ms, cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "ajax", "ajax", 814345549), new cljs.core.Keyword(null, "open?", "open?", 1238443125), false], null))])));
      } else {
        return and__4673__auto__;
      }
    }
  }();
  var _ = cljs.core.truth_(chsk) ? null : function() {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Failed to create channel socket"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "chsk", "chsk", 776828446, null)))].join(""));
  }();
  var send_fn = cljs.core.partial.call(null, taoensso.sente.chsk_send_BANG_, chsk);
  var public_ch_recv__$1 = cljs.core.async.map_LT_.call(null, function(packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, public_ch_recv, chsk, _, send_fn, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts) {
    return function taoensso$sente$ev__GT_ev_msg(ev) {
      var vec__29792 = taoensso.sente.as_event.call(null, ev);
      var ev_id = cljs.core.nth.call(null, vec__29792, 0, null);
      var ev__QMARK_data = cljs.core.nth.call(null, vec__29792, 1, null);
      var ev__$1 = vec__29792;
      return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), public_ch_recv, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "state", "state", -1988618099), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(chsk), new cljs.core.Keyword(null, "event", "event", 301435442), ev__$1, new cljs.core.Keyword(null, "id", "id", -1388402092), ev_id, new cljs.core.Keyword(null, 
      "?data", "?data", -9471433), ev__QMARK_data], null);
    };
  }(packer__$1, win_location, win_protocol, host__$1, path__$1, private_chs, ever_opened_QMARK__, state_STAR_, public_ch_recv, chsk, _, send_fn, vec__29783, map__29784, map__29784__$1, opts, ajax_opts, ws_kalive_ms, lp_timeout_ms, client_id, packer, params, type, host, recv_buf_or_n, backoff_ms_fn, wrap_recv_evs_QMARK_, _deprecated_more_opts), public_ch_recv);
  if (cljs.core.truth_(chsk)) {
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "chsk", "chsk", -863703081), chsk, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861), public_ch_recv__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041), send_fn, new cljs.core.Keyword(null, "state", "state", -1988618099), (new cljs.core.Keyword(null, "state_", "state_", 957667102)).cljs$core$IFn$_invoke$arity$1(chsk)], null);
  } else {
    return null;
  }
};
taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = 1;
taoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = function(seq29780) {
  var G__29781 = cljs.core.first.call(null, seq29780);
  var seq29780__$1 = cljs.core.next.call(null, seq29780);
  return taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29781, seq29780__$1);
};
taoensso.sente._start_chsk_router_BANG_ = function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_, ch_recv, event_msg_handler, opts) {
  var map__30004 = opts;
  var map__30004__$1 = (!(map__30004 == null) ? map__30004.cljs$lang$protocol_mask$partition0$ & 64 || map__30004.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30004) : map__30004;
  var trace_evs_QMARK_ = cljs.core.get.call(null, map__30004__$1, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
  var error_handler = cljs.core.get.call(null, map__30004__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  var ch_ctrl = cljs.core.async.chan.call(null);
  var c__26140__auto___30210 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl) {
    return function() {
      var f__26141__auto__ = function() {
        var switch__26028__auto__ = function(c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl) {
          return function(state_30135) {
            var state_val_30136 = state_30135[1];
            if (state_val_30136 === 7) {
              var inst_30131 = state_30135[2];
              var state_30135__$1 = state_30135;
              var statearr_30137_30211 = state_30135__$1;
              statearr_30137_30211[2] = inst_30131;
              statearr_30137_30211[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_30136 === 20) {
                var inst_30015 = state_30135[7];
                var inst_30014 = state_30135[8];
                var inst_30012 = state_30135[9];
                var inst_30040 = state_30135[10];
                var inst_30039 = state_30135[11];
                var inst_30013 = state_30135[12];
                var inst_30050 = function() {
                  var vec__30007 = inst_30012;
                  var v = inst_30013;
                  var p = inst_30014;
                  var stop_QMARK_ = inst_30015;
                  var map__30018 = inst_30039;
                  var event_msg = inst_30039;
                  var event = inst_30040;
                  return function(vec__30007, v, p, stop_QMARK_, map__30018, event_msg, event, inst_30015, inst_30014, inst_30012, inst_30040, inst_30039, inst_30013, state_val_30136, c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl) {
                    return function() {
                      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Pre-handler event: %s", event], null);
                    };
                  }(vec__30007, v, p, stop_QMARK_, map__30018, event_msg, event, inst_30015, inst_30014, inst_30012, inst_30040, inst_30039, inst_30013, state_val_30136, c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl);
                }();
                var inst_30051 = new cljs.core.Delay(inst_30050, null);
                var inst_30052 = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "trace", "trace", -1082747415), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 1176, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), inst_30051, null);
                var state_30135__$1 = state_30135;
                var statearr_30138_30212 = state_30135__$1;
                statearr_30138_30212[2] = inst_30052;
                statearr_30138_30212[1] = 22;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_30136 === 27) {
                  var inst_30039 = state_30135[11];
                  var inst_30057 = state_30135[2];
                  var inst_30058 = "(server-event-msg? event-msg)";
                  var inst_30059 = taoensso.truss.impl._invar_violation_BANG_.call(null, null, "taoensso.sente", null, inst_30058, inst_30039, inst_30057, null);
                  var state_30135__$1 = state_30135;
                  var statearr_30139_30213 = state_30135__$1;
                  statearr_30139_30213[2] = inst_30059;
                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135__$1);
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_30136 === 1) {
                    var state_30135__$1 = state_30135;
                    var statearr_30140_30214 = state_30135__$1;
                    statearr_30140_30214[2] = null;
                    statearr_30140_30214[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_30136 === 24) {
                      var state_30135__$1 = state_30135;
                      var statearr_30141_30215 = state_30135__$1;
                      statearr_30141_30215[2] = null;
                      statearr_30141_30215[1] = 34;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_30136 === 39) {
                        var state_30135__$1 = state_30135;
                        var statearr_30142_30216 = state_30135__$1;
                        statearr_30142_30216[2] = null;
                        statearr_30142_30216[1] = 40;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_30136 === 46) {
                          var inst_30104 = state_30135[13];
                          var inst_30112 = state_30135[2];
                          var inst_30113 = [inst_30112, null];
                          var inst_30114 = new cljs.core.PersistentVector(null, 2, 5, inst_30104, inst_30113, null);
                          var state_30135__$1 = state_30135;
                          var statearr_30143_30217 = state_30135__$1;
                          statearr_30143_30217[2] = inst_30114;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135__$1);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_30136 === 4) {
                            var inst_30015 = state_30135[7];
                            var inst_30014 = state_30135[8];
                            var inst_30012 = state_30135[9];
                            var inst_30012__$1 = state_30135[2];
                            var inst_30013 = cljs.core.nth.call(null, inst_30012__$1, 0, null);
                            var inst_30014__$1 = cljs.core.nth.call(null, inst_30012__$1, 1, null);
                            var inst_30015__$1 = taoensso.encore.kw_identical_QMARK_.call(null, inst_30014__$1, ch_ctrl);
                            var state_30135__$1 = function() {
                              var statearr_30144 = state_30135;
                              statearr_30144[7] = inst_30015__$1;
                              statearr_30144[8] = inst_30014__$1;
                              statearr_30144[9] = inst_30012__$1;
                              statearr_30144[12] = inst_30013;
                              return statearr_30144;
                            }();
                            if (cljs.core.truth_(inst_30015__$1)) {
                              var statearr_30145_30218 = state_30135__$1;
                              statearr_30145_30218[1] = 5;
                            } else {
                              var statearr_30146_30219 = state_30135__$1;
                              statearr_30146_30219[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_30136 === 15) {
                              var inst_30013 = state_30135[12];
                              var state_30135__$1 = state_30135;
                              var statearr_30147_30220 = state_30135__$1;
                              statearr_30147_30220[2] = inst_30013;
                              statearr_30147_30220[1] = 16;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_30136 === 48) {
                                var state_30135__$1 = state_30135;
                                var statearr_30148_30221 = state_30135__$1;
                                statearr_30148_30221[2] = null;
                                statearr_30148_30221[1] = 49;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_30136 === 21) {
                                  var state_30135__$1 = state_30135;
                                  var statearr_30149_30222 = state_30135__$1;
                                  statearr_30149_30222[2] = null;
                                  statearr_30149_30222[1] = 22;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_30136 === 31) {
                                    var inst_30068 = state_30135[2];
                                    var state_30135__$1 = state_30135;
                                    var statearr_30150_30223 = state_30135__$1;
                                    statearr_30150_30223[2] = inst_30068;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_30136 === 32) {
                                      var inst_30085 = state_30135[2];
                                      var state_30135__$1 = state_30135;
                                      var statearr_30151_30224 = state_30135__$1;
                                      statearr_30151_30224[2] = inst_30085;
                                      statearr_30151_30224[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_30136 === 40) {
                                        var inst_30128 = state_30135[2];
                                        var state_30135__$1 = function() {
                                          var statearr_30152 = state_30135;
                                          statearr_30152[14] = inst_30128;
                                          return statearr_30152;
                                        }();
                                        var statearr_30153_30225 = state_30135__$1;
                                        statearr_30153_30225[2] = null;
                                        statearr_30153_30225[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_30136 === 33) {
                                          var inst_30039 = state_30135[11];
                                          var inst_30072 = state_30135[2];
                                          var inst_30073 = "(client-event-msg? event-msg)";
                                          var inst_30074 = taoensso.truss.impl._invar_violation_BANG_.call(null, null, "taoensso.sente", null, inst_30073, inst_30039, inst_30072, null);
                                          var state_30135__$1 = state_30135;
                                          var statearr_30154_30226 = state_30135__$1;
                                          statearr_30154_30226[2] = inst_30074;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_30136 === 13) {
                                            var inst_30031 = state_30135[2];
                                            var state_30135__$1 = state_30135;
                                            var statearr_30155_30227 = state_30135__$1;
                                            statearr_30155_30227[2] = inst_30031;
                                            statearr_30155_30227[1] = 10;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_30136 === 22) {
                                              var inst_30055 = state_30135[2];
                                              var state_30135__$1 = function() {
                                                var statearr_30156 = state_30135;
                                                statearr_30156[15] = inst_30055;
                                                return statearr_30156;
                                              }();
                                              if (cljs.core.truth_(server_QMARK_)) {
                                                var statearr_30157_30228 = state_30135__$1;
                                                statearr_30157_30228[1] = 23;
                                              } else {
                                                var statearr_30158_30229 = state_30135__$1;
                                                statearr_30158_30229[1] = 24;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_30136 === 36) {
                                                var inst_30081 = taoensso.truss.impl._invar_violation_BANG_.call(null);
                                                var state_30135__$1 = state_30135;
                                                var statearr_30159_30230 = state_30135__$1;
                                                statearr_30159_30230[2] = inst_30081;
                                                statearr_30159_30230[1] = 37;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_30136 === 41) {
                                                  var inst_30118 = state_30135[16];
                                                  var inst_30116 = state_30135[17];
                                                  var inst_30116__$1 = state_30135[2];
                                                  var inst_30117 = cljs.core.nth.call(null, inst_30116__$1, 0, null);
                                                  var inst_30118__$1 = cljs.core.nth.call(null, inst_30116__$1, 1, null);
                                                  var state_30135__$1 = function() {
                                                    var statearr_30160 = state_30135;
                                                    statearr_30160[18] = inst_30117;
                                                    statearr_30160[16] = inst_30118__$1;
                                                    statearr_30160[17] = inst_30116__$1;
                                                    return statearr_30160;
                                                  }();
                                                  if (cljs.core.truth_(inst_30118__$1)) {
                                                    var statearr_30161_30231 = state_30135__$1;
                                                    statearr_30161_30231[1] = 47;
                                                  } else {
                                                    var statearr_30162_30232 = state_30135__$1;
                                                    statearr_30162_30232[1] = 48;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_30136 === 43) {
                                                    var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_30135, 42, Error, null, 41);
                                                    var inst_30104 = cljs.core.PersistentVector.EMPTY_NODE;
                                                    var state_30135__$1 = function() {
                                                      var statearr_30163 = state_30135;
                                                      statearr_30163[13] = inst_30104;
                                                      return statearr_30163;
                                                    }();
                                                    if (cljs.core.truth_(error_handler)) {
                                                      var statearr_30164_30233 = state_30135__$1;
                                                      statearr_30164_30233[1] = 44;
                                                    } else {
                                                      var statearr_30165_30234 = state_30135__$1;
                                                      statearr_30165_30234[1] = 45;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_30136 === 29) {
                                                      var inst_30039 = state_30135[11];
                                                      var state_30135__$1 = state_30135;
                                                      var statearr_30166_30235 = state_30135__$1;
                                                      statearr_30166_30235[2] = inst_30039;
                                                      statearr_30166_30235[1] = 31;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_30136 === 44) {
                                                        var inst_30039 = state_30135[11];
                                                        var inst_30094 = state_30135[19];
                                                        var inst_30106 = error_handler.call(null, inst_30094, inst_30039);
                                                        var state_30135__$1 = state_30135;
                                                        var statearr_30167_30236 = state_30135__$1;
                                                        statearr_30167_30236[2] = inst_30106;
                                                        statearr_30167_30236[1] = 46;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_30136 === 6) {
                                                          var inst_30013 = state_30135[12];
                                                          var inst_30021 = inst_30013 == null;
                                                          var inst_30022 = cljs.core.not.call(null, inst_30021);
                                                          var state_30135__$1 = state_30135;
                                                          if (inst_30022) {
                                                            var statearr_30168_30237 = state_30135__$1;
                                                            statearr_30168_30237[1] = 8;
                                                          } else {
                                                            var statearr_30169_30238 = state_30135__$1;
                                                            statearr_30169_30238[1] = 9;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_30136 === 28) {
                                                            var inst_30039 = state_30135[11];
                                                            var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_30135, 27, Error, null, 26);
                                                            var inst_30063 = taoensso.sente.server_event_msg_QMARK_.call(null, inst_30039);
                                                            var state_30135__$1 = state_30135;
                                                            if (cljs.core.truth_(inst_30063)) {
                                                              var statearr_30170_30239 = state_30135__$1;
                                                              statearr_30170_30239[1] = 29;
                                                            } else {
                                                              var statearr_30171_30240 = state_30135__$1;
                                                              statearr_30171_30240[1] = 30;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_30136 === 25) {
                                                              var inst_30048 = state_30135[20];
                                                              var inst_30087 = state_30135[2];
                                                              var inst_30088 = event_msg_handler.call(null, inst_30087);
                                                              var inst_30089 = [inst_30088, null];
                                                              var inst_30090 = new cljs.core.PersistentVector(null, 2, 5, inst_30048, inst_30089, null);
                                                              var state_30135__$1 = state_30135;
                                                              var statearr_30172_30241 = state_30135__$1;
                                                              statearr_30172_30241[2] = inst_30090;
                                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135__$1);
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_30136 === 34) {
                                                                var inst_30039 = state_30135[11];
                                                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_30135, 33, Error, null, 32);
                                                                var inst_30078 = taoensso.sente.client_event_msg_QMARK_.call(null, inst_30039);
                                                                var state_30135__$1 = state_30135;
                                                                if (cljs.core.truth_(inst_30078)) {
                                                                  var statearr_30173_30242 = state_30135__$1;
                                                                  statearr_30173_30242[1] = 35;
                                                                } else {
                                                                  var statearr_30174_30243 = state_30135__$1;
                                                                  statearr_30174_30243[1] = 36;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_30136 === 17) {
                                                                  var inst_30092 = state_30135[21];
                                                                  var inst_30094 = state_30135[19];
                                                                  var inst_30092__$1 = state_30135[2];
                                                                  var inst_30093 = cljs.core.nth.call(null, inst_30092__$1, 0, null);
                                                                  var inst_30094__$1 = cljs.core.nth.call(null, inst_30092__$1, 1, null);
                                                                  var state_30135__$1 = function() {
                                                                    var statearr_30175 = state_30135;
                                                                    statearr_30175[22] = inst_30093;
                                                                    statearr_30175[21] = inst_30092__$1;
                                                                    statearr_30175[19] = inst_30094__$1;
                                                                    return statearr_30175;
                                                                  }();
                                                                  if (cljs.core.truth_(inst_30094__$1)) {
                                                                    var statearr_30176_30244 = state_30135__$1;
                                                                    statearr_30176_30244[1] = 38;
                                                                  } else {
                                                                    var statearr_30177_30245 = state_30135__$1;
                                                                    statearr_30177_30245[1] = 39;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_30136 === 3) {
                                                                    var inst_30133 = state_30135[2];
                                                                    var state_30135__$1 = state_30135;
                                                                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_30135__$1, inst_30133);
                                                                  } else {
                                                                    if (state_val_30136 === 12) {
                                                                      var state_30135__$1 = state_30135;
                                                                      var statearr_30178_30246 = state_30135__$1;
                                                                      statearr_30178_30246[2] = false;
                                                                      statearr_30178_30246[1] = 13;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_30136 === 2) {
                                                                        var inst_30008 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                        var inst_30009 = [ch_recv, ch_ctrl];
                                                                        var inst_30010 = new cljs.core.PersistentVector(null, 2, 5, inst_30008, inst_30009, null);
                                                                        var state_30135__$1 = state_30135;
                                                                        return cljs.core.async.ioc_alts_BANG_.call(null, state_30135__$1, 4, inst_30010);
                                                                      } else {
                                                                        if (state_val_30136 === 23) {
                                                                          var state_30135__$1 = state_30135;
                                                                          var statearr_30179_30247 = state_30135__$1;
                                                                          statearr_30179_30247[2] = null;
                                                                          statearr_30179_30247[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_30136 === 47) {
                                                                            var inst_30015 = state_30135[7];
                                                                            var inst_30117 = state_30135[18];
                                                                            var inst_30014 = state_30135[8];
                                                                            var inst_30012 = state_30135[9];
                                                                            var inst_30040 = state_30135[10];
                                                                            var inst_30092 = state_30135[21];
                                                                            var inst_30039 = state_30135[11];
                                                                            var inst_30094 = state_30135[19];
                                                                            var inst_30118 = state_30135[16];
                                                                            var inst_30013 = state_30135[12];
                                                                            var inst_30116 = state_30135[17];
                                                                            var inst_30120 = function() {
                                                                              var p = inst_30014;
                                                                              var _QMARK_error = inst_30094;
                                                                              var vec__30096 = inst_30116;
                                                                              var v = inst_30013;
                                                                              var _ = inst_30117;
                                                                              var vec__30007 = inst_30012;
                                                                              var e2 = inst_30118;
                                                                              var vec__30019 = inst_30092;
                                                                              var _QMARK_error2 = inst_30118;
                                                                              var event_msg = inst_30039;
                                                                              var e = inst_30094;
                                                                              var temp__4657__auto__ = inst_30118;
                                                                              var event = inst_30040;
                                                                              var map__30018 = inst_30039;
                                                                              var stop_QMARK_ = inst_30015;
                                                                              return function(p, _QMARK_error, vec__30096, v, _, vec__30007, e2, vec__30019, _QMARK_error2, event_msg, e, temp__4657__auto__, event, map__30018, stop_QMARK_, inst_30015, inst_30117, inst_30014, inst_30012, inst_30040, inst_30092, inst_30039, inst_30094, inst_30118, inst_30013, inst_30116, state_val_30136, c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl) {
                                                                                return function() {
                                                                                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2, "Chsk router `error-handler` error: %s", event], null);
                                                                                };
                                                                              }(p, _QMARK_error, vec__30096, v, _, vec__30007, e2, vec__30019, _QMARK_error2, event_msg, e, temp__4657__auto__, event, map__30018, stop_QMARK_, inst_30015, inst_30117, inst_30014, inst_30012, inst_30040, inst_30092, inst_30039, inst_30094, inst_30118, inst_30013, inst_30116, state_val_30136, c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl);
                                                                            }();
                                                                            var inst_30121 = new cljs.core.Delay(inst_30120, null);
                                                                            var inst_30122 = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 1189, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), inst_30121, null);
                                                                            var state_30135__$1 = state_30135;
                                                                            var statearr_30180_30248 = state_30135__$1;
                                                                            statearr_30180_30248[2] = inst_30122;
                                                                            statearr_30180_30248[1] = 49;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_30136 === 35) {
                                                                              var inst_30039 = state_30135[11];
                                                                              var state_30135__$1 = state_30135;
                                                                              var statearr_30181_30249 = state_30135__$1;
                                                                              statearr_30181_30249[2] = inst_30039;
                                                                              statearr_30181_30249[1] = 37;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_30136 === 19) {
                                                                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_30135, 18, Error, null, 17);
                                                                                var inst_30048 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                                var state_30135__$1 = function() {
                                                                                  var statearr_30182 = state_30135;
                                                                                  statearr_30182[20] = inst_30048;
                                                                                  return statearr_30182;
                                                                                }();
                                                                                if (cljs.core.truth_(trace_evs_QMARK_)) {
                                                                                  var statearr_30183_30250 = state_30135__$1;
                                                                                  statearr_30183_30250[1] = 20;
                                                                                } else {
                                                                                  var statearr_30184_30251 = state_30135__$1;
                                                                                  statearr_30184_30251[1] = 21;
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_30136 === 11) {
                                                                                  var state_30135__$1 = state_30135;
                                                                                  var statearr_30185_30252 = state_30135__$1;
                                                                                  statearr_30185_30252[2] = true;
                                                                                  statearr_30185_30252[1] = 13;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_30136 === 9) {
                                                                                    var state_30135__$1 = state_30135;
                                                                                    var statearr_30186_30253 = state_30135__$1;
                                                                                    statearr_30186_30253[2] = false;
                                                                                    statearr_30186_30253[1] = 10;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_30136 === 5) {
                                                                                      var state_30135__$1 = state_30135;
                                                                                      var statearr_30187_30254 = state_30135__$1;
                                                                                      statearr_30187_30254[2] = null;
                                                                                      statearr_30187_30254[1] = 7;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_30136 === 14) {
                                                                                        var inst_30013 = state_30135[12];
                                                                                        var inst_30036 = cljs.core.apply.call(null, cljs.core.hash_map, inst_30013);
                                                                                        var state_30135__$1 = state_30135;
                                                                                        var statearr_30188_30255 = state_30135__$1;
                                                                                        statearr_30188_30255[2] = inst_30036;
                                                                                        statearr_30188_30255[1] = 16;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_30136 === 45) {
                                                                                          var inst_30015 = state_30135[7];
                                                                                          var inst_30093 = state_30135[22];
                                                                                          var inst_30014 = state_30135[8];
                                                                                          var inst_30012 = state_30135[9];
                                                                                          var inst_30040 = state_30135[10];
                                                                                          var inst_30092 = state_30135[21];
                                                                                          var inst_30039 = state_30135[11];
                                                                                          var inst_30094 = state_30135[19];
                                                                                          var inst_30013 = state_30135[12];
                                                                                          var inst_30108 = function() {
                                                                                            var p = inst_30014;
                                                                                            var _QMARK_error = inst_30094;
                                                                                            var v = inst_30013;
                                                                                            var temp__4655__auto__ = error_handler;
                                                                                            var _ = inst_30093;
                                                                                            var vec__30007 = inst_30012;
                                                                                            var vec__30019 = inst_30092;
                                                                                            var event_msg = inst_30039;
                                                                                            var e = inst_30094;
                                                                                            var temp__4657__auto__ = inst_30094;
                                                                                            var event = inst_30040;
                                                                                            var map__30018 = inst_30039;
                                                                                            var stop_QMARK_ = inst_30015;
                                                                                            return function(p, _QMARK_error, v, temp__4655__auto__, _, vec__30007, vec__30019, event_msg, e, temp__4657__auto__, event, map__30018, stop_QMARK_, inst_30015, inst_30093, inst_30014, inst_30012, inst_30040, inst_30092, inst_30039, inst_30094, inst_30013, state_val_30136, c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl) {
                                                                                              return function() {
                                                                                                return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, "Chsk router `event-msg-handler` error: %s", event], null);
                                                                                              };
                                                                                            }(p, _QMARK_error, v, temp__4655__auto__, _, vec__30007, vec__30019, event_msg, e, temp__4657__auto__, event, map__30018, stop_QMARK_, inst_30015, inst_30093, inst_30014, inst_30012, inst_30040, inst_30092, inst_30039, inst_30094, inst_30013, state_val_30136, c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl);
                                                                                          }();
                                                                                          var inst_30109 = new cljs.core.Delay(inst_30108, null);
                                                                                          var inst_30110 = taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "error", "error", -978969032), "taoensso.sente", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 1187, new cljs.core.Keyword(null, "f", "f", -1597136552), new cljs.core.Keyword(null, "auto", "auto", -566279492), inst_30109, null);
                                                                                          var state_30135__$1 = state_30135;
                                                                                          var statearr_30189_30256 = state_30135__$1;
                                                                                          statearr_30189_30256[2] = inst_30110;
                                                                                          statearr_30189_30256[1] = 46;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_30136 === 26) {
                                                                                            var inst_30070 = state_30135[2];
                                                                                            var state_30135__$1 = state_30135;
                                                                                            var statearr_30190_30257 = state_30135__$1;
                                                                                            statearr_30190_30257[2] = inst_30070;
                                                                                            statearr_30190_30257[1] = 25;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_30136 === 16) {
                                                                                              var inst_30039 = state_30135[11];
                                                                                              var inst_30039__$1 = state_30135[2];
                                                                                              var inst_30040 = cljs.core.get.call(null, inst_30039__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
                                                                                              var state_30135__$1 = function() {
                                                                                                var statearr_30191 = state_30135;
                                                                                                statearr_30191[10] = inst_30040;
                                                                                                statearr_30191[11] = inst_30039__$1;
                                                                                                return statearr_30191;
                                                                                              }();
                                                                                              var statearr_30192_30258 = state_30135__$1;
                                                                                              statearr_30192_30258[2] = null;
                                                                                              statearr_30192_30258[1] = 19;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_30136 === 38) {
                                                                                                var state_30135__$1 = state_30135;
                                                                                                var statearr_30193_30259 = state_30135__$1;
                                                                                                statearr_30193_30259[2] = null;
                                                                                                statearr_30193_30259[1] = 43;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_30136 === 30) {
                                                                                                  var inst_30066 = taoensso.truss.impl._invar_violation_BANG_.call(null);
                                                                                                  var state_30135__$1 = state_30135;
                                                                                                  var statearr_30194_30260 = state_30135__$1;
                                                                                                  statearr_30194_30260[2] = inst_30066;
                                                                                                  statearr_30194_30260[1] = 31;
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                } else {
                                                                                                  if (state_val_30136 === 10) {
                                                                                                    var inst_30034 = state_30135[2];
                                                                                                    var state_30135__$1 = state_30135;
                                                                                                    if (cljs.core.truth_(inst_30034)) {
                                                                                                      var statearr_30195_30261 = state_30135__$1;
                                                                                                      statearr_30195_30261[1] = 14;
                                                                                                    } else {
                                                                                                      var statearr_30196_30262 = state_30135__$1;
                                                                                                      statearr_30196_30262[1] = 15;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_30136 === 18) {
                                                                                                      var inst_30041 = state_30135[2];
                                                                                                      var inst_30042 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                                                      var inst_30043 = [null, inst_30041];
                                                                                                      var inst_30044 = new cljs.core.PersistentVector(null, 2, 5, inst_30042, inst_30043, null);
                                                                                                      var state_30135__$1 = state_30135;
                                                                                                      var statearr_30197_30263 = state_30135__$1;
                                                                                                      statearr_30197_30263[2] = inst_30044;
                                                                                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135__$1);
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      if (state_val_30136 === 42) {
                                                                                                        var inst_30097 = state_30135[2];
                                                                                                        var inst_30098 = cljs.core.PersistentVector.EMPTY_NODE;
                                                                                                        var inst_30099 = [null, inst_30097];
                                                                                                        var inst_30100 = new cljs.core.PersistentVector(null, 2, 5, inst_30098, inst_30099, null);
                                                                                                        var state_30135__$1 = state_30135;
                                                                                                        var statearr_30198_30264 = state_30135__$1;
                                                                                                        statearr_30198_30264[2] = inst_30100;
                                                                                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135__$1);
                                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                      } else {
                                                                                                        if (state_val_30136 === 37) {
                                                                                                          var inst_30083 = state_30135[2];
                                                                                                          var state_30135__$1 = state_30135;
                                                                                                          var statearr_30199_30265 = state_30135__$1;
                                                                                                          statearr_30199_30265[2] = inst_30083;
                                                                                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135__$1);
                                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                        } else {
                                                                                                          if (state_val_30136 === 8) {
                                                                                                            var inst_30013 = state_30135[12];
                                                                                                            var inst_30024 = inst_30013.cljs$lang$protocol_mask$partition0$;
                                                                                                            var inst_30025 = inst_30024 & 64;
                                                                                                            var inst_30026 = inst_30013.cljs$core$ISeq$;
                                                                                                            var inst_30027 = inst_30025 || inst_30026;
                                                                                                            var state_30135__$1 = state_30135;
                                                                                                            if (cljs.core.truth_(inst_30027)) {
                                                                                                              var statearr_30200_30266 = state_30135__$1;
                                                                                                              statearr_30200_30266[1] = 11;
                                                                                                            } else {
                                                                                                              var statearr_30201_30267 = state_30135__$1;
                                                                                                              statearr_30201_30267[1] = 12;
                                                                                                            }
                                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                          } else {
                                                                                                            if (state_val_30136 === 49) {
                                                                                                              var inst_30125 = state_30135[2];
                                                                                                              var state_30135__$1 = state_30135;
                                                                                                              var statearr_30202_30268 = state_30135__$1;
                                                                                                              statearr_30202_30268[2] = inst_30125;
                                                                                                              statearr_30202_30268[1] = 40;
                                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                            } else {
                                                                                                              return null;
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl);
        return function(switch__26028__auto__, c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl) {
          return function() {
            var taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto__ = null;
            var taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto____0 = function() {
              var statearr_30206 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_30206[0] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto__;
              statearr_30206[1] = 1;
              return statearr_30206;
            };
            var taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto____1 = function(state_30135) {
              while (true) {
                var ret_value__26030__auto__ = function() {
                  try {
                    while (true) {
                      var result__26031__auto__ = switch__26028__auto__.call(null, state_30135);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26031__auto__;
                      }
                      break;
                    }
                  } catch (e30207) {
                    if (e30207 instanceof Object) {
                      var ex__26032__auto__ = e30207;
                      var statearr_30208_30269 = state_30135;
                      statearr_30208_30269[5] = ex__26032__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_30135);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e30207;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26030__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__30270 = state_30135;
                  state_30135 = G__30270;
                  continue;
                } else {
                  return ret_value__26030__auto__;
                }
                break;
              }
            };
            taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto__ = function(state_30135) {
              switch(arguments.length) {
                case 0:
                  return taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto____0.call(this);
                case 1:
                  return taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto____1.call(this, state_30135);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto____0;
            taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto____1;
            return taoensso$sente$_start_chsk_router_BANG__$_state_machine__26029__auto__;
          }();
        }(switch__26028__auto__, c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl);
      }();
      var state__26142__auto__ = function() {
        var statearr_30209 = f__26141__auto__.call(null);
        statearr_30209[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26140__auto___30210;
        return statearr_30209;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26142__auto__);
    };
  }(c__26140__auto___30210, map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl));
  return function(map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl) {
    return function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_() {
      return cljs.core.async.close_BANG_.call(null, ch_ctrl);
    };
  }(map__30004, map__30004__$1, trace_evs_QMARK_, error_handler, ch_ctrl);
};
taoensso.sente.start_server_chsk_router_BANG_ = function taoensso$sente$start_server_chsk_router_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___30278 = arguments.length;
  var i__5744__auto___30279 = 0;
  while (true) {
    if (i__5744__auto___30279 < len__5743__auto___30278) {
      args__5750__auto__.push(arguments[i__5744__auto___30279]);
      var G__30280 = i__5744__auto___30279 + 1;
      i__5744__auto___30279 = G__30280;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ch_recv, event_msg_handler, p__30274) {
  var vec__30275 = p__30274;
  var map__30276 = cljs.core.nth.call(null, vec__30275, 0, null);
  var map__30276__$1 = (!(map__30276 == null) ? map__30276.cljs$lang$protocol_mask$partition0$ & 64 || map__30276.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30276) : map__30276;
  var opts = map__30276__$1;
  var trace_evs_QMARK_ = cljs.core.get.call(null, map__30276__$1, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
  var error_handler = cljs.core.get.call(null, map__30276__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  return taoensso.sente._start_chsk_router_BANG_.call(null, new cljs.core.Keyword(null, "server", "server", 1499190120), ch_recv, event_msg_handler, opts);
};
taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = 2;
taoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = function(seq30271) {
  var G__30272 = cljs.core.first.call(null, seq30271);
  var seq30271__$1 = cljs.core.next.call(null, seq30271);
  var G__30273 = cljs.core.first.call(null, seq30271__$1);
  var seq30271__$2 = cljs.core.next.call(null, seq30271__$1);
  return taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__30272, G__30273, seq30271__$2);
};
taoensso.sente.start_client_chsk_router_BANG_ = function taoensso$sente$start_client_chsk_router_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___30288 = arguments.length;
  var i__5744__auto___30289 = 0;
  while (true) {
    if (i__5744__auto___30289 < len__5743__auto___30288) {
      args__5750__auto__.push(arguments[i__5744__auto___30289]);
      var G__30290 = i__5744__auto___30289 + 1;
      i__5744__auto___30289 = G__30290;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 2 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(2), 0) : null;
  return taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5751__auto__);
};
taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ch_recv, event_msg_handler, p__30284) {
  var vec__30285 = p__30284;
  var map__30286 = cljs.core.nth.call(null, vec__30285, 0, null);
  var map__30286__$1 = (!(map__30286 == null) ? map__30286.cljs$lang$protocol_mask$partition0$ & 64 || map__30286.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30286) : map__30286;
  var opts = map__30286__$1;
  var trace_evs_QMARK_ = cljs.core.get.call(null, map__30286__$1, new cljs.core.Keyword(null, "trace-evs?", "trace-evs?", 1502453512));
  var error_handler = cljs.core.get.call(null, map__30286__$1, new cljs.core.Keyword(null, "error-handler", "error-handler", -484945776));
  return taoensso.sente._start_chsk_router_BANG_.call(null, cljs.core.not.call(null, new cljs.core.Keyword(null, "server", "server", 1499190120)), ch_recv, event_msg_handler, opts);
};
taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = 2;
taoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = function(seq30281) {
  var G__30282 = cljs.core.first.call(null, seq30281);
  var seq30281__$1 = cljs.core.next.call(null, seq30281);
  var G__30283 = cljs.core.first.call(null, seq30281__$1);
  var seq30281__$2 = cljs.core.next.call(null, seq30281__$1);
  return taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__30282, G__30283, seq30281__$2);
};
taoensso.sente.make_channel_socket_BANG_ = function taoensso$sente$make_channel_socket_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___30292 = arguments.length;
  var i__5744__auto___30293 = 0;
  while (true) {
    if (i__5744__auto___30293 < len__5743__auto___30292) {
      args__5750__auto__.push(arguments[i__5744__auto___30293]);
      var G__30294 = i__5744__auto___30293 + 1;
      i__5744__auto___30293 = G__30294;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.sente.make_channel_socket_BANG_.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.sente.make_channel_socket_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, taoensso.sente.make_channel_socket_client_BANG_, args);
};
taoensso.sente.make_channel_socket_BANG_.cljs$lang$maxFixedArity = 0;
taoensso.sente.make_channel_socket_BANG_.cljs$lang$applyTo = function(seq30291) {
  return taoensso.sente.make_channel_socket_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq30291));
};
taoensso.sente.start_chsk_router_BANG_ = function taoensso$sente$start_chsk_router_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___30296 = arguments.length;
  var i__5744__auto___30297 = 0;
  while (true) {
    if (i__5744__auto___30297 < len__5743__auto___30296) {
      args__5750__auto__.push(arguments[i__5744__auto___30297]);
      var G__30298 = i__5744__auto___30297 + 1;
      i__5744__auto___30297 = G__30298;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.sente.start_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.sente.start_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, taoensso.sente.start_client_chsk_router_BANG_, args);
};
taoensso.sente.start_chsk_router_BANG_.cljs$lang$maxFixedArity = 0;
taoensso.sente.start_chsk_router_BANG_.cljs$lang$applyTo = function(seq30295) {
  return taoensso.sente.start_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq30295));
};
taoensso.sente.start_chsk_router_loop_BANG_ = function taoensso$sente$start_chsk_router_loop_BANG_(event_handler, ch_recv) {
  return taoensso.sente.start_client_chsk_router_BANG_.call(null, ch_recv, function(ev_msg) {
    return event_handler.call(null, (new cljs.core.Keyword(null, "event", "event", 301435442)).cljs$core$IFn$_invoke$arity$1(ev_msg), (new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861)).cljs$core$IFn$_invoke$arity$1(ev_msg));
  });
};
taoensso.sente.set_logging_level_BANG_ = function taoensso$sente$set_logging_level_BANG_(level) {
  return taoensso.timbre.set_level_BANG_.call(null, level);
};
taoensso.sente.ajax_call = taoensso.encore.ajax_lite;
taoensso.sente.default_chsk_url_fn = function taoensso$sente$default_chsk_url_fn(path, p__30299, websocket_QMARK_) {
  var map__30302 = p__30299;
  var map__30302__$1 = (!(map__30302 == null) ? map__30302.cljs$lang$protocol_mask$partition0$ & 64 || map__30302.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30302) : map__30302;
  var location = map__30302__$1;
  var adjusted_protocol = cljs.core.get.call(null, map__30302__$1, new cljs.core.Keyword(null, "adjusted-protocol", "adjusted-protocol", 37431492));
  var host = cljs.core.get.call(null, map__30302__$1, new cljs.core.Keyword(null, "host", "host", -1558485167));
  var pathname = cljs.core.get.call(null, map__30302__$1, new cljs.core.Keyword(null, "pathname", "pathname", -1420497528));
  return [cljs.core.str(adjusted_protocol), cljs.core.str("//"), cljs.core.str(host), cljs.core.str(function() {
    var or__4685__auto__ = path;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return pathname;
    }
  }())].join("");
};
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\x3d";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "\x3d", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("goog.math.Long");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Long.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Long.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.getTwoPwr24DBL_ = 1 << 24;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  var idZero = goog.math.Long.ValueCacheId_.ZERO;
  if (!goog.math.Long.valueCache_[idZero]) {
    goog.math.Long.valueCache_[idZero] = goog.math.Long.fromInt(0);
  }
  return goog.math.Long.valueCache_[idZero];
};
goog.math.Long.getOne = function() {
  var idOne = goog.math.Long.ValueCacheId_.ONE;
  if (!goog.math.Long.valueCache_[idOne]) {
    goog.math.Long.valueCache_[idOne] = goog.math.Long.fromInt(1);
  }
  return goog.math.Long.valueCache_[idOne];
};
goog.math.Long.getNegOne = function() {
  var idNegOne = goog.math.Long.ValueCacheId_.NEG_ONE;
  if (!goog.math.Long.valueCache_[idNegOne]) {
    goog.math.Long.valueCache_[idNegOne] = goog.math.Long.fromInt(-1);
  }
  return goog.math.Long.valueCache_[idNegOne];
};
goog.math.Long.getMaxValue = function() {
  var idMaxValue = goog.math.Long.ValueCacheId_.MAX_VALUE;
  if (!goog.math.Long.valueCache_[idMaxValue]) {
    goog.math.Long.valueCache_[idMaxValue] = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  }
  return goog.math.Long.valueCache_[idMaxValue];
};
goog.math.Long.getMinValue = function() {
  var idMinValue = goog.math.Long.ValueCacheId_.MIN_VALUE;
  if (!goog.math.Long.valueCache_[idMinValue]) {
    goog.math.Long.valueCache_[idMinValue] = goog.math.Long.fromBits(0, 2147483648 | 0);
  }
  return goog.math.Long.valueCache_[idMinValue];
};
goog.math.Long.getTwoPwr24 = function() {
  var idTwoPwr24 = goog.math.Long.ValueCacheId_.TWO_PWR_24;
  if (!goog.math.Long.valueCache_[idTwoPwr24]) {
    goog.math.Long.valueCache_[idTwoPwr24] = goog.math.Long.fromInt(1 << 24);
  }
  return goog.math.Long.valueCache_[idTwoPwr24];
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, ZERO:3, ONE:4, NEG_ONE:5, TWO_PWR_24:6};
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  if (typeof Symbol != "undefined") {
    types.ITERATOR = Symbol.iterator;
  } else {
    types.ITERATOR = "@@iterator";
  }
  types.TaggedValue = function Transit$TaggedValue(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740991");
  types.MIN_INT = Long.fromString("-9007199254740991");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x, 10);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function Transit$Keyword(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this._name;
  };
  types.Keyword.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Keyword.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this._name == other._name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function Transit$Symbol(name) {
    this._name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype["namespace"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(0, idx);
    } else {
      return null;
    }
  };
  types.Symbol.prototype["name"] = function() {
    var idx = this._name.indexOf("/");
    if (idx != -1) {
      return this._name.substring(idx + 1, this._name.length);
    } else {
      return this._name;
    }
  };
  types.Symbol.prototype.toString = function() {
    return this._name;
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this._name == other._name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this._name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function Transit$UUID(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function() {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function Transit$ArrayMapIterator(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function() {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitArrayMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.TransitMapIterator = function Transit$MapIterator(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.TransitMapIterator.prototype[types.ITERATOR] = function() {
    return this;
  };
  types.mapEquals = function(me, you) {
    if (me instanceof types.TransitMap && types.isMap(you)) {
      if (me.size !== you.size) {
        return false;
      }
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (me instanceof types.TransitArrayMap && types.isMap(you)) {
        if (me.size !== you.size) {
          return false;
        }
        var entries = me._entries;
        for (var j = 0;j < entries.length;j += 2) {
          if (!eq.equals(entries[j + 1], you.get(entries[j]))) {
            return false;
          }
        }
        return true;
      } else {
        if (you != null && typeof you === "object") {
          var ks = util.objectKeys(you), kslen = ks.length;
          if (me.size === kslen) {
            for (var i = 0;i < kslen;i++) {
              var k = ks[i];
              if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
                return false;
              }
            }
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.print = function(x) {
    if (x == null) {
      return "null";
    }
    if (goog.isArray(x)) {
      return "[" + x.toString() + "]";
    } else {
      if (goog.isString(x)) {
        return '"' + x + '"';
      } else {
        return x.toString();
      }
    }
  };
  types.printMap = function(map) {
    var idx = 0, str = "TransitMap {";
    map.forEach(function(v, k) {
      str += types.print(k) + " \x3d\x3e " + types.print(v);
      if (idx < map.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.printSet = function(set) {
    var idx = 0, str = "TransitSet {";
    set.forEach(function(v) {
      str += types.print(v);
      if (idx < set.size - 1) {
        str += ", ";
      }
      idx++;
    });
    return str + "}";
  };
  types.TransitArrayMap = function Transit$ArrayMap(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitArrayMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      var ret = this.backingMap["delete"](k);
      this.size = this.backingMap.size;
      return ret;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          var ret = this._entries[i + 1];
          this._entries.splice(i, 2);
          this.size--;
          return ret;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitArrayMap.prototype["clone"] = types.TransitArrayMap.prototype.clone;
  types.TransitArrayMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function Transit$Map(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return types.printMap(this);
  };
  types.TransitMap.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        var ret = bucket[i + 1];
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        return ret;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.clone = function() {
    var clone = types.map();
    this.forEach(function(v, k) {
      clone.set(k, v);
    });
    return clone;
  };
  types.TransitMap.prototype["clone"] = types.TransitMap.prototype.clone;
  types.TransitMap.prototype[types.ITERATOR] = function() {
    return this.entries();
  };
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function Transit$Set(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return types.printSet(this);
  };
  types.TransitSet.prototype["inspect"] = function() {
    return this.toString();
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    var ret = this.map["delete"](value);
    this.size = this.map.size;
    return ret;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.clone = function() {
    var clone = types.set();
    this.forEach(function(k) {
      clone.add(k);
    });
    return clone;
  };
  types.TransitSet.prototype["clone"] = types.TransitSet.prototype.clone;
  types.TransitSet.prototype[types.ITERATOR] = function() {
    return this.values();
  };
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.TaggedValue && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function Transit$WriteCache() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function Transit$ReadCache() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function Transit$Tag(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function Transit$Decoder(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init(node);
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function Transit$JSONUnmarshaller(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function Transit$Reader(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function Transit$NilHandler() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function Transit$StringHandler() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function Transit$NumberHandler() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function Transit$IntegerHandler() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function Transit$BooleanHandler() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function Transit$ArrayHandler() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function Transit$MapHandler() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function Transit$VerboseDateHandler() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function Transit$DateHandler() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function Transit$UUIDHandler() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function Transit$KeywordHandler() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function Transit$SymbolHandler() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v._name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function Transit$TaggedHandler() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function Transit$TransitSetHandler() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function Transit$ArrayMapHandler() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function Transit$MapHandler() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function Transit$BufferHandler() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function Transit$Uint8ArrayHandler() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function Transit$Handlers() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function Transit$JSONMarshaller(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        if (k !== undefined) {
          self.handlers.set(k, v);
        } else {
          throw new Error("Cannot create handler for JavaScript undefined");
        }
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString();
    ret = ret.substr("function ".length);
    ret = ret.substr(0, ret.indexOf("("));
    isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    var arr = null, rep = null, tag = null, ks = null, i = 0;
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          ks = util.objectKeys(obj);
          ret = {};
          for (;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            arr = em.unpack(obj);
            ret = ["^ "];
            if (arr) {
              for (;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            arr = em.unpack(obj);
            rep = [];
            tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], false, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, false, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          ret = ["^ "];
          ks = util.objectKeys(obj);
          for (;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function Transit$Writer(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var util = com.cognitect.transit.util, reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.MapLike;
  transit.SetLike;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashArrayLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.objectToMap = function(obj) {
    var ret = transit.map();
    for (var p in obj) {
      if (obj.hasOwnProperty(p)) {
        ret.set(p, obj[p]);
      }
    }
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = util.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.objectToMap", transit.objectToMap);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", util.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, objectToMap:transit.objectToMap, decoder:decoder.decoder, 
    UUIDfromString:types.UUIDfromString, randomUUID:util.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = true;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare.call(null, this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv.call(null, other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.hash.call(null, this$__$1.toString());
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(uuid__$1.toString()), cljs.core.str('"')].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__28918_28922 = cljs.core.seq.call(null, cljs.core.js_keys.call(null, b));
  var chunk__28919_28923 = null;
  var count__28920_28924 = 0;
  var i__28921_28925 = 0;
  while (true) {
    if (i__28921_28925 < count__28920_28924) {
      var k_28926 = cljs.core._nth.call(null, chunk__28919_28923, i__28921_28925);
      var v_28927 = b[k_28926];
      a[k_28926] = v_28927;
      var G__28928 = seq__28918_28922;
      var G__28929 = chunk__28919_28923;
      var G__28930 = count__28920_28924;
      var G__28931 = i__28921_28925 + 1;
      seq__28918_28922 = G__28928;
      chunk__28919_28923 = G__28929;
      count__28920_28924 = G__28930;
      i__28921_28925 = G__28931;
      continue;
    } else {
      var temp__4657__auto___28932 = cljs.core.seq.call(null, seq__28918_28922);
      if (temp__4657__auto___28932) {
        var seq__28918_28933__$1 = temp__4657__auto___28932;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28918_28933__$1)) {
          var c__5488__auto___28934 = cljs.core.chunk_first.call(null, seq__28918_28933__$1);
          var G__28935 = cljs.core.chunk_rest.call(null, seq__28918_28933__$1);
          var G__28936 = c__5488__auto___28934;
          var G__28937 = cljs.core.count.call(null, c__5488__auto___28934);
          var G__28938 = 0;
          seq__28918_28922 = G__28935;
          chunk__28919_28923 = G__28936;
          count__28920_28924 = G__28937;
          i__28921_28925 = G__28938;
          continue;
        } else {
          var k_28939 = cljs.core.first.call(null, seq__28918_28933__$1);
          var v_28940 = b[k_28939];
          a[k_28939] = v_28940;
          var G__28941 = cljs.core.next.call(null, seq__28918_28933__$1);
          var G__28942 = null;
          var G__28943 = 0;
          var G__28944 = 0;
          seq__28918_28922 = G__28941;
          chunk__28919_28923 = G__28942;
          count__28920_28924 = G__28943;
          i__28921_28925 = G__28944;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.call(null, m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.call(null, v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_.call(null, v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader(var_args) {
  var args28945 = [];
  var len__5743__auto___28948 = arguments.length;
  var i__5744__auto___28949 = 0;
  while (true) {
    if (i__5744__auto___28949 < len__5743__auto___28948) {
      args28945.push(arguments[i__5744__auto___28949]);
      var G__28950 = i__5744__auto___28949 + 1;
      i__5744__auto___28949 = G__28950;
      continue;
    } else {
    }
    break;
  }
  var G__28947 = args28945.length;
  switch(G__28947) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28945.length)].join(""));;
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.call(null, type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  return com.cognitect.transit.reader.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"handlers":cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, ["$", function(v) {
    return cljs.core.symbol.call(null, v);
  }, ":", function(v) {
    return cljs.core.keyword.call(null, v);
  }, "set", function(v) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, v);
  }, "list", function(v) {
    return cljs.core.into.call(null, cljs.core.List.EMPTY, v.reverse());
  }, "cmap", function(v) {
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < v.length) {
        var G__28952 = i + 2;
        var G__28953 = cljs.core.assoc_BANG_.call(null, ret, v[i], v[i + 1]);
        i = G__28952;
        ret = G__28953;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, ret);
      }
      break;
    }
  }], null), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__28954_28958 = cljs.core.seq.call(null, v);
  var chunk__28955_28959 = null;
  var count__28956_28960 = 0;
  var i__28957_28961 = 0;
  while (true) {
    if (i__28957_28961 < count__28956_28960) {
      var x_28962 = cljs.core._nth.call(null, chunk__28955_28959, i__28957_28961);
      ret.push(x_28962);
      var G__28963 = seq__28954_28958;
      var G__28964 = chunk__28955_28959;
      var G__28965 = count__28956_28960;
      var G__28966 = i__28957_28961 + 1;
      seq__28954_28958 = G__28963;
      chunk__28955_28959 = G__28964;
      count__28956_28960 = G__28965;
      i__28957_28961 = G__28966;
      continue;
    } else {
      var temp__4657__auto___28967 = cljs.core.seq.call(null, seq__28954_28958);
      if (temp__4657__auto___28967) {
        var seq__28954_28968__$1 = temp__4657__auto___28967;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28954_28968__$1)) {
          var c__5488__auto___28969 = cljs.core.chunk_first.call(null, seq__28954_28968__$1);
          var G__28970 = cljs.core.chunk_rest.call(null, seq__28954_28968__$1);
          var G__28971 = c__5488__auto___28969;
          var G__28972 = cljs.core.count.call(null, c__5488__auto___28969);
          var G__28973 = 0;
          seq__28954_28958 = G__28970;
          chunk__28955_28959 = G__28971;
          count__28956_28960 = G__28972;
          i__28957_28961 = G__28973;
          continue;
        } else {
          var x_28974 = cljs.core.first.call(null, seq__28954_28968__$1);
          ret.push(x_28974);
          var G__28975 = cljs.core.next.call(null, seq__28954_28968__$1);
          var G__28976 = null;
          var G__28977 = 0;
          var G__28978 = 0;
          seq__28954_28958 = G__28975;
          chunk__28955_28959 = G__28976;
          count__28956_28960 = G__28977;
          i__28957_28961 = G__28978;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__28979_28983 = cljs.core.seq.call(null, v);
  var chunk__28980_28984 = null;
  var count__28981_28985 = 0;
  var i__28982_28986 = 0;
  while (true) {
    if (i__28982_28986 < count__28981_28985) {
      var x_28987 = cljs.core._nth.call(null, chunk__28980_28984, i__28982_28986);
      ret.push(x_28987);
      var G__28988 = seq__28979_28983;
      var G__28989 = chunk__28980_28984;
      var G__28990 = count__28981_28985;
      var G__28991 = i__28982_28986 + 1;
      seq__28979_28983 = G__28988;
      chunk__28980_28984 = G__28989;
      count__28981_28985 = G__28990;
      i__28982_28986 = G__28991;
      continue;
    } else {
      var temp__4657__auto___28992 = cljs.core.seq.call(null, seq__28979_28983);
      if (temp__4657__auto___28992) {
        var seq__28979_28993__$1 = temp__4657__auto___28992;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28979_28993__$1)) {
          var c__5488__auto___28994 = cljs.core.chunk_first.call(null, seq__28979_28993__$1);
          var G__28995 = cljs.core.chunk_rest.call(null, seq__28979_28993__$1);
          var G__28996 = c__5488__auto___28994;
          var G__28997 = cljs.core.count.call(null, c__5488__auto___28994);
          var G__28998 = 0;
          seq__28979_28983 = G__28995;
          chunk__28980_28984 = G__28996;
          count__28981_28985 = G__28997;
          i__28982_28986 = G__28998;
          continue;
        } else {
          var x_28999 = cljs.core.first.call(null, seq__28979_28993__$1);
          ret.push(x_28999);
          var G__29000 = cljs.core.next.call(null, seq__28979_28993__$1);
          var G__29001 = null;
          var G__29002 = 0;
          var G__29003 = 0;
          seq__28979_28983 = G__29000;
          chunk__28980_28984 = G__29001;
          count__28981_28985 = G__29002;
          i__28982_28986 = G__29003;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__29004_29008 = cljs.core.seq.call(null, v);
  var chunk__29005_29009 = null;
  var count__29006_29010 = 0;
  var i__29007_29011 = 0;
  while (true) {
    if (i__29007_29011 < count__29006_29010) {
      var x_29012 = cljs.core._nth.call(null, chunk__29005_29009, i__29007_29011);
      ret.push(x_29012);
      var G__29013 = seq__29004_29008;
      var G__29014 = chunk__29005_29009;
      var G__29015 = count__29006_29010;
      var G__29016 = i__29007_29011 + 1;
      seq__29004_29008 = G__29013;
      chunk__29005_29009 = G__29014;
      count__29006_29010 = G__29015;
      i__29007_29011 = G__29016;
      continue;
    } else {
      var temp__4657__auto___29017 = cljs.core.seq.call(null, seq__29004_29008);
      if (temp__4657__auto___29017) {
        var seq__29004_29018__$1 = temp__4657__auto___29017;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__29004_29018__$1)) {
          var c__5488__auto___29019 = cljs.core.chunk_first.call(null, seq__29004_29018__$1);
          var G__29020 = cljs.core.chunk_rest.call(null, seq__29004_29018__$1);
          var G__29021 = c__5488__auto___29019;
          var G__29022 = cljs.core.count.call(null, c__5488__auto___29019);
          var G__29023 = 0;
          seq__29004_29008 = G__29020;
          chunk__29005_29009 = G__29021;
          count__29006_29010 = G__29022;
          i__29007_29011 = G__29023;
          continue;
        } else {
          var x_29024 = cljs.core.first.call(null, seq__29004_29018__$1);
          ret.push(x_29024);
          var G__29025 = cljs.core.next.call(null, seq__29004_29018__$1);
          var G__29026 = null;
          var G__29027 = 0;
          var G__29028 = 0;
          seq__29004_29008 = G__29025;
          chunk__29005_29009 = G__29026;
          count__29006_29010 = G__29027;
          i__29007_29011 = G__29028;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function cognitect$transit$writer(var_args) {
  var args29029 = [];
  var len__5743__auto___29040 = arguments.length;
  var i__5744__auto___29041 = 0;
  while (true) {
    if (i__5744__auto___29041 < len__5743__auto___29040) {
      args29029.push(arguments[i__5744__auto___29041]);
      var G__29042 = i__5744__auto___29041 + 1;
      i__5744__auto___29041 = G__29042;
      continue;
    } else {
    }
    break;
  }
  var G__29031 = args29029.length;
  switch(G__29031) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29029.length)].join(""));;
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.call(null, type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var handlers = cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, 
  cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, list_handler, list_handler, set_handler, list_handler, 
  symbol_handler, uuid_handler, list_handler, list_handler]), (new cljs.core.Keyword(null, "handlers", "handlers", 79528781)).cljs$core$IFn$_invoke$arity$1(opts));
  return com.cognitect.transit.writer.call(null, cljs.core.name.call(null, type), cognitect.transit.opts_merge.call(null, {"objectBuilder":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv.call(null, function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(obj, k, v) {
          var G__29032 = obj;
          G__29032.push(kfn.call(null, k), vfn.call(null, v));
          return G__29032;
        };
      }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
    var x29033 = cljs.core.clone.call(null, handlers);
    x29033.forEach = function(x29033, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__29034 = cljs.core.seq.call(null, coll);
        var chunk__29035 = null;
        var count__29036 = 0;
        var i__29037 = 0;
        while (true) {
          if (i__29037 < count__29036) {
            var vec__29038 = cljs.core._nth.call(null, chunk__29035, i__29037);
            var k = cljs.core.nth.call(null, vec__29038, 0, null);
            var v = cljs.core.nth.call(null, vec__29038, 1, null);
            f.call(null, v, k);
            var G__29044 = seq__29034;
            var G__29045 = chunk__29035;
            var G__29046 = count__29036;
            var G__29047 = i__29037 + 1;
            seq__29034 = G__29044;
            chunk__29035 = G__29045;
            count__29036 = G__29046;
            i__29037 = G__29047;
            continue;
          } else {
            var temp__4657__auto__ = cljs.core.seq.call(null, seq__29034);
            if (temp__4657__auto__) {
              var seq__29034__$1 = temp__4657__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__29034__$1)) {
                var c__5488__auto__ = cljs.core.chunk_first.call(null, seq__29034__$1);
                var G__29048 = cljs.core.chunk_rest.call(null, seq__29034__$1);
                var G__29049 = c__5488__auto__;
                var G__29050 = cljs.core.count.call(null, c__5488__auto__);
                var G__29051 = 0;
                seq__29034 = G__29048;
                chunk__29035 = G__29049;
                count__29036 = G__29050;
                i__29037 = G__29051;
                continue;
              } else {
                var vec__29039 = cljs.core.first.call(null, seq__29034__$1);
                var k = cljs.core.nth.call(null, vec__29039, 0, null);
                var v = cljs.core.nth.call(null, vec__29039, 1, null);
                f.call(null, v, k);
                var G__29052 = cljs.core.next.call(null, seq__29034__$1);
                var G__29053 = null;
                var G__29054 = 0;
                var G__29055 = 0;
                seq__29034 = G__29052;
                chunk__29035 = G__29053;
                count__29036 = G__29054;
                i__29037 = G__29055;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x29033, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
    return x29033;
  }(), "unpack":function(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js.call(null, cljs.core.dissoc.call(null, opts, new cljs.core.Keyword(null, "handlers", "handlers", 79528781)))));
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler(var_args) {
  var args29056 = [];
  var len__5743__auto___29062 = arguments.length;
  var i__5744__auto___29063 = 0;
  while (true) {
    if (i__5744__auto___29063 < len__5743__auto___29062) {
      args29056.push(arguments[i__5744__auto___29063]);
      var G__29064 = i__5744__auto___29063 + 1;
      i__5744__auto___29063 = G__29064;
      continue;
    } else {
    }
    break;
  }
  var G__29058 = args29056.length;
  switch(G__29058) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29056.length)].join(""));;
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.call(null, tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect.transit.t_cognitect$transit29059 !== "undefined") {
  } else {
    cognitect.transit.t_cognitect$transit29059 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta29060) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta29060 = meta29060;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t_cognitect$transit29059.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_29061, meta29060__$1) {
      var self__ = this;
      var _29061__$1 = this;
      return new cognitect.transit.t_cognitect$transit29059(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta29060__$1);
    };
    cognitect.transit.t_cognitect$transit29059.prototype.cljs$core$IMeta$_meta$arity$1 = function(_29061) {
      var self__ = this;
      var _29061__$1 = this;
      return self__.meta29060;
    };
    cognitect.transit.t_cognitect$transit29059.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit29059.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.call(null, o);
    };
    cognitect.transit.t_cognitect$transit29059.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.str_rep_fn)) {
        return self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit29059.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (cljs.core.truth_(self__.verbose_handler_fn)) {
        return self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t_cognitect$transit29059.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null), new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null), new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null), new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null), new cljs.core.Symbol(null, "meta29060", "meta29060", 1566943573, null)], null);
    };
    cognitect.transit.t_cognitect$transit29059.cljs$lang$type = true;
    cognitect.transit.t_cognitect$transit29059.cljs$lang$ctorStr = "cognitect.transit/t_cognitect$transit29059";
    cognitect.transit.t_cognitect$transit29059.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
      return cljs.core._write.call(null, writer__5284__auto__, "cognitect.transit/t_cognitect$transit29059");
    };
    cognitect.transit.__GT_t_cognitect$transit29059 = function cognitect$transit$__GT_t_cognitect$transit29059(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta29060) {
      return new cognitect.transit.t_cognitect$transit29059(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta29060);
    };
  }
  return new cognitect.transit.t_cognitect$transit29059(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue.call(null, s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  var or__4685__auto__ = com.cognitect.transit.types.isUUID.call(null, x);
  if (cljs.core.truth_(or__4685__auto__)) {
    return or__4685__auto__;
  } else {
    return x instanceof cljs.core.UUID;
  }
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("taoensso.sente.packers.transit");
goog.require("cljs.core");
goog.require("taoensso.sente.interfaces");
goog.require("cognitect.transit");
goog.require("taoensso.encore");
goog.require("clojure.string");
goog.require("cljs.reader");
taoensso.sente.packers.transit.get_charset = function taoensso$sente$packers$transit$get_charset(transit_fmt) {
  if (cljs.core._EQ_.call(null, transit_fmt, new cljs.core.Keyword(null, "msgpack", "msgpack", -860367492))) {
    return "ISO-8859-1";
  } else {
    return "UTF-8";
  }
};
taoensso.sente.packers.transit.transit_writer_STAR_ = taoensso.encore.memoize_.call(null, function(fmt, opts) {
  return cognitect.transit.writer.call(null, fmt, opts);
});
taoensso.sente.packers.transit.transit_reader_STAR_ = taoensso.encore.memoize_.call(null, function(fmt, opts) {
  return cognitect.transit.reader.call(null, fmt, opts);
});
taoensso.sente.packers.transit.TransitPacker = function(transit_fmt, writer_opts, reader_opts) {
  this.transit_fmt = transit_fmt;
  this.writer_opts = writer_opts;
  this.reader_opts = reader_opts;
};
taoensso.sente.packers.transit.TransitPacker.prototype.taoensso$sente$interfaces$IPacker$ = true;
taoensso.sente.packers.transit.TransitPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return cognitect.transit.write.call(null, taoensso.sente.packers.transit.transit_writer_STAR_.call(null, self__.transit_fmt, self__.writer_opts), x);
};
taoensso.sente.packers.transit.TransitPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return cognitect.transit.read.call(null, taoensso.sente.packers.transit.transit_reader_STAR_.call(null, self__.transit_fmt, self__.reader_opts), s);
};
taoensso.sente.packers.transit.TransitPacker.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "transit-fmt", "transit-fmt", 913727703, null), new cljs.core.Symbol(null, "writer-opts", "writer-opts", 1122222818, null), new cljs.core.Symbol(null, "reader-opts", "reader-opts", -1524615329, null)], null);
};
taoensso.sente.packers.transit.TransitPacker.cljs$lang$type = true;
taoensso.sente.packers.transit.TransitPacker.cljs$lang$ctorStr = "taoensso.sente.packers.transit/TransitPacker";
taoensso.sente.packers.transit.TransitPacker.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "taoensso.sente.packers.transit/TransitPacker");
};
taoensso.sente.packers.transit.__GT_TransitPacker = function taoensso$sente$packers$transit$__GT_TransitPacker(transit_fmt, writer_opts, reader_opts) {
  return new taoensso.sente.packers.transit.TransitPacker(transit_fmt, writer_opts, reader_opts);
};
taoensso.sente.packers.transit.default_edn_packer = taoensso.sente.interfaces.edn_packer;
taoensso.sente.packers.transit.default_json_packer = taoensso.sente.packers.transit.__GT_TransitPacker.call(null, new cljs.core.Keyword(null, "json", "json", 1279968570), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentArrayMap.EMPTY);
taoensso.sente.packers.transit.max_flexi_format_QMARK_ = function taoensso$sente$packers$transit$max_flexi_format_QMARK_(fmt) {
  return cljs.core._EQ_.call(null, fmt, new cljs.core.Keyword(null, "json", "json", 1279968570));
};
taoensso.sente.packers.transit.max_flexi_format = function() {
  var ordered_formats = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.Keyword(null, "edn", "edn", 1317840885), new cljs.core.Keyword(null, "json", "json", 1279968570)], null);
  var scored_formats = cljs.core.zipmap.call(null, ordered_formats, cljs.core.next.call(null, cljs.core.range.call(null)));
  return function(ordered_formats, scored_formats) {
    return function(xs) {
      return cljs.core.apply.call(null, cljs.core.max_key, scored_formats, xs);
    };
  }(ordered_formats, scored_formats);
}();
taoensso.sente.packers.transit.auto_flexi_format = function taoensso$sente$packers$transit$auto_flexi_format(x) {
  if (typeof x === "string") {
    var c = cljs.core.count.call(null, x);
    if (c > 300) {
      return new cljs.core.Keyword(null, "json", "json", 1279968570);
    } else {
      return null;
    }
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, x)) {
      var c = cljs.core.count.call(null, x);
      if (c > 20) {
        return new cljs.core.Keyword(null, "json", "json", 1279968570);
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
taoensso.sente.packers.transit.FlexiPacker = function(default_fmt, edn_packer, json_packer) {
  this.default_fmt = default_fmt;
  this.edn_packer = edn_packer;
  this.json_packer = json_packer;
};
taoensso.sente.packers.transit.FlexiPacker.prototype.taoensso$sente$interfaces$IPacker$ = true;
taoensso.sente.packers.transit.FlexiPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  var _QMARK_meta_format = function() {
    var temp__4657__auto__ = cljs.core.meta.call(null, x);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var m = temp__4657__auto__;
      return taoensso.sente.packers.transit.max_flexi_format.call(null, cljs.core.filter.call(null, m, cljs.core.keys.call(null, m)));
    } else {
      return null;
    }
  }();
  var _QMARK_auto_format = cljs.core.truth_(_QMARK_meta_format) ? null : taoensso.sente.packers.transit.auto_flexi_format.call(null, x);
  var fmt = taoensso.sente.packers.transit.max_flexi_format.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_auto_format, _QMARK_meta_format, self__.default_fmt], null));
  var G__30306 = fmt instanceof cljs.core.Keyword ? fmt.fqn : null;
  switch(G__30306) {
    case "json":
      return [cljs.core.str("j"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, self__.json_packer, x))].join("");
      break;
    case "edn":
      return [cljs.core.str("e"), cljs.core.str(taoensso.sente.interfaces.pack.call(null, self__.edn_packer, x))].join("");
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(fmt)].join(""));;
  }
};
taoensso.sente.packers.transit.FlexiPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  var prefix = taoensso.encore.substr.call(null, s, 0, 1);
  var s_STAR_ = taoensso.encore.substr.call(null, s, 1);
  var G__30307 = prefix;
  switch(G__30307) {
    case "j":
      return taoensso.sente.interfaces.unpack.call(null, self__.json_packer, s_STAR_);
      break;
    case "e":
      return taoensso.sente.interfaces.unpack.call(null, self__.edn_packer, s_STAR_);
      break;
    default:
      throw cljs.core.ex_info.call(null, [cljs.core.str("Malformed FlexiPacker data: "), cljs.core.str(s)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "s", "s", 1705939918), s], null));;
  }
};
taoensso.sente.packers.transit.FlexiPacker.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "default-fmt", "default-fmt", 826835013, null), new cljs.core.Symbol(null, "edn-packer", "edn-packer", -1345572209, null), new cljs.core.Symbol(null, "json-packer", "json-packer", 1325264423, null)], null);
};
taoensso.sente.packers.transit.FlexiPacker.cljs$lang$type = true;
taoensso.sente.packers.transit.FlexiPacker.cljs$lang$ctorStr = "taoensso.sente.packers.transit/FlexiPacker";
taoensso.sente.packers.transit.FlexiPacker.cljs$lang$ctorPrWriter = function(this__5283__auto__, writer__5284__auto__, opt__5285__auto__) {
  return cljs.core._write.call(null, writer__5284__auto__, "taoensso.sente.packers.transit/FlexiPacker");
};
taoensso.sente.packers.transit.__GT_FlexiPacker = function taoensso$sente$packers$transit$__GT_FlexiPacker(default_fmt, edn_packer, json_packer) {
  return new taoensso.sente.packers.transit.FlexiPacker(default_fmt, edn_packer, json_packer);
};
taoensso.sente.packers.transit.get_flexi_packer = function taoensso$sente$packers$transit$get_flexi_packer(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___30313 = arguments.length;
  var i__5744__auto___30314 = 0;
  while (true) {
    if (i__5744__auto___30314 < len__5743__auto___30313) {
      args__5750__auto__.push(arguments[i__5744__auto___30314]);
      var G__30315 = i__5744__auto___30314 + 1;
      i__5744__auto___30314 = G__30315;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 0 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(0), 0) : null;
  return taoensso.sente.packers.transit.get_flexi_packer.cljs$core$IFn$_invoke$arity$variadic(argseq__5751__auto__);
};
taoensso.sente.packers.transit.get_flexi_packer.cljs$core$IFn$_invoke$arity$variadic = function(p__30311) {
  var vec__30312 = p__30311;
  var default_fmt = cljs.core.nth.call(null, vec__30312, 0, null);
  var edn_packer = cljs.core.nth.call(null, vec__30312, 1, null);
  var json_packer = cljs.core.nth.call(null, vec__30312, 2, null);
  var default_fmt__$1 = function() {
    var or__4685__auto__ = default_fmt;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return new cljs.core.Keyword(null, "edn", "edn", 1317840885);
    }
  }();
  var edn_packer__$1 = function() {
    var or__4685__auto__ = edn_packer;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return taoensso.sente.packers.transit.default_edn_packer;
    }
  }();
  var json_packer__$1 = function() {
    var or__4685__auto__ = json_packer;
    if (cljs.core.truth_(or__4685__auto__)) {
      return or__4685__auto__;
    } else {
      return taoensso.sente.packers.transit.default_json_packer;
    }
  }();
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "json-verbose", "json-verbose", -542533531), null, new cljs.core.Keyword(null, "edn", "edn", 1317840885), null, new cljs.core.Keyword(null, "json", "json", 1279968570), null], null), null)).call(null, default_fmt__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "json-verbose", "json-verbose", -542533531), null, new cljs.core.Keyword(null, "edn", "edn", 1317840885), null, new cljs.core.Keyword(null, "json", "json", 1279968570), null], null), null), new cljs.core.Symbol(null, "default-fmt", "default-fmt", 826835013, null))))].join(""));
  }
  return taoensso.sente.packers.transit.__GT_FlexiPacker.call(null, default_fmt__$1, edn_packer__$1, json_packer__$1);
};
taoensso.sente.packers.transit.get_flexi_packer.cljs$lang$maxFixedArity = 0;
taoensso.sente.packers.transit.get_flexi_packer.cljs$lang$applyTo = function(seq30310) {
  return taoensso.sente.packers.transit.get_flexi_packer.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq30310));
};
taoensso.sente.packers.transit.default_flexi_packer = taoensso.sente.packers.transit.get_flexi_packer.call(null, new cljs.core.Keyword(null, "edn", "edn", 1317840885));
goog.provide("alarm_server.client");
goog.require("cljs.core");
goog.require("taoensso.sente");
goog.require("taoensso.sente.packers.transit");
goog.require("taoensso.timbre");
goog.require("cljs.core.async");
goog.require("taoensso.encore");
goog.require("clojure.string");
alarm_server.client.output_el = document.getElementById("output");
alarm_server.client.__GT_output_BANG_ = function alarm_server$client$__GT_output_BANG_(var_args) {
  var args__5750__auto__ = [];
  var len__5743__auto___30320 = arguments.length;
  var i__5744__auto___30321 = 0;
  while (true) {
    if (i__5744__auto___30321 < len__5743__auto___30320) {
      args__5750__auto__.push(arguments[i__5744__auto___30321]);
      var G__30322 = i__5744__auto___30321 + 1;
      i__5744__auto___30321 = G__30322;
      continue;
    } else {
    }
    break;
  }
  var argseq__5751__auto__ = 1 < args__5750__auto__.length ? new cljs.core.IndexedSeq(args__5750__auto__.slice(1), 0) : null;
  return alarm_server.client.__GT_output_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5751__auto__);
};
alarm_server.client.__GT_output_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(fmt, args) {
  var msg = cljs.core.apply.call(null, taoensso.encore.format, fmt, args);
  taoensso.timbre._log_BANG_.call(null, taoensso.timbre._STAR_config_STAR_, new cljs.core.Keyword(null, "debug", "debug", -1608172596), "alarm-server.client", "C:\\Users\\Chris\\AppData\\Local\\Temp\\form-init1106270399264178494.clj", 22, new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.Keyword(null, "auto", "auto", -566279492), new cljs.core.Delay(function(msg) {
    return function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [msg], null);
    };
  }(msg), null), null);
  alarm_server.client.output_el["value"] = [cljs.core.str("\u2022 "), cljs.core.str(alarm_server.client.output_el.value), cljs.core.str("\n"), cljs.core.str(msg)].join("");
  return alarm_server.client.output_el["scrollTop"] = alarm_server.client.output_el.scrollHeight;
};
alarm_server.client.__GT_output_BANG_.cljs$lang$maxFixedArity = 1;
alarm_server.client.__GT_output_BANG_.cljs$lang$applyTo = function(seq30318) {
  var G__30319 = cljs.core.first.call(null, seq30318);
  var seq30318__$1 = cljs.core.next.call(null, seq30318);
  return alarm_server.client.__GT_output_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__30319, seq30318__$1);
};
alarm_server.client.__GT_output_BANG_.call(null, "ClojureScript appears to have loaded correctly.");
var rand_chsk_type_30325 = cljs.core.rand.call(null) >= .5 ? new cljs.core.Keyword(null, "ajax", "ajax", 814345549) : new cljs.core.Keyword(null, "auto", "auto", -566279492);
var __30326 = alarm_server.client.__GT_output_BANG_.call(null, "Randomly selected chsk type: %s", rand_chsk_type_30325);
var packer_30327 = new cljs.core.Keyword(null, "edn", "edn", 1317840885);
var map__30323_30328 = taoensso.sente.make_channel_socket_client_BANG_.call(null, "/chsk", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), rand_chsk_type_30325, new cljs.core.Keyword(null, "packer", "packer", 66077544), packer_30327], null));
var map__30323_30329__$1 = (!(map__30323_30328 == null) ? map__30323_30328.cljs$lang$protocol_mask$partition0$ & 64 || map__30323_30328.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30323_30328) : map__30323_30328;
var chsk_30330 = cljs.core.get.call(null, map__30323_30329__$1, new cljs.core.Keyword(null, "chsk", "chsk", -863703081));
var ch_recv_30331 = cljs.core.get.call(null, map__30323_30329__$1, new cljs.core.Keyword(null, "ch-recv", "ch-recv", -990916861));
var send_fn_30332 = cljs.core.get.call(null, map__30323_30329__$1, new cljs.core.Keyword(null, "send-fn", "send-fn", 351002041));
var state_30333 = cljs.core.get.call(null, map__30323_30329__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
alarm_server.client.chsk = chsk_30330;
alarm_server.client.ch_chsk = ch_recv_30331;
alarm_server.client.chsk_send_BANG_ = send_fn_30332;
alarm_server.client.chsk_state = state_30333;
if (typeof alarm_server.client._event_msg_handler !== "undefined") {
} else {
  alarm_server.client._event_msg_handler = function() {
    var method_table__5598__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5599__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5600__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5601__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5602__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "alarm-server.client", "-event-msg-handler"), new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5602__auto__, method_table__5598__auto__, prefer_table__5599__auto__, method_cache__5600__auto__, cached_hierarchy__5601__auto__);
  }();
}
alarm_server.client.event_msg_handler = function alarm_server$client$event_msg_handler(p__30334) {
  var map__30337 = p__30334;
  var map__30337__$1 = (!(map__30337 == null) ? map__30337.cljs$lang$protocol_mask$partition0$ & 64 || map__30337.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30337) : map__30337;
  var ev_msg = map__30337__$1;
  var id = cljs.core.get.call(null, map__30337__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
  var _QMARK_data = cljs.core.get.call(null, map__30337__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  var event = cljs.core.get.call(null, map__30337__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
  return alarm_server.client._event_msg_handler.call(null, ev_msg);
};
cljs.core._add_method.call(null, alarm_server.client._event_msg_handler, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__30339) {
  var map__30340 = p__30339;
  var map__30340__$1 = (!(map__30340 == null) ? map__30340.cljs$lang$protocol_mask$partition0$ & 64 || map__30340.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30340) : map__30340;
  var ev_msg = map__30340__$1;
  var event = cljs.core.get.call(null, map__30340__$1, new cljs.core.Keyword(null, "event", "event", 301435442));
  return alarm_server.client.__GT_output_BANG_.call(null, "Unhandled event: %s", event);
});
cljs.core._add_method.call(null, alarm_server.client._event_msg_handler, new cljs.core.Keyword("chsk", "state", "chsk/state", -1991397620), function(p__30342) {
  var map__30343 = p__30342;
  var map__30343__$1 = (!(map__30343 == null) ? map__30343.cljs$lang$protocol_mask$partition0$ & 64 || map__30343.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30343) : map__30343;
  var ev_msg = map__30343__$1;
  var _QMARK_data = cljs.core.get.call(null, map__30343__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  if (cljs.core._EQ_.call(null, _QMARK_data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "first-open?", "first-open?", 396686530), true], null))) {
    return alarm_server.client.__GT_output_BANG_.call(null, "Channel socket successfully established!");
  } else {
    return alarm_server.client.__GT_output_BANG_.call(null, "Channel socket state change: %s", _QMARK_data);
  }
});
cljs.core._add_method.call(null, alarm_server.client._event_msg_handler, new cljs.core.Keyword("chsk", "recv", "chsk/recv", 561097091), function(p__30345) {
  var map__30346 = p__30345;
  var map__30346__$1 = (!(map__30346 == null) ? map__30346.cljs$lang$protocol_mask$partition0$ & 64 || map__30346.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30346) : map__30346;
  var ev_msg = map__30346__$1;
  var _QMARK_data = cljs.core.get.call(null, map__30346__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  return alarm_server.client.__GT_output_BANG_.call(null, "Push event from server: %s", _QMARK_data);
});
cljs.core._add_method.call(null, alarm_server.client._event_msg_handler, new cljs.core.Keyword("chsk", "handshake", "chsk/handshake", 64910686), function(p__30348) {
  var map__30349 = p__30348;
  var map__30349__$1 = (!(map__30349 == null) ? map__30349.cljs$lang$protocol_mask$partition0$ & 64 || map__30349.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__30349) : map__30349;
  var ev_msg = map__30349__$1;
  var _QMARK_data = cljs.core.get.call(null, map__30349__$1, new cljs.core.Keyword(null, "?data", "?data", -9471433));
  var vec__30351 = _QMARK_data;
  var _QMARK_uid = cljs.core.nth.call(null, vec__30351, 0, null);
  var _QMARK_csrf_token = cljs.core.nth.call(null, vec__30351, 1, null);
  var _QMARK_handshake_data = cljs.core.nth.call(null, vec__30351, 2, null);
  return alarm_server.client.__GT_output_BANG_.call(null, "Handshake: %s", _QMARK_data);
});
if (typeof alarm_server.client.router_ !== "undefined") {
} else {
  alarm_server.client.router_ = cljs.core.atom.call(null, null);
}
alarm_server.client.stop_router_BANG_ = function alarm_server$client$stop_router_BANG_() {
  var temp__4657__auto__ = cljs.core.deref.call(null, alarm_server.client.router_);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var stop_f = temp__4657__auto__;
    return stop_f.call(null);
  } else {
    return null;
  }
};
alarm_server.client.start_router_BANG_ = function alarm_server$client$start_router_BANG_() {
  alarm_server.client.stop_router_BANG_.call(null);
  return cljs.core.reset_BANG_.call(null, alarm_server.client.router_, taoensso.sente.start_client_chsk_router_BANG_.call(null, alarm_server.client.ch_chsk, alarm_server.client.event_msg_handler));
};
var temp__4657__auto___30352 = document.getElementById("btn1");
if (cljs.core.truth_(temp__4657__auto___30352)) {
  var target_el_30353 = temp__4657__auto___30352;
  target_el_30353.addEventListener("click", function(target_el_30353, temp__4657__auto___30352) {
    return function(ev) {
      alarm_server.client.__GT_output_BANG_.call(null, "Button 1 was clicked (won't receive any reply from server)");
      return alarm_server.client.chsk_send_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("example", "button1", "example/button1", -349884645), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "had-a-callback?", "had-a-callback?", -512946762), "nope"], null)], null));
    };
  }(target_el_30353, temp__4657__auto___30352));
} else {
}
var temp__4657__auto___30354 = document.getElementById("btn2");
if (cljs.core.truth_(temp__4657__auto___30354)) {
  var target_el_30355 = temp__4657__auto___30354;
  target_el_30355.addEventListener("click", function(target_el_30355, temp__4657__auto___30354) {
    return function(ev) {
      alarm_server.client.__GT_output_BANG_.call(null, "Button 2 was clicked (will receive reply from server)");
      return alarm_server.client.chsk_send_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("example", "points", "example/points", 1484695187), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "start-time-str", "start-time-str", -66123283), "21_08_2010__09_08_02.948", new cljs.core.Keyword(null, "end-time-str", "end-time-str", -526826578), "21_08_2010__09_10_36.794", new cljs.core.Keyword(null, "metric-name", 
      "metric-name", -319154359), "Oxygen", new cljs.core.Keyword(null, "display-name", "display-name", 694513143), "Greens Garage"], null)], null), 5E3, function(target_el_30355, temp__4657__auto___30354) {
        return function(cb_reply) {
          return alarm_server.client.__GT_output_BANG_.call(null, "Callback reply: %s", cb_reply);
        };
      }(target_el_30355, temp__4657__auto___30354));
    };
  }(target_el_30355, temp__4657__auto___30354));
} else {
}
var temp__4657__auto___30356 = document.getElementById("btn-login");
if (cljs.core.truth_(temp__4657__auto___30356)) {
  var target_el_30357 = temp__4657__auto___30356;
  target_el_30357.addEventListener("click", function(target_el_30357, temp__4657__auto___30356) {
    return function(ev) {
      var user_id = document.getElementById("input-login").value;
      if (clojure.string.blank_QMARK_.call(null, user_id)) {
        return alert("Please enter a user-id first");
      } else {
        alarm_server.client.__GT_output_BANG_.call(null, "Logging in with user-id %s", user_id);
        return taoensso.sente.ajax_lite.call(null, "/login", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "headers", "headers", -835030129), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "X-CSRF-Token", "X-CSRF-Token", 1562992453), (new cljs.core.Keyword(null, "csrf-token", "csrf-token", -1872302856)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        alarm_server.client.chsk_state))], null), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "user-id", "user-id", -206822291), [cljs.core.str(user_id)].join("")], null)], null), function(user_id, target_el_30357, temp__4657__auto___30356) {
          return function(ajax_resp) {
            alarm_server.client.__GT_output_BANG_.call(null, "Ajax login response: %s", ajax_resp);
            var login_successful_QMARK_ = true;
            if (!login_successful_QMARK_) {
              return alarm_server.client.__GT_output_BANG_.call(null, "Login failed");
            } else {
              alarm_server.client.__GT_output_BANG_.call(null, "Login successful");
              return taoensso.sente.chsk_reconnect_BANG_.call(null, alarm_server.client.chsk);
            }
          };
        }(user_id, target_el_30357, temp__4657__auto___30356));
      }
    };
  }(target_el_30357, temp__4657__auto___30356));
} else {
}
alarm_server.client.start_BANG_ = function alarm_server$client$start_BANG_() {
  return alarm_server.client.start_router_BANG_.call(null);
};
if (typeof alarm_server.client._start_once !== "undefined") {
} else {
  alarm_server.client._start_once = alarm_server.client.start_BANG_.call(null);
}
;